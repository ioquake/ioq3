*In compliance with the [GPL-2.0](https://opensource.org/licenses/GPL-2.0) license: I declare that this version of the program contains my modifications, which can be seen through the usual "git" mechanism.*  


2022-03  
Contributor(s):  
Eugene  
>More predictable mesh normals generation  
 


2022-02  
Contributor(s):  
Johan Mattsson  
>Fix memset  
>Fix hex digit  
 


2021-12  
Contributor(s):  
Mickaël Thomas  
>Fix memory corruption in S_TransferPaintBufferWhen using a non-default sound configuration (such as 6 channels), aftera long time (about 4.5hours for 6 channels at 22050 Hz) an overflow willoccur in `S_TransferPaintBuffer`, causing an out of bounds write intothe dma buffer.The problematic line is:```out_idx = (s_paintedtime * dma.channels) % dma.samples;```With `s_paintedtime` large enough, the result of the multiplication willoverflow to a negative number (since `s_paintedtime` is signed), and theindex into the output buffer will be negative.  
 


2021-11  
Contributor(s):  
Zack Middleton  
>Fix passing arguments to VM dylib on Apple M1The engine function pointer to vmMain used variadic arguments butthe vmMain function in the dylib has explicit arguments. Evidentlythe arguments are stored on the stack and/or registers differently.Found by fretn.  
 


2021-10  
Contributor(s):  
Zack Middleton  
Tom Kidd  
>Fix being unable to enter Team Arena CD keyThe CD key defaulted to spaces. Q3 UI uses text overwrite mode bydefault so typing the CD key writes over the spaces. Team Arena UIuses text insert mode by default so to enter the CD key the userhad to delete the spaces or toggling overwrite mode by pressingthe insert key.Now the CD key defaults to empty so in Team Arena you can just typeit in.  
>Merge pull request #482 from tomkidd/vs2019Upgrade to build and run from VS2019  
>Merge pull request #481 from tomkidd/xcodeUpgrades to Xcode project and Apple Silicon support  
>Merge remote-tracking branch 'upstream/main' into vs2019  
>Merge remote-tracking branch 'upstream/main' into xcode  
 


2021-09  
Contributor(s):  
Tom Kidd  
Adam Mizerski  
>Added rudimentary support for automatically finding Microsoft Store version of Quake 3Unlike the Steam and GOG support I'm not doing a registry search as I don't see anything in the registry that would show us the path. If we find more official ways to search for it later we can address that, in the meantime the path is just hardcoded to where it's installed by default.  
>qsort cannot be called with NULLresolves #519  
 


2021-02  
Contributor(s):  
Zack Middleton  
>Restore bots crushing unseen player on q3tourney6 in non-CTFThe affect of my 2017 commit c3e64d380685419f96f71035c961907b9dc09a9a    "Make bots only use q3tourney6 crusher to kill their enemy"made it easier to beat the last map of the Quake 3 single playercampaign. It was mainly intended for CTF and Team Arena gametypesvariants of the map. (Team deathmatch is usually treated as deathmatchwith teams rather than an actual team based gametype.)Restore original difficulty for non-CTF/Team Arena gametypes; bot willcrush player even if bot hasn't seen the player since either they orplayer respawned. [This is not good in CTF where all five bots on theteam suddenly flip around and shoot at the crusher trigger.]Team deathmatch still uses my added behavior of not triggering crusherif there is a teammate under the crusher.  
 


2021-01  
Contributor(s):  
Tom Kidd  
>Upgrades to Xcode project and Apple Silicon support- Reorganized Xcode project- Added missionpack support to Xcode project- Incorporated changes from MaddTheSane for Apple Silicon support https://github.com/maddthesane/ioq3- Built SDL 2.0.14 for Apple Siicon, added to existing SDL dylib- Built SDLMain for Apple Silicon, added to existing libSDL2main.a  
 


2019-11  
Contributor(s):  
Zack Middleton  
>Fix duplicate team join center print for bots and g_teamAutoJoinMy 2017 commit f7c3276 ("Fix g_teamAutoJoin and g_teamForceBalance")caused BroadcastTeamChange() to be run an extra time when bots connect.This caused a duplicate center print message to be sent to all clients.g_teamAutoJoin 1 sent an extra center print when any player or botconnects. Though that is the original behavior from Team Arena.Team set during connection no longer sends broadcast as it will besent later in ClientConnect().Reported by Pascal Brochart (pbrochart) as causing clients to bekicked due to server command overflow if many bots join at thesame time.  
 


2019-10  
Contributor(s):  
Zack Middleton  
>Fix team orders menu not listing clients with lower clientnumsIf bots join before the local client (dedicated server) the bots wouldnot be listed in the Q3A team orders menu and so they could not be givenorders using the menu.The Q3A team orders menu got local client's team while looping throughall clients. Ignoring any bots with clientnum lower than the localclient. Get local client's team before the loop so all bots arelisted.  
>Fix lightning gun handling for corpses and single player podiumsThe lightning trail is fired from the real non-predicted entity forthe local client so it can show the server location. The real cliententity was always used to check if a player entity is firing thelighting gun. This potentially causes corpses and players on singleplayer podiums with lightning gun to render the lightning trail ifthe real (living) client is firing the lightning gun.I'm not aware of this causing any issues without modifying the gamelogic. Corpses have no weapon and it's not possible to fire duringsingle player intermission.  
 


2019-05  
Contributor(s):  
Zack Middleton  
>Restore OpenGL 1.1 support (GL_CLAMP)GL_CLAMP (clamp to border) was changed to GL_CLAMP_TO_EDGE in 2008(f2baf359). In 2018 (ce1d5406) I made OpenGL 1.2 be required sinceGL_CLAMP_TO_EDGE is used.Restore support for GL_CLAMP in order to support OpenGL 1.1 like vanillaQuake 3 does. This should allow using the default Microsoft WindowsGDI Generic OpenGL 1.1 driver (untested but it won't fail the versioncheck at least).From gpuinfo.org, it looks like drivers stopped advertising support forGL_SGIS_texture_edge_clamp so use a version check in addition to theextension check.r_allowExtensions 0 disables using GL_CLAMP_TO_EDGE in the opengl1renderer. GL_CLAMP support wasn't added to the opengl2 renderer.  
 


2019-04  
Contributor(s):  
Zack Middleton  
Ane-Jouke Schat  
>Add current (custom) resolution to Q3 UI video mode listCustom resolution is displayed when entering system options menu andsettings can be changed without being forced to change video resolution.  
>Fix PRINT_ERROR print level missing from CL_RefPrintfIt's used for one message in the OpenGL2 renderer.  
>Override video mode list in Team Arena UIOverride the video mode list in the Team Arena data files with detectedmodes from SDL like in ioquake3's Q3 UI. Add the aspect ratio to theend of the video resolution (i.e., "640x480 (4:3)"). Add the current(custom) video mode to the list.Before when using a custom resolution in the menu you could not changethe video mode using the mouse because the resolution text was blank.Now custom video resolution is displayed and can be clicked.  
 


2018-10  
Contributor(s):  
Zack Middleton  
>Allow binds to use hex values for all key codes  
>Fix SDL audio playback with 16-bit stereo soundMy commit last month "Fix SDL audio playback with surround sound" broke16-bit stereo sound. S_TransferStereo16() still assumed that dma.sampleswas a power of two. I also cleaned up code related to the previouslymentioned commit.  
>Make s_info command display channels instead of stereochannels-1 was displayed as '# stereo', affectively a boolean formono or stereo. However '3 stereo' for quad surround sound doesn'tmake sense.  
>Make Team Arena prevTeamMember command loop around player listTeam Arena HUD's team member info box can be cycled through usingnextTeamMember and prevTeamMember commands. nextTeamMember command loopsaround when end of list is reached but prevTeamMember command got stuckat last entry in list (team overview).  
 


2018-09  
Contributor(s):  
Zack Middleton  
>Fix SDL audio playback with surround soundIf user has surround sound enabled, ioq3 would not play any sound.Fix painting sound buffer for 4/5.1 audio channels. Extra channelscurrently play no audio.  
>Improve finding obelisk entitynum for bot AIBotSetEntityNumForGoal() was checking all entities that are notteam_redobelisk (which is the obelisk visual entity) to find theuntitled obelisk collision entity. This may fail in rare cases wherethere is an another entity within 10 units of the obelisk origin.Failing to find the correct entity may cause bots to not attack theobelisk.Instead add BotSetEntityNumForGoalWithActivator() for looking for theobelisk collision entity by activator classname (team_redobelisk) whichshould be less likely to find the wrong entity.This doesn't affect official Team Arena maps (unknown if it affects anyothers).Reversed strcmp check was reported by Thomas Köppe.  
>Fix predicting entity origin on rotating moverBased on G_TryPushingEntity() in code/game/g_mover.c.  
 


2018-08  
Contributor(s):  
Zack Middleton  
>Fix loading favorites as initial source in server browserWhen I added UIAS_GLOBAL0 in 2017 I missed changing ui_browserMasterrange clamp from 6 to 7.Reported by cdev-tux.  
 


2018-07  
Contributor(s):  
Zack Middleton  
>OpenGL1: Use RE_UploadCinematic() instead of duplicate codeAlready done in opengl2 renderer.  
 


2018-06  
Contributor(s):  
Zack Middleton  
>Make testgun command without argument disable test gun model  
 


2018-05  
Contributor(s):  
Simon McVittie  
Zack Middleton  
>Fix not closing description.txt and fix path seperator0 length description.txt files were not closed.  
>Fix client kicked as unpure when missing the latest cgame/ui pk3sIn 2013 ioquake3 stopped referencing the pk3 file that qagame.qvm wasloaded from. This had the unintended side affect of causingnon-dedicated pure servers to no longer reference a pk3 that onlycontains the three QVM files.Non-dedicated pure servers did not reference the pk3 containing thelatest cgame.qvm so if client did not have the pk3 file they were kickedas unpure instead of the client trying to download the pk3 file.Also make server touch ui.qvm since it's required to pass pure check andmay be separate from cgame.qvm.  
>Fix duplicate bots displayed in Team Arena ingame add bot menuThe key handler allowed going 2 beyond the end of the bot list and thedisplay function clamped to 0 causing the first bot to be shown 3 times.Attempting to add the bot in gametypes < GT_TEAM would fallback toSarge in UI_GetBotNameByNumber() (who isn't the first bot) and gametypes>= GT_TEAM would access characterList past known values (typically NULLbut if teaminfo.txt contained 63 characters it would access out ofbounds memory).  
>Fix console offset while Team Arena voiceMenu is openFix console text being on top of the Tema Arena voice chat head inscreen resolutions higher than 640x480.  
>Isolate the Altivec code so non-Altivec PPC targets can use the same binary.Moved all the code using Altivec intrinsics to separate files. This 
means we can optionally use GCC's -maltivec on just these files, which
are chosen at runtime if the CPU supports Altivec, and compile the rest
without it, making a single binary that has Altivec optimizations but
can still work on G3.

Unlike SSE and similar extensions on x86, there does not seem to be
a way to enable conditional, targeted use of Altivec based on runtime
detection (which is what ioquake3 wants to do) without also giving the
compiler permission to use Altivec in code generation; so to not crash
on CPUs that do not implement Altivec, we'll have to turn it off
altogether, except in translation units that are only entered when
runtime Altivec detection is successful.

This has been tested on Linux PPC (on an Altivec-enabled CPU),
but we may need further work after testing trickles out to other
PowerPC devices and ancient Mac OS X builds.

I did a little work on this patch, but the majority of the effort belongs 
to Simon McVittie (thanks!).  
 


2018-04  
Contributor(s):  
IR4T4  
Ryan C. Gordon  
Zack Middleton  
Eugene C  
>Fix uninitialized bot_goal_t fields  
>Make UI_DrawProportionalString handle NULL stringThis makes the function consistent with UI_DrawString.  
>Fix nullptr dereference in front of nullptr check in FS_CheckPak0Found using LLVM sanitizer. Reported by Dominic "lonkamikaze" Fandreyand David "devnexen" CARLIER.  
>Improvements for dedicated camera followers (team follow1/2)Switching to dedicated camera follower with no possible players tofollow would spawn at the intermission point and display "connectioninterrupted" HUD message. Pmove() was not run for the client sops.commandTime was too far behind. I made it so that dedicated camerafollowers and scoreboard run Pmove() but cannot move (PM_FREEZE).When all players possible to follow leave, the dedicated camera followerwould continue to display the old player state of the player they werefollowing (along with "connection interrupted" HUD message). Unlike theregular case of a spectator following a specific player, dedicatedcamera followers did not reset their player state to the intermissionpoint after the followed player was no longer valid.Now a client can be set as 'team follow1' to automatically switchbetween displaying the intermission point and following a player whenpossible.  
>Fix clearing keys for control in Team Arena UIWhen a control is selected for binding a key, pressing backspace wouldclear the displayed keys in the menu but not actually unbind the keys.  
>Added audio capture support to SDL backend.This lets you speak through VoIP when not using OpenAL. Previously you couldlisten but not speak.  
>Revert "Removed "Color Depth" from q3_ui system settings, it didn't control anything."The r_colorbits cvar still exists and gfxinfo reports it works onDebian Jessie in both git master and building the commit where Iremoved r_colorbits from q3_ui. So it does indeed control something.Maybe I expected 16-bit color to look different? I don't know.This reverts my commit 8e689739f426e01b696ff346b54a6eb9a198e42efrom August 11 2011.  
>Fix possible bot goal state NULL pointer dereference  
>Fix array index in CanDamage() function - discovered by MARTYThe wrong array element was accessed. However the correct element is thesame value so fixing it does not affect gameplay.  
>Support SDL audio devices that require float32 samples.Fixes missing audio when playing on Windows with SDL 2.0.7, which startedusing WASAPI, which demands floating point audio.  
>Fix map list in Team Arena start server menu after entering SP menuIn September 2017 I moved loading arenas.txt/*.arena files from enteringstart server menu to at startup to fix running out of memory in Team ArenaUI after opening the start server menu several times.However, Team Arena completely replaces the uiInfo.mapList array whenswitching between single player and start server menus. So after mychange, entering single player and then entering start server would onlydisplay single player maps. It caused SP endofgame menu to use MP maplist for replay/next map since arenas were loaded after gameinfo.txt.Continue loading arena info at start up to avoid reallocating arena infobut move setting up uiInfo.mapList to when entering the start servermenu.  
>Restore setting r_colorbits in q3_uiIn 2007 in ioquake3 unified-sdl branch (revision 1144) settingr_colorbits in q3_ui was removed but the Color Depth menu option wasstill kept. Setting r_colorbits was not removed from the Team Arena UI.In 2011 I removed the Color Depth menu option from q3_ui as it did notchange any cvars. Yesterday I restored the option not realizing thisand thinking that requesting 16-bit color depth worked.Add setting r_colorbits back to q3_ui so Color Depth menu option worksagain. I changed Color Depth options 'Default' to reset r_stencilbitsinstead of 0 and '32 bit' to use r_stencilbits 8 instead of not changingthe value.However I discovered r_colorbits 16 does not actually work on my system(Debian Jessie x86_64 nvidia). ioquake3 was reporting the requestedvalue instead of the actual obtained value. Fixed in my previous commit.  
>Remove unnecessary NULL pointer check in Cmd_RemoveCommand  
>Fix the behaviour of CVAR_LATCH|CVAR_CHEAT cvarsFix the output/behaviour of CVAR_CHEAT flagged cvars in case they are
also of type CVAR_LATCH (avoid the early latch case return to make it
work as intended).  
>Fix q3history buffer not cleared between mods and OOB-accessLoading a 1024-byte q3history file will fill the whole consoleSaveBufferleaving no space for a string terminator. Com_Parse will read at leastone byte beyond the end of consoleSaveBuffer. The written consolehistory file can only be 1023 bytes (enforced by Q_strcat) so don'tallow loading size of 1024.If switching to a mod with a shorter q3history file, the data inconsoleSaveBuffer that isn't overwritten will be parsed. So alwaysadd a string terminator.String not terminated reported by David "devnexen" CARLIER.  
>Fix shifting bits out of byte in tr_font.cFound using LLVM sanitizer. Reported by Dominic "lonkamikaze" Fandrey.  
>Fix MSG_Read*String*() functions not being able to read last byte from messageThis is exact root of q3msgboom bug http://aluigi.altervista.org/adv/q3msgboom-adv.txt
Unfortunately, server still need this ugly '1022 char limit' hack to support unfixed clients in some degree.
And as it affects MSG_ReadBigString() - unfixed clients can still be crashed by 8191-chars long configstrings that comes with gamestate  
>Fix exploit to reset player by sending wrong serverIdIf client sends wrong serverId but is already active in the world(CS_ACTIVE) don't resend initial gamestate for the map. This isn't avalid situation. The player should be CS_CONNECTED or CS_PRIMED.Resending gamestate to an active player will cause them to respawnwithout dying or disconnecting. If the player had a CTF flag it getslost until the map is changed or restarted.Reported by Ensiform at:    https://bugzilla.icculus.org/show_bug.cgi?id=6324  
>Fix "Going to CS_ZOMBIE for [clientname]" developer messageClient name was cleared before printing the message resulting ina blank name.  
>Make setting r_stencilbits more consistent in Team Arena UII changed Color Depth options 'Default' to reset r_stencilbits insteadof 0 and '32 bit' to use r_stencilbits 8 instead of not changing thevalue. (This matches my q3_ui changes in the previous commit.)Set r_stencilbits when changing graphics presets like when changingColor Depth.  
 


2018-02  
Contributor(s):  
Thomas Köppe  
Zack Middleton  
>Fix timelimit causing an infinite map ending loopA negative timelimit value or a value that would overflow themultiplication by 60000 caused an endless map change/reload.Based on patch and description by @vloup.  
>Make FS_InvalidGameDir() consider subdirectories invalidfs_game shouldn't be a subdirectory and it simplifies the code.  
>[qcommon] Make several zone variables and functions static.  
>[qcommon] Remove dead serialization code  
>Increase q3_ui .arena filename list buffer size to 4096 bytesAllow listing about 273 .arena filenames for loading in q3_ui insteadof only about 136 that fit in a 2048 byte buffer (average 15 bytes perfile name).The buffer for filename list runs out of space long before the bufferfor arena file content does. There is no warning for file list out ofspace but there is a warning for arena file content.This was requested by a user with many maps.  
>Fix negative frag/capturelimit causing an infinite map end loopReported by @vloup.  
>Fix invalid access to cluster 0 in AAS_AreaRouteToGoalArea()Newer versions of BSPC such as 2.1h included with the Quake 3 GPL sourcecode create AAS files containing areas in cluster 0 if the area has noreachabilities.The AAS files included with Quake 3 and Team Arena do not contain areasin cluster 0. It's apparent that BSPC would not create them. Instead itcreated clusters with no reachability areas.It seems the intention was to check if the areanum and goalareanum havereachable areas using AAS_AreaReachability(areanum) everywhere beforecalling AAS_AreaRouteToGoalArea(). This prevents adding cluster 0 tothe routing cache and portal cache. However, it is not checkedeverywhere and including some places in the Game VM.Fix AAS_AreaRouteToGoalArea() instead of trying to wack-a-mole with allthe places that call it.Cluster 0 access reported by Thomas Köppe (github @tkoeppe) as causingcrashes in rare cases.  
 


2018-01  
Contributor(s):  
Thomas Köppe  
Zack Middleton  
>Fix VMs being able to change CVAR_PROTECTED cvarsVM could use Cvar_Register to set a protected cvar as user created andwas then able to use Cvar_Register with CVAR_ROM to change the value.Don't allow Cvar_Register to affect protected cvars and prevent VMsfrom adding internal flags to any cvars (creator, modified, protected,nonexistent).Reported by Noah Metzger (Chomenor).  
>Remove extra plus sign from Huff_Compress()There was an extra plus sign in Huff_Compress(). It wasn't causing anyissues as it does not affect the generated code. Removing it makes thesource code the same as Huff_Decompress().The odd source code was brought to my attention by Tobias Kuehnhammer.  
>Change shift expressions to unsigned types. Shifting signed values toa result that is not representable has undefined behaviour.  
>Don't let VMs change engine latch cvars immediatelyIf a VM increases sv_maxclients while a server is running the enginewill crash. The value should be latched until engine decides to updatethe cvar; the same as when a user sets it.  
>Fix VMs forcing engine latch cvar to update to latched valueA few commits ago I stopped VM's Cvar_Set() from instantly updatinglatched values. Now VM can't call Cvar_Register() afterword to forcelatched value to be used.Reported by Noah Metzger (Chomenor).  
>Don't register fs_game cvar everywhere just to get the value  
>Fix fs_game '..' reading outside of home and base pathVMs could set fs_game to '..' at anytime to access files outside of homeand base path. fs_game sent by server to clients could also be '..' toaccess files outside of home and base path.'..' was not caught by FS_CheckDirTraversal() as it expects filenamesnot a single directory.I've made fs_game be latched to prevent VMs from changing it with nogood way to validate it before it's used. com_basegame and fs_basegameare now latched as well.Additionally, it's now possible to change com_basegame while the engineis running. game_restart or vid_restart will make it take affect.com_homepath is now CVAR_PROTECTED to prevent VMs from changing itto a directory traversal.This requires my two previous commits for preventing VMs from changingengine latch cvars and only Cvar_Get fs_game in FS_Startup (so CVAR_INITisn't added in serveral other places).Reported by Noah Metzger (Chomenor).  
>Revert my recent cvar latch changesMy cvar latch system changes prevent the Game VM from changingg_gametype when the value is out of range due to it being registed inthe engine. It's been pointed out as fragile method of security, whichwas still exploitable, by Noah Metzger (Chomenor). It doesn't seem likethis is working out to be a good solution.The issue of fs_game '..' on server being relicated on client viasysteminfo exploit is still fixed as it's not affected by latch.There are a few cases from current values of fs_game are used whichideally should use fs_gamedir char array which has been validated.Revert "Don't let VMs change engine latch cvars immediately"Partially revert "Fix fs_game '..' reading outside of home and base path"Revert "Fix VMs forcing engine latch cvar to update to latched value"  
>Use standard offsetof facility. Dereferencing a null pointer resultsin undefined behaviour.  
 


2017-12  
Contributor(s):  
Eugene C  
David CARLIER  
Zack Middleton  
>Don't allow qagame module to create "botlib.log" at ANY filesystem location  
>Make FS_BuildOSPath for botlib.log consistent with typical usageI don't think anywhere else uses "" to mean current game directory.Though it's only an issue for my fork where I removed that behavior.  
>Fix GCC 6 misleading-indentation warning  
>fix a few potential buffer overwrite in Game VM  
 


2017-11  
Contributor(s):  
Edward Betts  
Zack Middleton  
>Fix my previous commit about -1 ammo  
>Fix invalid model frame developer warnings in Team ArenaModels for Team Arena's holdable medkit and invulnerability effects usethe frames numbers from the player's torso but the actual models onlyhave one frame (0).  
>Fix Team Arena server refresh time formatMake minute less than 10 have a leading 0. Change '7:1' to '7:01'.  
>Fix -1 (unlimited) ammo decreasing ammo time remainingGauntlet and Grappling Hook use -1 ammo. Gauntlet is excluded fromthe check ammo loop but Grappling Hook causes ammo time remainingto decrease 200 milliseconds.The out of ammo check tests time remaining is equal to zero. Thismeans carrying Grappling Hook and out of ammo will have negativetime remaining which results in the low ammo message being displayedinstead of out of ammo.  
>Correct spelling mistakes.  
>Correct spelling of two more wordsThanks Undeference for pointing out abreviations.  
 


2017-10  
Contributor(s):  
Thomas Köppe  
Zack Middleton  
>Fix memory leak in (unused) AAS_FloodAreas()  
>Don't send team overlay info to bots  
>[qcommon] Use unsigned types where wrapping arithmetic is intendedThe use of signed types in these expressions lead to overflow, hence undefined behaviour. The "sum" aggregator in Com_TouchMemory isn't even used (and presumbably just exists to inhibit optimizations from removing the memory access).  
>Don't redefine MAX_PATH in bot code  
>[botlib/be_aas_def.h] Change array size from MAX_PATH to MAX_QPATHThe array is part of a structure and should have a fixed size that does
not depend on inclusion order.  
 


2017-09  
Contributor(s):  
Zack Middleton  
>Don't draw crosshair 0 in Team Arena setup menuDon't draw crosshair 0 in Team Arena setup menu. It isn't drawnin CGame. Wrap cg_drawCrosshair in missionpack menu like CGameinstead of treating as index 0 which is no longer drawn.  
>Fix hit accuracy stats for lightning gun and shotgun killsIf a lightning bolt killed a player or the first shotgun pellet thathit a player killed them, the shot was not counted as accurate.Check if shot player is alive for hit accuracy before dealing damage.  
>Fix listen server sending snapshots each client frameRunning a server using the client engine would send server snapshotsto loopback and LAN clients each client frame (com_maxfps).This causes excessive network traffic and likely does not provide newinformation to the clients because SV_Frame() won't have run betweenthe extra snapshots.This commit restores the original behavior of respecting local/LANclient's snaps userinfo and sv_fps. The issue was introduced by thefollowing commit:    Commit ac30d86db01a43130d2c9ff6fe31d6135d8e2592    From: Thilo Schulz    Date: Wed, 13 Jul 2011 17:11:30 +0000    Subject: - Improve snapshot rate and data rate controlReported by Eugene C.  
>Limit ui_smallFont/ui_bigFont/cg_noTaunt cvars to missionpackui_smallFont and ui_bigFont are for missionpack HUD font sizeselection. cg_noTaunt disables missionpack taunt voice chats.  
>Update UI player animation handling to match CGameFix "Error parsing animation file" messages in UI. Caused by fixing thehandling of missing tokens in animation.cfg parser in a past commit.Fix new Team Arena torso animation frame numbers in UI.Add support for fixedtorso and fixedlegs keywords.Add support for reversed animations (negative numframes).  
>Don't reload arenas.txt/*.arena files in Team Arena UIEntering Team Arena's start server or in-game callvote menu causesarenas to be reloaded. The existing memory is not freed so aftera entering the menus a few times the UI runs out of memory andcrashes.Just load arenas once when the UI loads like in q3_ui.  
>Fix going to previous browser source in q3_uiIt wasn't possible to go to previous source from favorites ifsv_master5 cvar wasn't set.  
>Make map names in q3_ui map select menu be uppercaseMakes map names match on both pages of start server menu.  
>Fix team chat box for spectatorsMake spectators use green background for team chat box when followingplayers. The team chat messages are from spectators not the team ofthe followed player.Make spectators draw team chat box even when not following a player.  
>Fix loading renderer DLLs on Windows x86After 'Fix floating point precision loss in renderer', Windows x86client won't load the renderer DLLs. The problem is a 64 bit modulus.I couldn't find any reports of this online. However, client withbuilt-in renderer worked with the 64 bit modulus.Only tested with mingw-w64.  
>Fix crash when out of memory in Team Arena's String_Alloc  
 


2017-08  
Contributor(s):  
Tobias Kuehnhammer  
Zack Middleton  
>Make bots use crusher on other q3tourney6 mapsMake bots activate crusher on q3tourney6_ctf and mpq3tourney6.Check if player is inside the crush bounds instead of below thecrusher. There is a jumppad the goes under it in mpq3tourney6.  
>Check for all command separators in callTeamVoteMake callTeamVote check for all command separators like in callVote.It's not exploitable as the only vote option (leader) always uses aninteger argument.Also the ioquake3 engine remove command separators from client gamecommands in Cmd_Args_Sanitize().  
>Add spawnflags to QUAKED for trigger_multiple  
>Remove CVAR_PROTECTED from cl_rendererSetting cl_renderer isn't a security concern and valid behavior fora menu to provide. Sys_LoadDLL ensures only libries are loaded andengine prevents QVMs from writing them.  
>Make warmup in Team Deathmatch wait for players to join both teamsReported by Cyrax.  
>Fix floating point precision loss in renderer [part 2]Fix floatTime using float precision instead of double using GCC.Fix R_BindAnimatedImage to be in sync with function table.Fix vertexDeform bulge, vertexDeform normals, noise wave functionat high level time.Revert unnecessary float -> double conversions.  
>Fix crash when pmove_msec is 0When pmove_fixed is set to 1, setting pmove_msec to 0 would crash.  
>Make bots only use q3tourney6 crusher to kill their enemyOnly use the crusher for killing the bot's enemy. This doesn'taffect 1v1 very much but prevents the whole team of bots in CTFfrom suddenly shooting at the crusher button. Entering the crusherbounds was basically instant death.  
>Fix compiling Cmd_CallTeamVote_f  
>Fix/improve buffer overflow in MSG_ReadBits/MSG_WriteBitsPrevent reading past end of message in MSG_ReadBits. If read pastend of msg->data buffer (16348 bytes) the engine could SEGFAULT.Make MSG_WriteBits use an exact buffer overflow check instead ofpossibly failing with a few bytes left.  
>Fix floating point precision loss in renderer [part 1]Patch for https://bugzilla.icculus.org/show_bug.cgi?id=5931 byEugene C. from 2013 plus recent fix for tcMod rotate.I merged the changes into the OpenGL2 renderer though the fix fortcMod turb doesn't translate.  
>Combine mouse movement events in event queueFixes 'Com_QueueEvent: overflow' spam after hitch / map load.Based on patch by @ec-.  
>Remove newlines from chat messages in Game VMThis has no affect due to ioquake3 engine already removing commandseparators (which includes newlines) in Cmd_Args_Sanitize().  
>Improve client input responsivenessMove sampling input to the other side of framerate limiter.Thanks to Alexander "wareya" Nadeau and Juraj "youurayy" Vitko forpointing this out.  
>Fix friction in AAS_ClientMovementPredictionGround and water friction were reversed.  
 


2017-07  
Contributor(s):  
Zack Middleton  
Brenton Bostick  
>Make Team Arena UI aspect correct in widescreen  
>Add score bonus for defending the flag carrier in 1 Flag CTFSet flag_pw to neutral flag instead of using CTF value for red orblue flag so that flag carrier is detected correctly.  
>Fix nonresponsive favorites in q3_ui having no hostnameArenaServers_InsertFavorites() fails to do anything because favoritesare added to the server list even if nonresponsive.Set nonresponsive favorite server hostname to address.  
>Restore not giving defense score bonus to flag carrierThe Team Arena code for giving defense bonus for fragging playerwho recently damaged a skull carrier unintentionally applied tothe flag carrier.The skull carrier case would of been handled by the flag carrierblock above it. However, Harvest mode doesn't callTeam_CheckHurtCarrier() so the skull carrier defense bonus doesnot work.This restores the pre-Team Arena behavior of not giving defensescore bonus to flag carrier.  
>Add warnings for animMap and videoMap shader keywords  
>Fix warning about using abs() with floats (#222)  
>Fix misleading-indentation warnings in cl_cin.c  
>Allow changing q3_ui server source during refreshThis makes it easier to scroll through the list, especially since"Local" source now refreshes until a local server is found.  
>Make UI continue searching for local servers until foundWhen refreshing local servers, Team Arean UI never changed the statusmessage when it timed out. This gave a false impression it was stilllooking for servers.Let's continue looking for local servers in q3_ui and Team Arena UIuntil one is found.  
>Fix q3_ui cursor going off screen in widescreen  
>Make 'globalservers 0' fetch all mastersThis commit fixes the vanilla Q3 UI VMs not displaying a server list
when id Software's master server is down.

Originally master 0 for the globalservers command was Internet and
master 1 was MPlayer (defunct). In 2008 ioquake3 changed it so that
master 0 to 4 were five separate master servers with no affect on
original Quake3/Team Arena UI VMs; they continued to get the server
list from master.quake3arena.com.

id Software's master server (master.quake3arena.com) goes down
occasionally. Using ioq3's UI VM additional master servers can be
accessed but players using the original UI VMs are unable to get a
server list.

In order to fix the original UI VMs in Quake3/Team Arena's pk3s this
commit makes 'globalservers 0' fetch all master servers. So players
get a combined list of id Software's and ioquake3's master list. Or
just ioquake3's list if id Software's master is down.

Getting lists from individual master servers using globalservers has
changed from 0 through 4 to 1 through 5 to accommodate using 0 for
other purposes. This commit modifies ioq3's UI code to support the new
values for globalservers command.

A side affect of these changes is that UI VMs based on ioq3 since 2008
will have Internet1 fetch all master servers and Internet2 request
sv_master1 instead of sv_master2 and so on. It may be worth noting that
getting server list from masters 3-5 could not be done using ioq3's UI
before 2011.  
>Silence g_util.c warning about set but not read variableProbably caused by my commit on June 2 2017.  commit 4006358492b800db0602ed0eca600166caec22e4  Fix spawn/freed entity logic (specifically harvester skulls)  
>Echo server say/tell/sayto message to console  
>Allow more than 32 surfaces in skin filesModels don't have a surface limit; skins shouldn't either. Some playermodels require more than 32 surfaces since vanilla Quake 3 did notenforce the limit.Skins are now limited to 256 surfaces because having no limit wouldrequire parsing the skin file twice. The skin surfaces are dynamicallyallocated so it doesn't increase memory usage when less surfacesare used.  
>Fix score bonus for defending the flag carrier in CTFFix copy-paste error in the original Quake 3 code. The wrong valuesare used for v1 and v2. v2 was previously set to distance of attackerto flag base; which should be handled already.The game now gives defense score bonus to player when they frag anenemy near their team's flag carrier while the player is more than1000 units from the flag carrier.This may also fix not giving defense bonus when near carrier due tochecking if carrier and enemy (instead of attacker) are in PVS.Found by @Razish.  
 


2017-06  
Contributor(s):  
Tobias Kuehnhammer  
Zack Middleton  
>Only auto update empty Team Arena internet server cachePreviously tested a mod cvar which may be wrong when multiplemods are involved or config is reset. Let's check the servercache's internet server count directly.  
>Fix score info being dropped by serverServer drops reliable command string if it's length is more than 1022.  
>Make Team Arena win logic handle more game types/blue teamThe Team Arena menu uses red team for single player but q3_ui(and mods could) use blue. Also handle all the game types, notjust the ones used by Team Arena. Fixes FFA and Team DM.  
>Split G_AddRandomBot into multiple functions  
>Don't start game entity loops at index 1  
>Make cg_teamChatsOnly only affect team gametypesAlso made it so that 'tell voice chats' are always allowed forconsistancy with 'tell chat'.Reported by Tobias Kuehnhammer.  
>Add con_autochat and con_autoclear cvars  
>Allow spectators to use noclip cheat  
>Fix comment for CG_SetInitialSnapshot  
>Unify checks for missing COM_Parse() token  
>Fix levelshot displayed in Team Arena server browserLevelshot was not updated when server list was initially loaded orserver list was sorted.  
>Fix Coverity warning that endVelocity is uninitialized  
>Fix notarget cheatBots no longer target players in 'no target mode'.  
>Make 'addbot random' command select a random bot infoIt reuses the random bot selection code for bot_minplayers cvar.  
>Remove unused define MAX_COMMANDARGUMENTS from be_ea.c  
>Make bots stop attacking player after disconnectBots did not notice player disconnected, so they kept attackingthe last known position.Checking if entity is valid in BotEntityVisible might fix othersimilar issues too.  
>Range check client number for trap_BotUserCommand  
>Fix g_teamAutoJoin and g_teamForceBalanceThere are various issues caused by not knowing the initial team forthe local client and bots when they connect. This is can be reproducedby starting a team game from the main menu.When g_teamAutoJoin is enabled, bots and local client join a randomteam at connect and then execute their team command a few frameslater. This may result in the player being killed if they specify adifferent team. In Team Arena's Harvester mode this causes harvesterskulls to be spawned at the beginning of the game.When g_teamForceBalance is enabled, the local client and bots may notbe able to join their desired team. This may result in them beingspectators. If g_teamAutoJoin is also enabled they may be left onthe opposite (red/blue) team they were meant to join.There is a hack for including bot's team in their player info string(used by cgame for which team skin to use) before the bot joinstheir desired team. Bots aren't guaranteed to join their desired team(as may happen when both g_teamAutoJoin and g_teamForceBalance areenabled) so clients may see them as being on the wrong team!----Add teampref userinfo option for team preference. If teampref is setit will be used for attempting to join the team immediately at connect.Bots now join team at connect using teampref userinfo. So removethe hack for setting bot's team in player info string before the botjoins the team.To avoid the client sending teampref userinfo to all network servers,the local client uses a g_localTeamPref cvar. The g_localTeamPrefcvar is cleared after it's used so it doesn't get used when startinganother server later. Another reason not to use a teampref userinfocvar is there isn't a reliable way to clear it in CGame/UI which arelikely loaded from baseq3 pk3.Make it so g_teamAutoJoin doesn't affect clients who specifyteampref. If teampref is invalid, the client will join a random teamlike g_teamAutoJoin.Don't apply g_teamForceBalance to the local client or bots. Otherwisethey may be left as spectators when starting team game from menu.The start server menus use team command and g_localTeamPref to setthe human player's team. This way it's compatible with vanilla Q3game VMs and the new setting team at connect feature.  
>Make server browser default to InternetThe default use to be local. In q3_ui you have to press spacebar orwait for scan to time out before you can switch to Internet.  
>Use const char pointers when possible in botlib's libvar code  
>Stop caching sv_maxclients in bot code  
>Make Team Arena server list sub-sort clients by max clientsThe player column in Team Arena UI lists clients and max clientsin format of "clients [maxclients]". When sorting by clients themax clients is ignored which results in player column beingdisorganized.When servers have the same number of clients, sort based on maxclients. Otherwise client sort is sub-sorted based on order ofgetinfo responses (ping).  
>Draw disconnect icon over lagometer in Team Arena tooThe blinking disconnect icon is drawn over lagometer in Q3.Team Arena moved the lagometer location. Now let's draw thedisconnect icon over lagometer in Team Arena too!  
>Fix random bot not looking for bots by funnameQuake 3's Anarki bot has a 'funname' with colors in it.This commit fixes Anarki not being detected as in use.  
>Add range check for bot skill in addbot commandAdding a bot with skill of 0 doesn't show icon on hud.  
>Fix not adding random bot when all bot info are in use on teamIf there are two bot infos in scripts/bots.txt then each team canonly add two random bots via bot_minplayers or addbot random.Pick random bot info from least used bot infos instead of only onesthat are used by zero players. That way a random bot can always beadded to the game.This rarely affected Quake 3 since there is 32 bot infos. It couldeasily affect new games though.  
>Fix hitch when opening Team Arena find friend menuOpening the find friend menu in the Team Arena server browserhitches due to trying to resolve blank host names.In UI_BuildFindPlayerList() status requests that are initial orcompleted state or have timed out get reset. This means it startswith MAX_SERVERSTATUSREQUESTS (16) blank host names. So just ignorethem in UI_GetServerStatusInfo().  
>Fix overdraw in CG_DrawRectIt was noticeable in the corners when alpha was less than 1.  
>Fix (unused) check for map restart in CG_TransitionSnapshot  
>Fix favorite servers player count message in Team Arena UIThe console message "1 servers listed in browser with 2 players."would count clients multiple times when viewing favorite servers.When viewing favorite servers in Team Arena UI, servers are addedto list before getting ping response. Each time UI checked pingsand inserted server it incremented the player count.  
>Fix spawn/freed entity logic (specifically harvester skulls)- Actually use the second 'force' pass in G_Spawn when out ofavailable slots.- Make G_EntitiesFree return qtrue if we can open a new slot.(Only used when spawning Harvester skulls.)Fixes not spawning Harvester skulls when there are no 'open freedslots', but we have other slots available to open.  
>Don't build score info for bots, they don't parse it  
>Show client's name in callvote clientkick vote display messageMake callvote always kick by client num so player can't rename toavoid being kicked. Don't allow calling a vote to kick host ornon-existent players.  
>Have spectator always be in first personFlying around in third person with no body is weird.  
>Fix filtering favorite servers in Team Arena UIFilter favorite servers based on cached server info and new infoinstead of only the cached info.If cached server info is filtered out, don't add it to server listbut wait for getinfo response before marking server as invisible.  
>Remove unneeded 'angles' variables/clearing in ai_dmq3.c  
>Fix joining team when starting local team play serverAKA fix joining team in Team Arena single player. Though it alsoaffects starting Q3 skirmish in team dm or ctf modes.  
>Check for unlimited time power up using INT_MAXIt is possible for a power up to exceed 999 seconds without it beingunlimited time.  
>Fix Team Arena team base models not dropping to floorTeam Arena's Overload gametype has red and blue team Obelisk baseobjects. It uses separate entities for visual and damage. Only thedamageable entity was dropped to floor. Leaving model floating offthe ground.Team Arena's Harvester base has the same problem. Model entityfloats in air but trigger entity drops to floor.Drop all Team Arena team base models to floor. Fixes CTF, 1Flag,Overload, and Harvester base models.  
>Don't pick duplicate random bots until all bot types are addedDon't add the same bot to multiple teams until there are as manybots on the server as there are bot types.Previously each team would have unique bots until all bot typeswere added to the team but other teams may have the same bot. Nowthere will not be any duplicate bots until there are more bots thanbot types.Now Quake 3 (32 bot types) in 16 vs 16 bot CTF will not containduplicate bot types. (You have to increase memory in code/game/g_mem.c in order to add 32 bots though.)I had to change G_AddRandomBot() to use 'addbot random' or else thesame bot could be added to red and blue teams. The bot was selectedand stored in console command buffer so game doesn't know not toselect the bot again.  
>Fix "brought in 1 skulls" Harvester messageUse correct singular/plural form of skulls for Harvester's brought inskulls message.Reported by Tobias.  
>Enable tourney scoreboard in Team Arena"/team score" draws an oversized scoreboard in Q3. In Team Arenait draws nothing. They probably intended to replace it with thenew .menu UI. But since it didn't happen, go ahead and use the Q3tournament scoreboard.  
>Only allow connectionless print/echo from server/rcon addressReported by Ensiform.  
>Fix bot_minplayers passing delay as team to addbot in non-team gametypes  
>Fix duplicate (delayed) random bots being choosenCount delayed bots when looking for least used bot infos for decidingwhich bot to add.  
>Fix strncpy usage in botlibAll usage of strncpy in botlib should now either set stringterminator or use Q_strncpyz.  
>Replace constant value with UIAS_GLOBAL1  
>Don't copy p->org to itself in cg_particles.c  
>Fix 'missing token' in parsers for animations.cfg  
>Add mouse wheel support to UI list boxesAllows scrolling server browser list and some other lists.  
>Don't use uninitialized ps from BotAI_GetClientStateIf BotAI_GetPlayerState returns qfalse, ps is untouched and insome cases means uninitialized. So don't use it if not valid.  
>Automatically get initial Internet servers in Team Arena UIHaving to manually request the list, with two buttons (get newlist, refresh list) is somewhat confusing. Also since it lookslike there are no servers, users might not try to figure outhow to get the server list.The first time viewing a master server list in Team Arena UI,automatically request a new server list. After that the cachewill be available with a timestamp of the last refresh time.I think this will make it easier to understand how the menuworks.This may cause unneeded updating of the server cache because thelast refresh timestamp is per-fs_game but the server cache isshared by all games. This will only occur once for each gamethough so it's not a big concern.  
>Check delayed bot's team when counting bots for bot_minplayersnote: This requires my previous commit that added teampref userinfoso that bots choose correct team in ClientConnect.  
>Fix comment in BotAIPredictObstacles  
 


2017-05  
Contributor(s):  
Zack Middleton  
>Merge pull request #270 from mickael9/unused-warningDon't include (mission)pak_checksums in standalone build  
>Merge pull request #254 from WolfWings/patch-1Redundant #ifndef MISSIONPACK block  
>Merge pull request #199 from UniQP/typosFix some typos in comments  
>Fix compiling debug code for writing VoIP data  
>Merge pull request #198 from UniQP/deadvariableRemove dead variables  
>Don't repeat alt+enter key eventHolding alt+enter should not continuously toggle fullscreen mode.  
>Don't load libraries with non-standard file extensionsAlso don't allow writting files ending in a library extension suchas ".so.0" or ".dylib.0".  
>Save connect and playdemo argument before calling CL_Disconnect()Save argument instead of using a pointer to cmd token memory thatmight be overwritten when Cmd_TokenizeString() is called.No known method for causing the issue without engine changes.Cmd_TokenizeString() is called by FS_PureServerSetReferencedPaks()in CL_Disconnect() but it's not an issue because the string isblank.Thanks @mickael9.  
>Merge pull request #256 from WolfWings/patch-4...too much MISSIONPACK ifdeffery.  
>Refresh master server address cache every 24 hoursResolve master server addresses every 24 hours instead of keepingresult forever. Don't clear sv_master[1-5] cvar if the address failsto resolve; it might work later.  
 


2017-04  
Contributor(s):  
Tim Angus  
Max Crofts  
Zack Middleton  
>Improve FS_GetModList- Paths to search for mods are now specified in an array- Mods can now consist solely of ".pk3dir" folders and still beconsidered valid- The function now has a consistent style  
>Merge pull request #286 from maxcrofts/install-pathUpdate install path detection  
>Merge pull request #288 from maxcrofts/list-pk3dir-modsImprove FS_GetModList  
>Detect GOG install path  
>Don't start a vote after vote passed for map changeProcessing a callvote command after a vote passed to change maps buthas not been executed yet will result in 1) map change immediatelyhappening 2) after new map loads players have vote HUD messages butGame VM doesn't have a vote in progress. The phantom vote status willonly be removed if players start a new vote or run vid_restart.The underlying issue is that a second callvote sets vote configstrings but a map change is executed before they are sent to clients.Resulting in clients getting "cs" reliable commands with the configstring changes _after_ the map change. Out of sync config strings.Even if the underlying issue was fixed, the second vote would be lost.So it's best to not force a map change to happen immediately anyway.Reported by Tobias Kuehnhammer.  
 


2017-03  
Contributor(s):  
Mickaël Thomas  
Eugene C  
ec-  
SmileTheory  
>Don't include (mission)pak_checksums in standalone buildAvoids a compiler warning  
>Merge some file writing extension checks from OpenJK.Thanks Ensiform.https://github.com/JACoders/OpenJK/commit/05928a57f9e4aae15a3bd0https://github.com/JACoders/OpenJK/commit/ef124fd0fc48af164581176  
>Fix comment  
>Don't load .pk3s as .dlls, and don't load user config files from .pk3s.  
>Fill in filename in Com_WriteConfig_f() before checking extension.Thanks BartoCH for pointing out.  
>Allow unaligned load/store in QVM interpreter/x86 compiler constructions like (dataMask & ~3) was used to protect against out-of-bound load/store when address is 4-byte closer to dataMask but at the same time it effectively cut low address bits for ALL load/store operations which is totally wrong in terms of conformance to ALLOWED (i.e. generated by q3lcc from C sources) low-level operations like packed binary data parsing  
>Remove FS_Read2().Functionally the same as FS_Read().Streaming functionality was removed in https://github.com/ioquake/ioq3/commit/672cfbf16f83fb67f6ce9bb1d3571dc32a5b3083 but flag remained.  
 


2017-02  
Contributor(s):  
Zack Middleton  
Wolf  
>Redundant #ifndef MISSIONPACK blockMISSIONPACK define is already required for this file or else it triggers an #error at the top of the file - removing redundant test that will never occur.  
>Fix source filename/includepath length in l_precomp.csource_t filename and includepath are 1024 but MAX_PATH is 64. As far asI know the paths don't exceed that so this probably doesn't fix anything.Similar changes were already made to l_script.c so this makes thingsconsistent. This was found because it was fixed in RTCW's code.  
>Fix command line variables not being set correctly+seta, +sets, and +setu were ignored because Com_AddStartupCommandsthought Com_StartupVariable handled it.+set didn't allow value to be multiple tokens which due to Unix shellunintuitively removing quotes causes the variable to only be set tothe first token. This could be worked around by escaping quotes    ioq3ded +set g_motd \"hello world\"but it doesn't match behavior of other start up commands (which nowincludes seta, sets, and setu) that use all tokens.  
>...too much MISSIONPACK ifdeffery.  
>Fix swapping AAS bboxesFound in RTCW SP.  
 


2017-01  
Contributor(s):  
Tim Angus  
Zachary J. Slater  
>Merge pull request #230 from fmwviormv/patch-1reset samplefrac to 8-bits, to prevent overflow  
>Merge pull request #227 from smcv/old-style-declarationDon't use mostly obsolete 'register' keyword (Merge or get off the pot.)  
>Merge pull request #99 from openmoh/ioq3-SSE-msgrephrase SSE availability message (thanks)  
 


2016-11  
Contributor(s):  
Dominic Fandrey  
>Add missing address operator in cm_polylib.cAlso avoid nullptr dereference.  
>Fix signed bit operations in MSG_ReadBits  
>OpenGL1: Decay float[8] to float * in tr_marks.c  
>Fix undefined behaviour due to shifting signed in snd_mem.c  
>Fix shift into sign in cl_cin.c  
 


2016-10  
Contributor(s):  
Zack Middleton  
fmwviormv  
SmileTheory  
>Handle ERR_DROP during Com_GameRestartIf ERR_DROP during Com_GameRestart after shutting down client, Com_Errorneeds to restart the client otherwise there is just a black window. Also,clear the game restarting flag in Com_Error otherwise it's not possible torun Com_GameRestart again later.I don't know of a way to trigger ERR_DROP, in FS_Restart for instance,without engine changes however.  
>reset samplefrac to 8-bits, to prevent overflowissue: https://github.com/ioquake/ioq3/issues/106  
>Avoid shuting down opus voip codec multiple times  
>Fix removing/creating PID file for base game when switching to/from mods  
>Default cl_renderer to opengl2.  
>Offer post-crash safe settings on a per-mod basisOffer to restore settings when loading a mod that crashed, not the firstmod that gets loaded after a crash. Before the first mod loaded (usuallybaseq3) would get the option even if missionpack or some other mod crashed.- Make pid files separate for each fs_game.- Remove/write pid every time switching fs_game.- Create path before writing pid file otherwise it fails on first run.- Show mod description.txt or fs_game instead of engine name in abnormal  exit message.- Check com_fullyInitialized in Com_Error before removing PID,  otherwise "ioquake3 --version" segfaults when accessing fs_gamevar->string  (plus not fully initialized isn't really a normal shutdown).  
 


2016-09  
Contributor(s):  
Tim Angus  
Simon McVittie  
Thomas Köppe  
SmileTheory  
>snd_wavelet: avoid undefined pointer below array boundsGiven an array b[] of length n, pointers to &b[0]..&b[n] are defined(where only &b[0]..&b[n-1] can be validly dereferenced). &b[-1], orequivalently b-1, is not something we can use in valid Standard C.gcc 6 diagnoses this as:code/client/snd_wavelet.c:33:9: warning: array subscript is below array bounds [-Warray-bounds]and might take this undefined behaviour as permission to emit"more efficient" object code that is not what the author expected,for example nothing at all. Use a macro to fake a 1-based array instead.  
>Merge pull request #226 from smcv/underflowFix array underflow compiler warnings  
>[code/botlib/l_precomp.c] Fix string buffer overflow  
>Avoid 'register' declarationsgcc 6 with -Wall -Wextra warns:code/botlib/l_precomp.c: In function ‘PC_NameHash’:code/botlib/l_precomp.c:551:2: warning: ‘register’ is not at beginning of declaration [-Wold-style-declaration]  int register hash, i;  ^~~Modern compilers either ignore the register storage class whengenerating code, or generate better code without it, so just removemost of them.The remaining uses are in third-party bundled libraries (libjpeg, zlib),and in a PowerPC-specific inline function consisting of inlineassembler (because I'm not 100% confident that it doesn't havesome practical use there).  
>Fix undefined behavior when shifting left by 32.https://bugzilla.icculus.org/show_bug.cgi?id=6432  
>Merge pull request #220 from tkoeppe/shift[qcommon/msg.c] Remove dead code  
>[qcommon/msg.c] Remove dead code (which had undefined behaviour)  
>Merge pull request #223 from smcv/seperatingFix mis-spellings of "separating" as "seperating"  
>Merge pull request #221 from tkoeppe/strncpy[code/botlib/l_precomp.c] Fix string buffer overflow  
>Fix mis-spellings of "separating" as "seperating"Found by Debian's Lintian tool.  
>Merge pull request #225 from smcv/reproducible-datePick up date from SOURCE_DATE_EPOCH, for reproducible builds  
>UI_BuildFindPlayerList: avoid array underflowThis function is used in the Team Arena menusI don't think it's actually possible to reach this line withfoundPlayerServerNames < 1, because by the time we get here we haveset it to 1 + the actual number of servers; but if we did, it wouldclearly underflow into foundPlayerServerNames[-1], which would beundefined behaviour. gcc 6 diagnoses this with a warning:code/ui/ui_main.c: In function ‘UI_BuildFindPlayerList’:code/ui/ui_main.c:4138:16: warning: array subscript is below array bounds [-Warray-bounds]Also correct the sizeof() invocation to make it more obviouslycorrect (in fact the buffers for names and addresses happen to bothbe of size MAX_ADDRESSLENGTH, so it was fine, but it's good to beobvious).  
>UI_BuildFindPlayerList: make a sizeof() more obviously correctAs with the other branch of the if/else, each element offoundPlayerServerNames is in fact the same size as each element offoundPlayerServerAddresses, so it was fine; but it's better to makeit obvious that we are using the right array sizes.  
 


2016-08  
Contributor(s):  
Tim Angus  
Thomas Köppe  
SmileTheory  
>Merge pull request #213 from tkoeppe/abs[game/ai_main.c] Use floating-point fabs() for floating-point values  
>Better gamepad support.  
>[game/ai_main.c] Use floating-point fabs() for floating-point values  
>Better defaults for joystick axes.These changed from SDL1->SDL2 afaict.  
 


2016-07  
Contributor(s):  
Sebastian Buchwald  
Tim Angus  
Thomas Köppe  
Zack Middleton  
>Merge pull request #195 from tkoeppe/intfixFix signedness and float/int issues with abs()  
>[botlib] Use floating point absolute value rather than truncate to integer  
>Remove dead variables  
>Fix bot team order to kill last player it killedBot's lastkilledplayer was set to -1 after carrying out an ordered kill.Later in BotChat_Random() the PlayerName function was passed -1 whichcaused a "Error: PlayerName: playernum out of range" message.I think the reason it was set to negative one is so that if the bot isordered to kill the player again, the bot will not say it's done anddrop the goal. Though, if the bot killed the player based on it's owndecision, it will just say it's done and drop the goal (bug?).Let's check the time of the last kill to see if it happened since theteam order was received instead of setting lastkilledplayer to -1after completing the team ordered kill. This fixes bot dropping goalif target player was the last player they killed and the PlayerNameout of range error.  
>Merge pull request #197 from tkoeppe/null[null/null_glimp.c] Fix bitrot in null impl  
>[null/null_glimp.c] Fix up bitrot in null impl  
>Fix some typos in comments  
 


2016-06  
Contributor(s):  
Thilo Schulz  
Zachary J. Slater  
Zack Middleton  
Victor Roemer  
>Merge pull request #190 from wtfbbqhax/OSX_64bit_buildsFix Makefile for OSX  
>Only play logo/intro if their filenames have been defined in q_shared.h  
>Fix typo of empty in ai_main.c  
>Missed this Cvar_Get() on com_introPlayed  
>Fix Makefile for OSXBump base SDK from 10.5 -> 10.7Just use the builtin __APPLE__  
>Prevent CL_RunCinematic from reading cinTable[-1]At the end of CL_RunCinematic, RoQShutdown sets currentHandle to -1.This causes the return at the end to be return cinTable[-1].status.Use return FMV_EOF when RoQShutdown is called.I think FMV_EOF should be returned instead of FMV_IDLE which is set inRoQShutdown because RoQShutdown is clearing out state so it can be reusedfor a new cinematic.The return value isn't actually read by the ioq3 client, renderers,cgame, or ui.  
 


2016-05  
Contributor(s):  
Zack Middleton  
>Don't have clients use private slots when sv_privatePassword is unset  
>Improve keyboard/joystick input in Team Arena UIMake Yes/No, Multi, Slider, and Bind items allow enter key to changevalue without mouse over item. Add support for left and right arrow keysand joystick button 1-4 to Yes/No, Multi, and Slider and many itemspecific 'ownerdraw' key handlers.Listbox still requires mouse hover and Team Arena main menu requiresmouse hover to get anywhere...Enabling K_JOY1-4 to select in default key handler also caused additionalmouse button (K_AUX1-16) to select, which is done in q3_ui as well. Bothhandle K_AUX equally badly (not treated as a mouse button and not handledby item specific key handlers), so it's probably fine.  
>Fix warnings that names passed to Name_PlayerNameCompletion is not const  
>Explicitly set cull type for skyboxExplicitly set cull type for skybox to front, instead of using whatevercull type the previous shader used (which could result in the skyboxnot being visible due to only drawing back faces). The sky cloud stagesset the cull type so they are not affected by previous cull type.  
>Fix iamamonkey printing 'levels' instead of 'awards'  
 


2016-01  
Contributor(s):  
Zachary J. Slater  
SmileTheory  
>Fix frame_msec possibly being zero in cl_input.c.This fixes a mouse freezing bug.  
>Merge pull request #42 from zturtleman/opus_voip_2Use Opus for VoIP [updated]  
 


2015-12  
Contributor(s):  
Zachary J. Slater  
>Merge pull request #103 from openmoh/ioq3-introHave custom intro cinematics for standalone game  
>Merge pull request #73 from Pan7/saytosayto cmd with player name completion  
 


2015-10  
Contributor(s):  
Tim Angus  
>Fix check for empty rconpassword in CL_Rcon_f  
 


2015-09  
Contributor(s):  
Tim Angus  
Zack Middleton  
Dion Williams  
SmileTheory  
>Use correct array size for facets in cm_patch.c  
>Search for mods in steam path as well as home and base paths.  
>Add Steam's Quake 3 Arena dir to game dirs on Windows.  
>Merge pull request #152 from dionrhys/cvar-unset-notifyFix Cvar_Unset not notifying cvar_modifiedFlags  
>Remove unused define MAC_EVENT_PUMP_MSEC  
>Make add bots menu use standard menu drawingMade add bots menu draw banner and background like remove bots menu.  
>Fix Cvar_Unset not notifying cvar_modifiedFlagsUpstream: JACoders/OpenJK@9a5e9e87ff2d1302261978fa3f1adafb851bd6d6  
>Fix glyph width calculation in Text_Paint_LimitText_Width's scale argument will be multiplied by glyphScale, so don'tpass useScale that is already multiplied by glyphScale as this makesthe scale too big.  
>Early out of Cmd_CompleteArgument and Cmd_SetCommandCompletionFuncReported by Ensiform.  
 


2015-08  
Contributor(s):  
Zachary J. Slater  
Zack Middleton  
>Remove unused define CG_FONT_THRESHOLD  
>more helpful error messageCan’t find your pak0.pk3? Here’s where we tried looking.  
>Better language, less tense  
 


2015-07  
Contributor(s):  
Tobias Kuehnhammer  
Zack Middleton  
>Fix range checks for numBorders in CM_AddFacetBevelsFound by Coverity.  
>Apply greyscaling to fog blocks  
>Fix (unused) watertype checks in PM_WaterMove  
>Backport ignoring values outside lightgrid to OpenGL1Fixes possibly of reading memory past end of lightGridData or readingwrong light grid data (wrapping around to next row).  
>Fix cgs.teamVoteString buffer overflow in CG_ConfigStringModifiedFound by Coverity.  
>Don't segfault in FS_CreatePath when there are no path seperators  
>Fix OpenGL2 ignoring last light grid point on each axisAlso change light grid bounds clamping to make it more clear what invalidvalues are.  
>Fix CGame CG_WaterLevel() comparisonsMy last commit made it so that CGame "waterlevel 1" is feet in water,but before it was erroneously about waist deep in water. The placeswhere it is checked it is suppose to be view position underwater.Change comparisons to use correct value for view position underwater.  
>Fix handling too many teams in Team Arena UI  
>Remove logically dead code from CL_GetServerStatusFound by Coverity.  
>Fix CG_WaterLevel() checks for waterlevel 2 and 3CG_WaterLevel() added lerpOrigin to itself instead of adding view heightwhen checking for waterlevel 2 and 3. This did not cause issues becauseioq3 only compared the calculated waterlevel to more or equal to 1.  
>Make more vm_x86 macros use braces so they work with if blah run macroMASK_REG in EmitMovEDXStack would incorrectly emit asm if 'andit' was 0.'andit' would never be 0 though so it wasn't causing issues.Found by Coverity.  
 


2015-06  
Contributor(s):  
Zack Middleton  
>Merge pull request #118 from jkent/masterfix buffer overflow in CL_CheckForResend  
>Make cinematic times be int like CL_ScaledMillisecondsCinematic's startTime and lastTime are always set from CL_ScaledMillisecondswhich returns int and are converted back and forth to int and unsigned int.This fixes a warning that abs() is used on an unsigned int.  
>Remove check for cg_recordSPDemoName.string array addressIt will always be true.  
>Fix abs() being used for long int in l_precomp.c  
>Fix abs() being used for float in cl_input.c  
 


2015-05  
Contributor(s):  
Zack Middleton  
>Save bot accompany distance across map change or restartIf a bot is accompanying someone before map change or restart, the bot wouldcontinue accompanying them but press up against them and orbit around them.This is caused by the bot's formation distance being 0.Save the formation distance so they maintain proper distance and do notorbit around the player.  
 


2015-04  
Contributor(s):  
Simon McVittie  
>Pick up date from SOURCE_DATE_EPOCH, for reproducible buildsThe goal of reproducible builds is that a rebuild of the same sourcecode with the same compiler, libraries, etc. should result in the samebinaries. SOURCE_DATE_EPOCH provides a standard way for build systemsto fill in the date of the latest source change, typically from a gitcommit or from metadata like the debian/changelog in Debian packages.This does not change anything if SOURCE_DATE_EPOCH is not defined;the intention is that a larger build system like a Debian packagewill define it.Please see https://reproducible-builds.org/ for more information aboutreproducible builds.  
 


2015-03  
Contributor(s):  
Jeff Kent  
/dev/humancontroller  
Zack Middleton  
>Fix return values in nested system calls from QVMsWhen the engine is compiled with Clang it appears that the return valueis being written to the WRONG address, either due to the vm_ variables beingchanged (unexpectedly) elsewhere, or as a result of bad assembly assumptions;having a stack variable pointing to where to write the return value seemsto do the trick.This fixes the case where, for a trap_Register()-like call, weird numbersare being returned when, during the process, an error message is printed(which in Tremulous results in a QVM call and (nested) system call).  
>Add a comment about non-functional bot code  
>Let's not ifdef MISSIONPACK inside of ifdef MISSIONPACK  
>Clean up CG_DrawProxWarning designHopefully fixes the following warningcg_draw.c:2315 assuming signed overflow does not occur when assuming that (X + c) < X is always false [-Wstrict-overflow]  
>Fix Com_RandomBytes weak-random case255 is valid for unsigned char too.  
>Fix attacker icon being default image if attacker leftWith cg_draw3dicons 0 if attacker is kicked or disconnects, theattacker icon becomes the default image.  
>Fix crosshair drawing not clearing colorThe renderer color is set to health color when drawing crosshair. Afterdrawing the crosshair, the renderer color was not cleared and could affectother things. With cg_draw3dicons 0 and cg_drawCrosshairNames 0 it affectedthe attacker icon.  
>fix buffer overflow in CL_CheckForResend  
 


2015-02  
Contributor(s):  
Zack Middleton  
>Fix AAS_Reachability_Grapple's sky surface checkSurface flags are stored in bsptrace.surface.value not flags.  
>Set bsp_trace_t::surface.flags to surfaceFlags in server and gameRevert last commit so that grapple sky check is compatible with BSPCBotImport_Trace in (removed from repo) code/bspc/be_aas_bspq3.c.Set bsp_trace_t::surface.flags instead of surface.value to trace_t::surfaceFlags.surface.flags is only used for the sky check for grapple AAS reachability.surface.value is not used at all.bsp_trace_t is not part of the game VM API, so this does not affect VM compatibility.BotAI_Trace in game was changed to match server. surface.value/flags are not used in game.  
 


2015-01  
Contributor(s):  
Michael Rieder  
Ensiform  
Zack Middleton  
>Fix (unused) "orders" menu script logic"orders" menu script is not used by Team Arena.The same C format string was given an int or string argument depending on ifordering a single person or everyone. Make it always use int.  
>Remove logically dead code from UI_GetServerStatusInfo  
>Merge pull request #22 from zturtleman/cvar_modifiedAdd cvar_modified command  
>Fix possible levelPicNames buffer overflow in q3_ui  
>Inform how many shader stages the max is in the warning message  
>Have custom intro cinematics for standalone game  
>Make Window_Paint check if w is NULL before dereference  
>Fix parsing bots in arena info with trailing spacesq3_ui would shown bot at index of number of bots in list.game would send empty name to addbot command and command would think skill(i.e., 2.000000) was the bot name.  
>Fix off-by-one range checks in Team Arena UI  
>Fix handling too many characters or aliases in Team Arena UI  
>rephrase SSE availability message  
>Fix possible string buffer overflows in Team Arena UI  
>Make barrel/flash model name buffer safe  
 


2014-12  
Contributor(s):  
Tim Angus  
vloup  
Zack Middleton  
>Fix saving/loading glyph 255 in RegisterFontThe glyph for character 255 (lower case y with two dots above it) wasrendered, but it's glyph information was not stored in fontInfo_t andnot saved into .dat file (including the ones in Team Arena).Attempting to load it from existing .dat font files is fine becauseshader name is "" and gets 0 handle. The handle was already 0 anyway.  
>Fix negative glyph index in Team Arena text functionsTeam Arena's text functions cast signed char values to int and use as an array index.This works fine for values 0 to 127, but not for -128 to -1 which are a negative array index.Instead use "character & 255" like client and original Q3 ui/cgame string drawing code.  
>Fix bot's teamleader name field being too shortPlayers using names with 32 to 35 characters could not be recognized asthe team leader.Reported by Razor.  
>Fix cg.intermissionStarted only being enabled at first intermissionGame sets CS_INTERMISSION to 1 at intermission, but does not clear it atmap_restart so it's only sent the first time. CG_MapRestart manually clearscg.intermissionStarted (which is set to value of CS_INTERMISSION when it'smodified). So subsequent intermissions do not have cg.intermissionStartedenabled.Now CS_INTERMISSION is cleared and sent each time intermission is startedand cg.intermissionStarted is enabled each time.This makes subsequent intermissions not play sounds in CG_CheckLocalSoundsduring the 1 second between intermission starting and switching to scoreboard(PM_INTERMISSION) and makes Team Arena voice chats not play.  
>Fix case where interval overflows (thanks jackeri)[17:58] <Jacker> hey, you might be interested in checking out thishttps://github.com/etlegacy/etlegacy/commit/4da5a397b5994bfe5fddb9dad35bef5ddbea64c9#diff-acaedc9d8b492f9af8966ae68597392cR615[17:58] <Jacker> its related to the ddos protection code you wrote[17:59] <Jacker> in continuation to:ab9b08e5845b0ff19814c996ad0cfb1dccab2790[17:59] <Jacker> in a case if the client has in the past connected tothe server days/weeks earlier and time wraps the client wont be able toconnect[18:00] <Jacker> since in that case if the bucket of that clients ipstill exists it wont get checked correctly  
>Fix Team Arena tauntGauntlet command  
>When player stops following a player, keep view anglesNow player keeps looking the same direction instead of facing somewhere elsewhich is slightly disorienting.  
>Unfix warning  
>Fix warning  
>Don't use dead view angles after stop following a dead playerIf ps.stats[STAT_HEALTH] is less or equal to 0, cgame uses fixed view angles.When stop following a player, make sure health isn't less or equal to 0.  
>Add weapon barrel to gauntlet/mg/bfg items in baseq3 too  
>Fix weapon barrel angle on Gauntlet and BFG items in Team ArenaThe barrels were rotated 90 degrees from what they should be.Used barrel code from CG_AddPlayerWeapon to fix them.  
 


2014-11  
Contributor(s):  
Zack Middleton  
>Remove unfinished OpenGL display list codeIt seems unlikely anyone is going to do anything with this aside from stubit out in OpenGLES ports.  
>Correct a few OpenGL variable typesAffectly no change for desktop OpenGL.Use correct types for OpenGLES support.  
>Fix stencil shadows not drawing if has 500 or more vertexesStencil shadow is not drawn if a mesh, or multiple meshes with the sameentity and shader, have more than 500 vertexes. The issue is caused by storingthe projected positions in the tess vertex buffer. Use a new array instead.  
 


2014-10  
Contributor(s):  
Zack Middleton  
>Add missing EV_USE_ITEM15 casesAdd EV_USE_ITEM15 to cg_event.c and ai_dmq3.c for consistency.  
>Always use GL_Cull to change cull stateManually changing cull state can cause later GL_Cull calls to not changethe cull state.  
 


2014-09  
Contributor(s):  
Tim Angus  
Zack Middleton  
MAN-AT-ARMS  
>Actually, that's not suppressing, that's changing behaviour  
>Fix game warnings  
>Add function for clearing global shader instead of duplicating the code  
>Merge pull request #81 from MAN-AT-ARMS/sndmix_altivecFix possible division by zero in S_PaintChannelFrom16_altivec  
>Fix cgame warnings  
>Use correct type for thinktime  
>Fix ui warnings  
>Fix possible division by zero in S_PaintChannelFrom16_altivec  
>Fix client warnings  
>Fix more warnings  
>Add facility to describe cvars  
>Suppress warning of (deliberate) null pointer deference  
>Fix renderergl1 warnings  
 


2014-08  
Contributor(s):  
Tim Angus  
Zack Middleton  
Pan7  
>SDL 2 scroll/caps/num lock keys send KEYUP event when key is released  
>Fix incorrect strncat usage in CL_ServerInfoPacket  
>Fix incorrect rgbGen const reading uninitialized memoryIf ParseVector fails, color isn't fully set.  
>Fix assorted warnings  
>Add ColorIndexForNumber macro replacing '& 0x07'Makes it easier to add more colors.  
>Use ColorIndexForNumber in Con_DrawSolidConsole  
>Fix a few warnings  
>Remove unused functions from null_main.c and null_input.cSys_mkdir is suppose to have a capital M, which is also in null_main.c.  
>Don't scale cinematic time by timescale twiceReported by Ensiform.  
 


2014-07  
Contributor(s):  
/dev/humancontroller  
Zack Middleton  
Pan7  
>Restore drawing a cut off client console line in 1920x1080The text lines don't meet at top of the sceen in 1920x1080, restoredrawing a cut off line across the top. In 640x480 this line isn't seenat all. This is still better then trying to draw twice as many linesthan are actually seen (the way it was before the last commit).  
>Fix overstrike/insert logic being reversed in q3_ui  
>sayto cmd with player name completion  
>guard against out-of-bounds jump table targets  
>Don't draw client console buffer past top of screenThanks @Pan7.  
 


2014-05  
Contributor(s):  
Ensiform  
Zack Middleton  
>Fix max bans range check in SV_AddBanToListAdding too many bans would write out of bounds. Found by Coverity.  
>Fix potential buffer overflow caused by long tcMod argsFound by Coverity.  
>Fix potential out of bounds access caused by CM_GridPlaneCoverity doesn't care if there is a warning, out of bounds access is bad.  
>Fix Gauntlet barrel axis in UIUI's PositionRotatedEntityOnTag is different than CGame's andUI has switched pitch/roll for Gauntlet/BFG axis to get it tolook like /close to/ how it looks in CGame.Making UI use the same *PositionRotatedEntityOnTag and axis asCGame fixes the Gauntlet blade being wobbly in controls menu.  
>Fix cg.skulltrails out of bounds access in Team Arena Harvester modeIn Team Arena's Harvester mode, players corrupt your memory from beyondthe grave. Gib the players to stop the corruption!CG_PlayerTokens is called for player entities, including corpses.The entity number is used for the index in cg.skulltrails which only hasMAX_CLIENTS elements. This results in incorrect memory being overwrittenfor corpse entities (as the entity number is >= MAX_CLIENTS).So limit skull trails to valid entities (entity number < MAX_CLIENTS).  
>Fix unchecked buffer size issues in l_script.c and l_precomp.cFound by Coverity.  
>Fix always switching back to mgun in Q3 controls menuCaused by 120e296a74b0317f29d7f516d904bdc70f71b006.  
>Fix potential buffer overflow in PS_ReadPrimitiveFound by Coverity.  
>Fix OOB access in CM_EdgePlaneNum without erroring in CM_GridPlaneI changed warning to error in 9d74227559d46b85d0c43d395cd280d3de7ae8f4,which broke JA's mp/ctf4 map and probably others.  
>Fix an invalid null deref check in the slider code.  
 


2014-03  
Contributor(s):  
Ensiform  
Tequila  
Tim Angus  
Tobias Kuehnhammer  
Zack Middleton  
>Merge pull request #55 from MAN-AT-ARMS/status_commandFix colored name padding and allow IPv6 address to fit in output of 'status' command  
>Revert "DMA 44100Hz needs more memory for sound buffers"This reverts commit 0e6632f464c08dcb76f26a52f33d97228e64fda1.Cause crashes if com_soundMegs is 32.  
>Parse q3map_sunExt in OpenGL1 tooUsed for drawing sun, which is supported by both OpenGL1 and OpenGL2.OpenGL2 already parses it.  
>DMA 44100Hz needs more memory for sound buffersIt doubles the size of the data compared to the default (22050),so increase the buffer automatically. Likewise, decreasing speeddoesn't need as much (though that doesn't really matter).  
>Bunch of comment fixes  
>Don't mix sfx with NULL soundDataCaused a crash. Already done for looping sounds.  
>Fix R_GetEntityToken ending prematurelyIf spawn var key or value is "" it caused R_GetEntityToken (available tocgame, used by opengl2) to stop parsing, whereas game VM would continue.Changed it to match parsing used for game VM(see G_GET_ENTITY_TOKEN in code/server/sv_game.c).The map poq3dm5 has a "wait" key with value "".  
>Merge pull request #60 from smokin-guns/masterBunch of comment fixes  
>Fix compiling game VM with OBSTACLEDEBUG defined  
>Fix FS_FOpenFileReadDir non-zero file handle when file not found in pk3If a pk3 search path is passed to FS_FOpenFileReadDir, a non-zerofile handle is returned if file is not found. This causes incorrectbehavior in FS_ReadFileDir (when a pk3 search path is passed in)which only checks file handle, not length, for seeing if file exists.I don't know of any issues in ioq3 caused by this.  
>Fix native trap_BotMutateGoalFuzzyLogic  
>Fix typo in animMap and videoMap warnings  
 


2014-02  
Contributor(s):  
Zack Middleton  
Anthony Pesch  
MAN-AT-ARMS  
>Fix sending pk3 download error messages to clientsDisabled in e52a492f615e1245d6d22a84d2cc100c6d2f9f88.  
>Merge pull request #33 from inolen/widescreen_clear_fixdon't clear screen during CA_LOADING and CA_PRIMED  
>restart the renderer after the hunk mark has been set  
>Merge pull request #35 from inolen/no_renderer_restartdon't restart renderer in SV_SpawnServer unless client running dedicated  
>Fix colored name padding and allow IPv6 address to fit in output of'status' command  
>Clear referenced paks when disconnectingAfter playing Team Arena, if you switch to Q3A and try to play a demo withcl_allowDownload enabled it would print "Need Paks: blah blah" and not play the demo.  
 


2014-01  
Contributor(s):  
Zack Middleton  
Anthony Pesch  
>Check for buffer overflow for rail/lightning surfaces  
>don't clear screen during CA_LOADING and CA_PRIMED  
>Remove unused code path from S_Base_StartBackgroundTrackWe make sure intro isn't NULL. Then if loop is NULL, set it to intro.  
>Fix music studder in base sound when starting silent cinematics  
>Remove extra client_t::csUpdated[] slotsv.configstrings[] is limited to 0 to MAX_CONFIGSTRINGS-1, make client_t::csUpdated[] the same.  
>Fix demoName Com_sprintf size larger than bufferMaybe this is why demoName is a static global with the comment 'compiler bug workaround'?  
>Don't read clc.voipIncomingSequence until range checked sender  
>Fix some opus_decode issuesIt was able to fail the assert before. I was using opus_decode wrong.  
 


2013-12  
Contributor(s):  
Zack Middleton  
>Use Opus for VoIPServer/client VoIP protocol is handled by adding new cvarscl_voipProtocol and sv_voipProtocol, sv_voip and cl_voipare used to auto set/clear them. All users need to touchare cl/sv_voip as 0 or 1 just like before.Old Speex VoIP packets in demos are skipped.New VoIP packets are skipped in demos if sv_voipProtocoldoesn't match cl_voipProtocol.Notable difference between usage of speex and opus codecs,when using Speex client would be sent 80ms at a time.Using Opus, 60ms is sent at a time. This was changed becausethe Opus codec supports encoding up to 60ms at a time.(Simpler to send only one codec frame in a packet.)  
>Support spatialized raw streams in base sound, e.g. for VoIP  
>Add cvar_modified commandBased on cvarlist command, it only lists modified cvars.  
>Fix playback of stereo sounds in Base sound systemAlready works correctly in OpenAL.  
>Have ui_test cmd in missionpack ui return qtrue  
 


2013-11  
Contributor(s):  
Tim Angus  
Ensiform  
Zack Middleton  
SmileTheory  
>Remove unused cvar_t variable cl_trn  
>Fix signal 6 in S_Base_StartBackgroundTrack on OS X 10.9In S_UpdateBackgroundTrack, s_backgroundLoop was passed toS_Base_StartBackgroundTrack and tried to copy to itself using Q_strncpyz.  
>Fix video recording sync drift (patch refactored but original author unknown)  
>End current draw surface before drawing cinematicFixes drawing StretchPic *before* CIN_DrawCinematic resultingin cinematic being drawn before the StretchPic.  
>Readd backspace char event for UI VM text fieldsUI VMs expect a backspace char event, but sdl2 branch only was only sending a key event.Revert cl_keys.c to master branch (it would cause backspace to happen twice in console).  
>Remove vertexLightmap from textureBundle_t, it's never qtrue  
>Make kamikaze timer loops use level.num_entities instead of MAX_GENTITIESOptimization. Many other loops use level.num_entities, there was nospecial reason that MAX_GENTITIES was used for these.  
>#6069: Remove md4 model support.  
 


2013-10  
Contributor(s):  
Zack Middleton  
>Remove unused variable baseOffset from fsh[]  
>Support FS_SEEK_END and negative offset for zipped files in FS_SeekUse FS_SEEK_END in sound code instead of working around it.If FS_SEEK_SET and going to current position, just return.  
>Remove old comment that FS_Seek doesn't work on zipped files  
>Fix VM FOpenFile( FS_READ ) files seeking twice in FS_Seek  
>Remove function prototypes for non-existant Sys_* DLL functions  
>Drop sounds starting with * before allocating sfx slotCauses handle 0 to be returned by S_RegisterSound.  
>Clear more variables in CL_InitServerInfoHave cls.localServers use CL_InitServerInfo.Don't set cls.localServers netType to from.type, it's the wrong value.Note: server->visible is not cleared in CL_InitServerInfo, as stated by a comment below a place where CL_InitServerInfo is used.  
 


2013-09  
Contributor(s):  
Razish  
Zack Middleton  
>Fix warning message in animation.cfg parsing functionsSigned-off-by: Zack Middleton <zturtleman@gmail.com>  
>Make cgame's tcmd use trap_SendClientCommand for "gc"gc command was forwarded to server after if wasn't recognized locally, but let's just send straight to server.(trap_SendConsoleCommand should of had a \n at end, but using trap_SendClientCommand makes more sense.)  
>Free bot client if cannot load botIntroduced by commit a57a5cfd9b5dcc51696777c67b275c55c5b4b452.  
>Fix UI parse message for menu filesMissing a space after colon.  
>Fix targetNum check in cgame's tcmd  
 


2013-08  
Contributor(s):  
Zack Middleton  
>Fix "bind <key>" message for unbound keys"bind X cmd; unbind X; bind X" now says '"x" is unbound' instead of '"x" = ""'  
 


2013-07  
Contributor(s):  
Zack Middleton  
morturp  
>out seems to be unnecessarily large for one byte per pixel  
>Fix bind commands getting run when closing UIIntroduced in commit "Add togglemenu command" bf2b04.Don't let UI key event changing key catcher affect bind parsing. Bind parsing itself will never change the key catcher.Example of issue: if mouse1 is bound to +attack when clicking Resume Game, player will shoot until releasing the mouse button.Mouse button should have to be released and pressed again before player will shoot.  
>Merge pull request #6 from morturp/patch-2out seems to be unnecessarily large for one byte per pixel  
>Free Team Arena fonts/fontImage_X.dat bufferCaused temp memory to be present all the time, so Hunk_Alloc ignored memory low/high preference.May have caused other issues as well.  
>Fix getting servers from and being listed on id's q3 master serverUse q3 master protocol when com_gamename is Quake3Arena (the default), otherwise use dpmaster protocol.  
>(bug #5984) Unload renderer lib  
>Remove unused models from server_t  
 


2013-06  
Contributor(s):  
Tim Angus  
Zack Middleton  
morturp  
>Rate limit getchallenge  
>Prevent the skip of the glyph if it does not fit  
>Allow recording VoIP in SP for demo commentaries  
>Allow adjusting VoIP gain and mute during SP demo playback  
>Check for shaders without closing braceShaders without closing brace can eat shaders in other files.Pass depth to SkipBracedSection instead of reparsing text as it messed up parse line numbers.  
>Allow adjusting VoIP gain and mute during demo playback  
>Merge pull request #5 from morturp/patch-1Prevent the skip of the glyph if it does not fit  
>Improve warning for shader missing opening brace  
 


2013-05  
Contributor(s):  
Tim Angus  
Zack Middleton  
>Fix Freetype build problems  
>Catch more bad shader syntax casesUse to only ignore file in cases where both { and \0 were missing after shader name. Now ignore file when either are missing, such as "}\0".  
>Fix null model axis disappearing if sky is in view  
>Allow drawing sun in OpenGL1 rendererRemoved #if 0 ... #endif around RB_DrawSun().Merged improvements and changes from OpenGL2 renderer.  
>Fix predicting touching items in CTF and 1FCTFIn CTF, rail or plasma gun/ammo were not predicted for pickup depending on what team player is on. The rail and plasma values are the same as PW_REDFLAG and PW_BLUEFLAG.In 1FCTF, only neutral flag, BFG, and BFG ammo were predicted for pickup. WP_BFG is equal to PW_NEUTRALFLAG.  
 


2013-04  
Contributor(s):  
Harley Laue  
/dev/humancontroller  
Zack Middleton  
>Rename FS_CheckFilenameIsNotImmutable to ..IsMutable  
>drop some useless return statements  
>remove some unused stuff  
>add some noreturn annotations  
>Correct TeamCount return type and team argument type  
>Add fallback for __func__ (ioq3 isn't compiled as c99 by default)Using Debian gcc version 4.7.2 and clang 3.0-6.1 anyway.  
>Don't allow modifying qvms or pk3sException for allowing pk3s to be downloaded.  
>Fix setting CVAR_VM_CREATED flag on user created cvarsFix setting CVAR_VM_CREATED flag on cvars created using set[asu] commands (including archived cvars from cfg) and trap_Cvar_Set.trap_Cvar_Register called Cvar_Get which cleared CVAR_USER_CREATED flag, but CVAR_VM_CREATED wasn't set because the cvar already existed.  
>fix some OOB enumerator usages(should be no-op with usual compiler workings)  
>reduce the amount of compiler warnings for variable shadowing  
>clean up return statements a bit more  
>when using the condump command, do not say "dumped console text" prematurely, before trying to open the file  
>Rename FS_CheckFilenameIsNotExecutable to ..NotImmutable  
>remove some redundant exit() calls  
>Give botlib com_basegame for botlib.log pathBefore it always used BASEGAME fallback code.  
>Fix referencing pk3 with only qagame QVM  
 


2013-03  
Contributor(s):  
Tim Angus  
Ensiform  
Zack Middleton  
SmileTheory  
>Use PATH_SEP for a debug message in FS_FOpenFileReadDir  
>Fix displaying demo name when loading demo  
>Remove RAVENMD4 #define  
>Show lowercased ascii in bind command  
>Fix some of the things clang --analyze flagged  
>Fix Key_StringToKeynum to return lowercased asciiFixes bind and unbind uppercase ascii and uppercase ascii in cl_consoleKeys.keycodes.h states "normal keys should be passed as lowercased ascii"  
>Fix the warning caused by fixing the warnings  
>Remove some more automatic sRGB image flags.  
>Move renderers a bit closer together  
>Fix vote Y/1 and teamvote Y/1  
 


2013-02  
Contributor(s):  
Jeremy Davis  
Andrew Browne  
Ensiform  
Tim Angus  
Tobias Kuehnhammer  
Zack Middleton  
>Update invalid g_gametype right away  
>5289 - Support for .pk3dir  
>Fix IPv6 favorites in q3_uiThis does however allow favorites to contain hostnames which was explicitly not allowed before.  
>Add renderercommon/tr_common.h  
>Add missing traps to cg_local.h  
>Remove MSG_WriteDeltaUsercmd and MSG_ReadDeltaUsercmd  
>Unify/cleanup max snapshot entities on client and server  
>Fix BotExportTest's args for BotGetReachabilityToGoal  
>Remove Sys_SnapVector  
>Fix compiling  
>Fix possible delta from invalid entity  
>Fix freeing source while parsing botfiles/items.c  
>renderer -> renderergl1, rend2 -> renderergl2  
>Fix MSG_ReadDeltaKey setting bit 1<<bits oftenMSG_ReadDeltaKey would often set 1<<bits, it should never be set. It exceeds the size of what was being read.Worked okay for weapons/forward/right/up as they stored as chars (value would wrap around to correct value, lucky).Angles had the wrong value, not sure if it was causing issues.  
>Adds Z checking to CanDamage function.  
>Remove unused config string code from botlib  
>Fix comment for gametype parsing in ui  
>condump improvementsDefault output file extension to ".txt"Show output filename in error message.Use Windows line endings on Windows.Dynamically allocate line buffer. (by ZTM)  
>Fix creating favorite when not on view favorite servers  
>Increase favorite address buffer size in Team Arena UINow it can hold an IPv6 address.  
>Don't add pk3dirs if connecting to a pure serverOnly .cfg etc would be read from pk3dirs, but they should be treated like pk3s that are not on the pure list.  
>be_ai_weap.c: s/move state/weapon state/g  
>Remove some unused defines from msg.c  
>Remove a few name tags  
>Extend Team Arena name edit fields to MAX_NAME_LENGTH  
>Use Q_strncpyz in G_AddRandomBot  
>Remove unneeded variable extern  
>Fix resolving IPv6 favorites in Team Arena UI  
>Extend Team Arena Favorite Address edit field to hold an IPv6 address  
>5717 - Gamecode can open file "" for reading  
>Change pk3dir README / comments to fit in better  
 


2013-01  
Contributor(s):  
Tim Angus  
Jeremy Davis  
Zack Middleton  
Zachary Slater  
>Use SDL 2 instead of SDL 1.2  
>Fix FS_FOpenFileRead corner caseFS_FOpenFileRead is a fairly mental function that changes its returnbehaviour depending on whether or not file is NULL or not. It turns outin the case where file is NULL, we were returning the wrong value whenthe file didn't exist.  
>Make UI_CVAR_CREATE use VM specific codeMakes cvar be flagged as VM created and unset ROM if ARCHIVE is set.  
>Remove the SMP renderer feature  
>Fix screwed up whitespace in files.cApologies to anyone merging this :(  
>Add togglemenu to q3_ui controls menu  
>Run toggleconsole in binds while in menu or message mode  
>Increase various arbitrary limits - Bug #5463  
>Fix error message in BG_EvaluateTrajectory  
>Fix error message in BG_EvaluateTrajectoryDelta  
>Add togglemenu commandAllow togglemenu to be run in binds while in menu or message mode.  
 


2012-12  
Contributor(s):  
Thilo Schulz  
Zack Middleton  
>Fix dedicated server crashing when using MSG_ReadDelta*, though it only happens if someone modifies the engine. (#5449)  
>Fix reconnect command to work after leaving server. (#5794)  
>Fix writting voip data in demos (broke in r2102).  
>In q3_ui if uis.demoversion is set, hide "Team Arena" and "Mods" in main menu. (They aren't shown in id's q3a demo and use to be drawn under demo message).  
>- Fix spectator client being switched from follow to free after map_restart if following a client with a higher client number.- Fix client unlinking issue caused by ent->s.number being set to followed client's ps->clientNum after map_restart. Reported by Ensiform.  
>Fix server ignoring client move commands if voip data is included.  
>- Allow changing cl_voip without restarting.- Fix assert failing in CL_ParseVoip() while flipping cl_voip off and on.  
>Changes from Ensiform:- In G_AddBot, try to allocate clientNum before doing anything else.- In G_AddBot, don't set SVF_BOT and inuse. It's done in ClientConnect, plus inuse causes ClientDisconnect to be run for no reason.- In G_AddBot, only set skill in bot useinfo once.- Avoid using cl->ps.clientNum to check if cl is a bot.  
>Fix passing arg9 (qvm only), arg10, and arg11 to vmMain for native libs and non-i386 compiled or interpated qvms. (Currently they aren't use in vmMain in game, cgame, or ui.)Fix passing args[11] to args[15] from vm to engine on ppc64 and sparc64. Some of the args are used by game bot prediction syscalls. May have been causing bugs. Note: This was fixed for x86_64 in r2163.  
>Add length check here as well, thanks Ensiform  
>Save all arguments from connect for reconnect command.Remove unnecessary localhost check from reconnect command.  
>Fix bot skill format so it doesn't always have a space at the beginning of it.  
>Fix clients being able to reset their player state and respawn using donedl.  
 


2012-11  
Contributor(s):  
Zack Middleton  
>- Check for invalid filename in OpenAL's RegisterSound function.- Changed Base sound system to warn not error when sound filename is empty or too long.  
>Fix follow command to find clients whose name begins with a number.  
>Remove unused function CL_DisconnectPacket. Pointed out by Ensiform.  
>Remove references to non-existent functions CM_MarkFragments and CM_LerpTag.  
>#5799 - Change messagemode text box to display colors like in console input box.  
>- Fix up "gc" command, make it more like "tell". Based on patch by Ensiform.- Add usage messages for gc, tell, vtell, and votell commands.- Check player names in gc, tell, vtell, and votell commands.  
>Changes suggested by DevHC:- Remove "!target" checks from tell, vtell, and gc commands. Target was just set, cannot be NULL.- Validate "order" in gc command before "player id."  
>Remove anti tamper leftover code 'CL_ChangeReliableCommand'. From Ensiform.  
>Change error message in CL_ConfigstringModified to specify out of range index like in server.  
>Fix some "> MAX_*" to be ">= MAX_*".  
>Change more operator commands to require sv_running to be usable. Patch by Ensiform.  
 


2012-10  
Contributor(s):  
Zack Middleton  
>Show reason non-default renderer failed to load.  
>Fix restoring old fs_game upon leaving a server. Patch by Ensiform.  
>Fix restoring fs_game when default.cfg is missing.  
>When in third person, don't play player's sounds as full volume in Base sound system. OpenAL already does this. (Related to bug 5741.)  
>Add smiletheory to credits in q3_ui.  
>Remove initializing "sv_mapname" cvar in game. It's set to "" and never used.  
>Don't draw cursor during Team Arena's loading screen.  
>Play correct team sounds when in spectator mode and following a player.  
 


2012-09  
Contributor(s):  
Zack Middleton  
>Fix g_warmup < 2 causing client prediction issues (bug #5740). (Reused code for tournament gametype.)  
>Remove a redundant code statement.  
>Send team info for team overlay to spectators for the team of the client they're following (bug #5740).  
>Added myself to ioq3 credits in q3_ui.  
>Cache servers for each master server in q3_ui, otherwise servers from last updated master for shown for all Internet# sources.  
>Fix arrow buttons in q3_ui join server menu to be selectable by mouse.  
>Fix UI player model FOV when using non-640x480 resolution.  
>Don't have g_teamAutoJoin affect bot's teamBots set their team later, setting it here causes some bots to change team and die later. Can cause extra skulls to be spawn at beginning of harvester (bug #5740).  
>Fix game getting stuck in a do-while loop when "team follow1" or "team follow2" client sends a follownext or followprev command.  
>Fix resetting single player level selection in q3_ui when there is no training level, such as in demoq3.  
 


2012-08  
Contributor(s):  
Thilo Schulz  
Zack Middleton  
>Added MISSIONPACK ifdef around GT_1FCTF code.  
>Oops, still need this  
>Don't replay to status OOB requests in Team Arena single player.  
>More MISSIONPACK ifdeffery.  
>Removed a check that was made unnessicary by r1644.  
>Move argument passing from VM to engine to global variables which allows to get rid of lots of OS specific stuff and also fixes errors that happens when compilers add lots of boilerplate to the DoSyscall() function  
 


2012-07  
Contributor(s):  
Thilo Schulz  
Zack Middleton  
>Fixed G_LogPrintf format warning on 64 bit systems added in r2294.  
>Support for .pk3dir (#5298) - Patch by Andrew (dersaidin@gmail.com)  
>Revert pk3dir patch because some users report the code gets stuck in an infinite loop in the new code  
>prevent using getinfo as an amplifier for DDOS attacks (#5678). Patch by DevHC  
>Various bugfixes by Tobias Kuehnhammer (#5270)- A stupid bug where bots re-trigger jumppads if they fell onto it.- A small "memset" bug concerning player animations.- Reward sounds were never cleared and thus they are played on a map restart.- Safer and more secure handling of disconnected clients and clients with   malformed or illegal info strings.- first_gauntlet_hit.wav was not played (ops/ps) bug- capturelimit not hit (from OAX)  
 


2012-06  
Contributor(s):  
Zachary Slater  
Zack Middleton  
>REFACTOR [reletive -> relative]From /dev/humancontroller.  
>add a missing '\n', remove some unwanted onesFrom /dev/humancontroller.  
>non-missionpack build throws up a few "0" plumsfound by Ensiform  
>Fixed comment in server.h (ent->v.absmax to ent->r.absmax).  
>Added kicknum, kickall, and kickbots commands, patch by Ensiform.  
>add missing commands to autocompletitionfound by Ensiform  
>fix the usage description of the clientkick server command (also rename SV_KickNum_f() to SV_ClientKick_f())found by Ensiform  
>fix some typosFrom /dev/humancontroller.  
>CVE-2012-3345  
>when interacting with QVMs, Clang/LLVM requires the standard use of the va_*() macros instead of (fast) call hacksFrom /dev/humancontroller.  
>Call sound files 'audio' not 'wav' in debug messages.  
>remove a bunch of superfluous formatting callsFrom /dev/humancontroller.  
>Made more code for Team Arena be inside ifdef MISSIONPACK, from Ensiform.  
>Removed unneeded va() and use CG_Error instead of trap_Error in cgame. Found by Ensiform.  
>REFACTOR [a vs an]From /dev/humancontroller.  
>static-ize inline functions for Clang/LLVMFrom /dev/humancontroller.  
>remove a bunch of unused stuff from gameFrom /dev/humancontroller.  
>REFACTORFrom /dev/humancontroller.  
>more '\n' businessFrom /dev/humancontroller.  
>rename trap_Printf() to trap_Print() in the game module, as that function has nothing to do with printf()-like formattingFrom /dev/humancontroller.  
>REFACTOR [anough to enough]  
>Let's actually use MOD_CHAINGUN! From Ensiform.  
>Only have bots issue vtaunt commands in Team Arena.  
>add the "execq" command, a more quiet version of the "exec" commandin exec/execq, always print the extension for the filenameFrom /dev/humancontroller.  
>Cleaned up game server command usage messages.  
>never set groundEntityNum to -1, use ENTITYNUM_NONE insteadFrom /dev/humancontroller.  
>bring some freeish()ing operations ahead from after Errorish() callsFrom /dev/humancontroller.  
 


2012-05  
Contributor(s):  
Zack Middleton  
>In CheckTeamLeader, make sure to only set one client as team leader. Reported by Tobias Kuehnhammer.  
>Fixed two issues pointed out in a PVS-Studio static code analyzer article (bug #5505).  
>#5462 - do not require clients to have a matching qagame.qvm (adapted from OpenArena)  
 


2012-04  
Contributor(s):  
Zack Middleton  
>#5485 - Use Sys_LoadDll to search in the local directory for the fallback default renderer. Patch by Harley Laue.  
>#5453 - Tell command for server.  
 


2012-02  
Contributor(s):  
Zack Middleton  
>Allow analog joystick up axis to be remapped too.  
>Added range checks to j_*_axis cvars.  
>Support up to 16 joystick axes, select which to use with j_*_axis cvars.  
>Patches by symlink.#5313 - EF_CONNECTION set on wrong eFlags#5314 - snc drawn in nirvana instead at lagometer  
 


2012-01  
Contributor(s):  
Thilo Schulz  
Zack Middleton  
>Add the new ioquake3 master server as standard for sv_master2  
>Changed three filename buffers to be MAX_QPATH (not MAX_QPATH*2), filename lengths are limited to MAX_QPATH by engine and elsewhere in game logic.  
>Fixed UI to use MAX_QPATH for skin filename buffer length.  
 


2011-12  
Contributor(s):  
Zachary Slater  
Zack Middleton  
>Removed unused functoin Hunk_Trash.  
>Enable zone and hunk debug in debug build.  
>bugzilla bug #5273exploit resolved, we're now disallowing forwardmove of -128 and vice versaThanks, devhc!  
>Use GENTITYNUM_BITS for jumppad_ent bits.  
>Show file/line/label in Com_Error messages when run out of memory in debug build.  
 


2011-11  
Contributor(s):  
Zack Middleton  
>Client no longer tries to run UI_SHUTDOWN on ui vms with an unsupported API version.  
>Disable blood on HUD when com_blood is 0.  
>Fixed usage of various entity defines.  
>Removed duplicate setting of contents for trigger_hurt.  
>Added missing newlines to game dedicated chat messages.  
 


2011-10  
Contributor(s):  
Tim Angus  
Thilo Schulz  
Zack Middleton  
>[18:48:20] <Ensiform> Thilo: http://pastebin.com/2UUmSCQK fixes point contents on the server side related to the cg fix with moving water.  Dunno why s.origin and s.angles was ever used, the rest of sv_world.c always uses r.currentOrigin and r.currentAngles[18:58:10] <Thilo> mhm[18:58:15] <Thilo> Ensiform: it doesnt break anything?[18:59:20] <Ensiform> nah  
>Fixed showing number of qvm jump table targets (r2180 caused it to show 0 on alloc).  
>* Fix various warnings with GCC and clang  
>* clang support  
 


2011-09  
Contributor(s):  
Thilo Schulz  
Zack Middleton  
>Support vm syscalls with up to 15 args using 64 bit compiled vm (like interprated vms).  
>Use EXEC_NOW instead of hardcoded 0 in cl_ui.c  
>Allow VM_Restart to load unpure qagame.qvm so that local server won't crash after map_restart if server operator has qagame.qvm residing outside pak file (#5196)Thanks to "rg3" for providing a shell account  
>Require gamename if not supporting legacy protocol.  
>Only include libmumblelink.h if USE_MUMBLE is defined, reported by Ensiform.  
>Bug 5178  - Sound quality menu option has no effect  
>Use correct variable for getting buffer length, reported by Ensiform.  
>Added option for selecting sound system (SDL or OpenAL) and option for setting SDL sound quality to q3_ui sound menu.Sound settings must now be applied before they take affect (needed for sound system and SDL sound quality changes).  
>Throw error when making calls to empty VM  
>Allow interpreted VM on pure servers  
>Removed unused kbutton_t declarations in client.h  
>Use platform's path separator in FS_Path_f (for consistent output on Windows), reported by Ensiform.  
>Fixed some function name comments in cl_cin.c  
>Fix a few string literals  
>Restored loading ".dat" journal files from disk when connect to pure servers. Accidentally broke in r1911, reported by Ensiform.  
>Fix q3vm execution on x86/x86_64 MacOSX  
>Use BIGCHAR_WIDTH instead of hardcoded 16 in cl_scrn.c  
>Center ioq3 credits vertically.  
>Removed unused IN_ButtonDown and IN_ButtonUp functions.  
>Add some checks when reloading QVMs via VM_Restart()  
 


2011-08  
Contributor(s):  
Tim Angus  
Thilo Schulz  
Zack Middleton  
>Don't do game_restart if game directory changed from "" to "baseq3" or "baseq3" to ""  
>Bug 5134 - q3_ui incorrectly tells user to refresh servers while auto-refreshing, patch by Zack Middleton  
>Add hack to allow server the setting of game cvar values that are important for playerstate prediction for legacy gamecode.  
>Fix cvar flags to get rid of warnings (#2881)  
>Fixed viewing sv_master[3-5] in q3_ui server browser (don't give engine fake sources).  
>- Only need cl_cURLLib cvar if USE_CURL_DLOPEN is defined.- Try to load libcurl-4.dll on win32 (it use to be included in the NSIS installer).  
>Don't search system directories for renderer lib  
>Fix auto game-restart when disconnecting from a server that explicitly set fs_game to "baseq3" instead of ""  
>Simulate line buffering and fix the overflow bug in Com_ReadFromPipe(), patch from DevHC.  
>Fix warning on MacOSX  
>Support five master servers in Team Arena server browser.  
>Fix pak order when reconnecting to a server.When /connect to the same server is issued while already connected, an initial call to CL_Disconnect will remove all pak file referencesand reset the pak order.Reordering only occurs through FS_Restart, which in turn is called when checksum feed changes. Because we reconnect to the same server,checksum feed never changes and pak file order is not restored to server order again. With certain pak file constellations between client/server,this may result in an inability to load files from paks which are not correctly detected as referenced paks.  
>Batch of bug fixes for gamecode. Patch compiled and log message written by Tobias Kuehnhammer (#5144)################################################################################This Patch fixes:################################################################################- The "fraglimit warning" was not played at all, if on the blue team.- The "where" console command was broken.- Obelisk explosion wasn't drawn if no Rocketlauncher was loaded.- Impact marks sometimes didn't draw at all.- IMPORTANT BUGFIX: No killing for cheaters with Lightning gun and Gauntlet.- If two doors are close to each other a spectator couldn't fly through them.- More robust, efficient and logical respawning routine.  NOTE: The game.qvm will get notable smaller and will use LESS MEMORY!- Drowning sounds are fixed. Now they are played as intended. (as the idcomment  in the source code shows).- Some AI bugs (OVERFLOW!) in the bot movement code.- Several "Team Arena" Overload and Harvester bugs.- Stops bots from attacking a team mate (player) who only changed teams.- Some voice chats and CTF commands fixed.- "Team_ReturnFlag" was called twice, which did wired things sometimes.   NOTE: (G_RunItem checks CONTENTS_NODROP already!)- A bugfix for Gauntlet animation.- Incorrect CTF scoring.- A bunch of corrected comments and print lines ("\n").- Some regularity of expression and some small trivial bugs.################################################################################Details:################################################################################********************************************************************************BUG: in gamemode GT_TEAM the fraglimit warning will not be played if joiningthe     blue team!--------------------------------------------------------------------------------Solution: In "CG_CheckLocalSounds": if cgs.scores2 > highScore, highScoreshould          be cgs.scores2.********************************************************************************BUG: the "where" console command doesn't work as expected (it's always 0 0 0)      but not in id Quake 3 Arena. It seems that now Ioquake3 is affected!--------------------------------------------------------------------------------Solution: In Function "Cmd_Where_f" ent->s.origin should be           ent->r.currentOrigin.********************************************************************************BUG: in gamemode GT_OBELISK obelisk explosion won't be drawn if there is no      Rocketlauncher loaded. (The "maps without Rocketlauncher" bug)--------------------------------------------------------------------------------Solution: in "cg_main.c": cgs.media.rocketExplosionShader should be registered           if gamemode is GT_OBELISK.********************************************************************************BUG: Impact marks sometimes doesn't draw at all. Not easy to reproduce if you      don't play (io)Quake3 every day and know the places where it happens! ;)      But anyway...     Test: start q3dm12 go to "Long Jump Canyon" (where the small platform      teleporter for the BFG is) place yourself at the point where the railgun      spawns, look in the direction where the red suspended armor is. Now shoot     at the sloped wall on the out/leftside of the door you see. (the sloped      wall should be nearly in the center of your screen now). If you choose the      correct brush face and shoot up and down at this brush face, the impact      marks sometimes aren't visible.     There are hundreds of custom maps where this can happen!--------------------------------------------------------------------------------Solution: I replaced the function "SnapVectorTowards" with the one from          "Wolfenstein - Enemy Territory (GPL Source Code)"********************************************************************************BUG: Normally "NOCLIP" cheaters are logically not allowed to fire a gun.     Unfortunatly the Gauntlet (and Lightning gun) was forgotten and not      restricted to that. All weapons except those two were handled correct. --------------------------------------------------------------------------------Solution: Make Gauntlet and Lightning gun not firing for someone who cheats           with "NOCLIP" (like all other weapons).********************************************************************************NOTE: A few bugfixes are not mine and are reported here:       http://www.quake3world.com/forum/viewtopic.php?f=16&t=9179.      Thanks to Quake3world, for all those years and the good guys there!********************************************************************************BUG: During making a mod I found a very strange bug, which mainly occurs if     someone tries to implement a lot of singleplayer monsters which shouldwalk     slowly (like the "Crash" bot). So if someone wants to make slow down bots     or monsters when they are walking towards a goal and alter the function     "BotMoveInGoalArea" then the bots/monsters do stupid things. Otherwise and     this is the default (also buggy) behavior they start running although they     shouldn't (as seen with the "Crash" bot and will not be fixed here).--------------------------------------------------------------------------------Solution: Fix overflow in bot user command. BUGFIX from "Hunt" mod by J.           Hoffman.********************************************************************************BUG: in function "BotMoveToGoal" the special elevator case doesn't make sense.--------------------------------------------------------------------------------Solution: in "be_ai_move.c": ((result->flags & MOVERESULT_ONTOPOF_FUNCBOB) ||                              (result->flags & MOVERESULT_ONTOPOF_FUNCBOB))                    should be ((result->flags & MOVERESULT_ONTOPOF_ELEVATOR) ||                              (result->flags & MOVERESULT_ONTOPOF_FUNCBOB)).********************************************************************************BUG: in function "BotWantsToRetreat" and "BotWantsToChase" this is wrong:     "(bs->enemy != redobelisk.entitynum || bs->enemy !=blueobelisk.entitynum)"--------------------------------------------------------------------------------Solution: "... redobelisk.entitynum) && (bs->enemy != blueobelisk.." iscorrect.********************************************************************************BUG: in gamemode GT_OBELISK there are too many node switches for bots      (test: mpq3tourney6 with many bots). If that happens, game becomes      unplayable. I don't know if this is the best solution but here it is:--------------------------------------------------------------------------------Solution: In function "AINode_Battle_Fight" right after:if (!BotEntityVisible(bs->entitynum, bs->eye, bs->viewangles, 360, bs->enemy)){   I added this: #ifdef MISSIONPACK    if (bs->enemy == redobelisk.entitynum || bs->enemy ==                                                         blueobelisk.entitynum){    AIEnter_Battle_Chase(bs, "battle fight: obelisk out of sight");    return qfalse;    }#endif********************************************************************************BUG: in gamemode >= GT_TEAM, after team change, bots will (sometimes) not stop     shooting at you, although you are on their team now. It seems that the      configstrings are f***** up or not reliable in this case!--------------------------------------------------------------------------------Solution: In function "BotTeam" and "BotSameTeam" get the real team values.********************************************************************************BUG: Some of the bots voice commands are wrong. They are commanded to attackthe     enemy base but they say "Okay, I will defend!"--------------------------------------------------------------------------------Solution: Corrected some voice commands in "BotCTFOrders_FlagNotAtBase" and         "Bot1FCTFOrders_EnemyDroppedFlag"********************************************************************************BUG: Spectators couldn't fly through doors if they are very close to eachother.     You can test it with some regular id maps (q3dm14, q3dm12) but there are     also many custom maps where this can happen! This is annoying because in      the worst case you can't move at all and are caught inside a door.--------------------------------------------------------------------------------Solution: There is a solution in a mod called "Hunt" by J. Hoffman.           Bugfix is included in this patch!********************************************************************************BUG: During making a mod I found it very hard to implement some of my ideas     (something like "Limbo" or "Meeting") because of the way the player spawn     effect, intermission and spawning on victory pads is handled. I reworkedit     a bit and simplified it so that the effect is handled when a client           respawns     (as the name says) and not when a client begins. I think this will help      more     mod makers everytime they want to make changes to spawning of players,bots     on victory pads or monsters... and want to avoid spectators with      Machineguns     which can kill and score... :()     NOTE: I also renamed the poorly named function "respawn"            to "ClientRespawn". If someone searches the code base for "respawn"            it was really hard to find the correct place for what was            meant. "respawn" is used so often, that you really get headache ...            now with "ClientRespawn" it's easier!     IMPORTANT: The whole respawning, moving to intermission point and                 everything related to that is now done in a more reliable way                 without changing the default behavior. (How critical the whole                 spwaning mess was did you see by yourself (ioquake3 rev. 2076).                 With this patch it's safer.                 Trust me, I spent hours of fixing silly problems...-------------------------------------------------------------------------------- Solution: Simplified "ClientBegin" and moved the teleport event            to "ClientSpawn".********************************************************************************BUG: If a player is dying or hurted under water the hurt/dying sounds AND the     drowning sounds are played together. This is silly. Moreover it's no good     idea to let the server play client sounds! There was a solution in a mod      called "Q3A++" by Dan 'Neurobasher' Gomes which fixes the problem.--------------------------------------------------------------------------------Solution: Created a "CG_WaterLevel" function to play the appropriate sounds.********************************************************************************################################################################################  
>Modular rendering system. Patch by use.less01This might break MSVC builds. I'll take care of it later  
>Reverted r2145 per Timbo's suggestion.  
>Some more removal of unused code in addition to r2104, by Zack Middleton  
>Fix game restart after curl download finished  
>Removed "Color Depth" from q3_ui system settings, it didn't control anything.  
>Fix crash bug introduced in r2116. traceEnt does not always have to be a client, so gauntlet attacking something that is not a client will crash the game. Thanks to Ensiform for reporting  
>- Add x86_64 platform for MacOSX- Fix compilation on MacOSX gcc  
>- Added r_mode -2 for using display resolution.- Changed q3_ui's very high video settings use display resolution.  
>- Fix already defined command warnings for minimize- Fix recursive CL_Shutdown warning and "command already defined" warnings when quitting while playing on a server that changed the gamedir.  
>Disabled getting motd from update server in standalone build.  
>[16:31:51] <ZTurtleMan> Thilo: two small fixes, one for r2112 and one for r2116. http://pastebin.com/raw.php?i=h19r211Z  
>* Fix some grammar in DLL loading* s/Sys_LoadQVMDll/Sys_LoadGameDll/  
 


2011-07  
Contributor(s):  
Thilo Schulz  
>Fix alignment issues in message sending/reading that would crash IRIX, thanks to Canavan for supplying a shell where I could fix this (#5077)  
>Fix indentation  
>Have server send protocol version in challengeResponse so protocol negotiation works. (Where did this one get lost?)  
>Include q_shared.h instead of redefining these  
>Fix legacy protocol with new packet queueing  
>Forgot to set default rate back to 100kbyte/s  
>Bug 5067 - Remove references to unused teamtournament gametype. Toggle areaportal on mover ents where due is needed, patch by Ensiform  
>- Forgot to mention: last rev (2077) bumped default protocol version to 70- Fix queued packet rate control  
>- Apply parts of Ben Millwood's target bitfield patch (#3787)- Fix Ryan's FIXME and have voip packet buffer on the server dynamically allocated via Z_Malloc and store pointers in a circular buffer- Improve voip target parsing on top of Ben Millwood's patch- Add new "spatial" target where speaker is spatialized in 3d space and can be heard by all clients in hearing range (s_alMaxDistance)  (#4467)- Decrease voip sound lengths from 240ms to 80ms per voip packet to mitigate udp packet loss and decrease latency- Protocol version incremented to 71  
>Bug 5094 - Code cleanup, patch by Zack Middleton and DevHC. Fixes unused-but-set gcc warnings  
>Move rate limiting / queued packet sending logic from Com_Frame() to sv_main.c  
>- Revert back to Z_Malloc from Hunk_FreeTempMemory introduced in r2077 as Hunk_FreeTempMemory must be freed in LIFO order (#5079)- Introduce SV_ClientFree() to prevent memory leaks r2077 was supposed to fix  
>Shut up returning functions with noreturn attribute warning  
>Bug 4812 - GCC __attribute__ annotations for printf, non-returning functions etc., patch by linux@youmustbejoking.demon.co.uk and Zack Middleton  
>Fix last "noreturn" warnings  
>Change DLL search path order for external libraries that are linked at runtime, like libcurl or libopenal to:  * system library paths  * executable path  * fs_basepath  
>- Make sure at least one round of download packets and packet queues gets sent each frame- Fix timeVal select timeout value for case of unlimited data rate and now downloads are active  
>- Implement dual protocol support (#4962)- Fix several UDP spoofing security issues  
>- Switch master server protocol to dpmaster for better game separation. Based partly on patch by Zack Middleton- Get rid of ugly cvars sv_heartbeat and cl_gamename and replace with single com_gamename- Remove sv_flatline. Flatlines are ignored by dpmaster and are considered to be insecure because flatlines can be udp-spoofed.  
>Remove one unnecessary loop in the beginning  
>- Improve snapshot rate and data rate control- Make server send packet fragments and queued packets when server is idle- Voip protocol detection is tied to com_protocol making past-end-of-message reading unncessary- Use Hunk_AllocateTempMemory() for buffering VOIP packets and fix buffering scheme that ryan hates so much- Disable packet scrambling for new protocol as it is useless now- Get rid of the old packet scrambling functions predating latest point release- Use Hunk_AllocateTempMemory() for netchan packet queue to fix memory leak when client gets disconnected with packets in the queue- Use Hunk_AllocateTempMemory() for download blocks to fix memory leak when client gets disconnected with download blocks in the queue- Fix SV_RateMsec to account for udp/udp6 packet lengths  
>- Greatly improve UDP downloading speed for clients- Add download rate control cvar sv_dlRate- Don't send snapshots to downloading clients  
>Fix compile for USE_VOIP=0  
>Bug 5066 - Plasmagun and BFG don't play the explosion when they hit players, patch by Ensiform  
>Permit downloading files larger than 65 Megabytes via UDP by working around short int wraparound.  
>Bug 5069 - Remove unused variable console_color, by uZu  
>Add fixes to ui menu by Ensiform and DevHC (#5062)  
>Fix extension name comparison for DLL files  
>Bug 5075 - Fix comments in quake3 configs, patch by q3urt.undead@gmail.com  
>- Add dual protocol support to team arena demo selector- Fix demo selection in team arena menu on case sensitive file systems- Some changes in the way how vanilla q3 demo file lists are compiled in the menu  
>Fix delta compression breaking due to packet queuing  
>- Add better protection against DoSing connecting users from connecting- Have Com_sprintf return string length- add STR_LEN macro for static strings  
 


2011-06  
Contributor(s):  
Tim Angus  
Thilo Schulz  
>Bug 5036 - Grappling hook does not load trail shader, patch by Zack Middleton  
>Various fixes to vm_interpreted.c:- Add opStack protection- Fix dataMask check for OP_BLOCK_COPY- Add instruction number check for conditional jumps- Make errors in VM_PrepareInterpreter nonfatal  
>(#5016) - Calls to trap_CM_PointContents don't update their origins based on moving entities (water). Patch by Ensiform  
>- Add x86_64 support to vm_x86.c- Fix warning on mingw64  
>Bug 5034  - q3_ui: fill whole screen and allow cursor to move to edge in widescreen, patch by Zack Middleton  
>Use Q_ftol for vm_interpreted  
>- Improve game_restart:  * differing screen resolutions and network settings are now honoured when changing fs_game  * Fix hunk memory leak on game_restart  * Move cls.state and cls.servername to clc so connection state is fully preserved over game_restart  * Revert back to previous fs_game after disconnecting from a server that triggered a game_restart  * Fix error dialog popping up after every game_restart if an error happened previously (reported by Ensiform)- Fixed that not all commands added by CL_Init() would be removed by CL_Shutdown()  
>Patch and description by ensiform (#5043):This patch moves cg_particles.c out of cg_marks.c to the actual file that wasalready there but not used.  By default WOLF_PARTICLES definition is commentedout if someone wants to use the old cg_particles.c changes.  cg_particles.c hasbeen added to the makefile and msvc projects.  
>Fix grenade rotation ends always the orientation (#5053), patch by Eugene C.  
>Make g_doWarmup archived cvar  
>Patch from Tremulous / description from Zack Middleton: (#5041)Clear game logfile handle after closing file.Game does not clear logFile handle when closing file. Might be an issue ifG_LogPrintf is called after this.Patch from tremulous http://svn.icculus.org/tremulous?view=rev&revision=2041  
>- align sse control word storage space to 16 byte boundary for snapvector- replace some whitespace with tabs in snapvector.c- Give gcc a bit more freedom in choice of registers  
>Fix to (#5051) - strchr in GraphicsOptions_GetAspectRatios() might return NULL for some strange reason  
>Bug 5035 - Automatically selecting player model in q3_ui does not work if skin is not specified, patch by Zack Middleton  
>- Clear ip address listings after a NET_Restart- check for oldGameSet instead of the gamename string  
>- Fix memory leak in DMA sound after S_Shutdown()- Make codec load use temp hunk memory instead of zone mem- Fix sound issues with direct sound and game_restart (#4526)  
>Fix wrong macro. MSVC win32 build should work again now.  
>Add forced VM unloading to Com_Quit_f  
>Fix ipv6 server query  
>Fix newlines in Com_Error, patch by Zack Middleton (#5023)  
>- Add MASM assembler files for MSVC x64 projects to support vm_x86 in x64 mode- Clean up ftol()/snapvector() mess- Make use of SSE instructions for ftol()/snapvector() if available- move ftol/snapvector pure assembler to inline assembler, this will add x86_64 and improve support for different calling conventions- Set FPU control word at program startup to get consistent behaviour on all platforms  
>More color fixes for railgunShow other players' railgun color and their firetime state.Show snapshot client's color on world item models of railgun.Fix the impact mark using color2 (spiral) rather than color1 (beam).Credits go to Ensiform and Harekiet for the refire portion.  
>Fixes for bugs introduced in last several revisions  
>Fix by Laurent Desnogues for my feeble attempt at a fix  
>Fix #if macros for idx64 and id386  
>Allow recursive VM entry for VM operations as well  
>- Bug 5034 - q3_ui: fill whole screen and allow cursor to move to edge in widescreen, by Zack Middleton  Check if uivm is loaded before using it  Patch adds a check for uivm before using it, fixes running dedicated server  using client binary.  Missing uivm check pointed out by Ensiform.- Bug 5049 - TA UI forces overstrike mode on when focusing an edit box, by Ensiform- Bug 5052 - Missing podium timer initialization, by Eugene C.  
>- Merge http://svn.icculus.org/tremulous?view=rev&revision=2185, patch by Chris Schwarz- Remove Q_snprintf as Com_sprintf exists already  
>All patches by Zack Middleton:- Bug 5057  - Two weapon number range checks allows invalid number- Bug 5058  - Railgun explosion cannot be colorized- Bug 5059  - Client's railgun does not glow in third person and mirror- Bug 5060  - Warning in RAVENMD4 R_GetAnimTag cross compiling with amd64-mingw32  
>- Fix opStack size for vm_x86.c- Change opStack alignment to 16 for vm_x86_64.c  
>Bug 5048 - Entity constant light does not work correctly, bug found by Eraesr (Eraser?)  
>Fix #lese in last commit  
>Fix return values for several syscall functions, patch by Zack Middleton (#5018)  
>Fix wrong usage info message for cmd dumpuser, patch by Zack Middleton (#5024)  
>- Automatically reset fs_game to "" if it was supplied by the user and is equal to com_basegame- Fix problem where users could change values of CVAR_INIT variables after the call to Cvar_Get() via Com_StartupVariable()- Move sound shutdown after client shutdown so VMs don't hold invalid sound handles in memory  
>- Small change to search path order - local files not in .pk3s take precedence over files in pk3s. Should make life easier for modders/mappers wanting to override textures that are already contained in some older pk3- Make VM loading more robust, change loading order: when vm_* == 0 first try loading DLL, then QVM in *each* search directory/path- Fix FS_FileForHandle that would return a FILE pointer to invalid file handle 0  
>* Remove misleading comment  
>Fix x64 compilation on MSVC  
>Properly fill in occurances of "foobar" in GPL file headers, patch by Zack Middleton (#5024)  
>- Use EmitCallDoSyscall() to call the jump violations function which guarantees 16-byte stack alignment- Add x64 code for MSVC _asm() blocks, not tested yet.  
>Correct fix to (#5051), patch by Roughael  
>- Don't try to load QVM/DLL files on pure servers- Fallback after failed DLL load will be VMI_COMPILED, not INTERPRETED  
>Fix unnoticed bug in game_restart  
 


2011-05  
Contributor(s):  
Thilo Schulz  
>- Use edx for CALLs instead of ecx, as the latter does not require any push to stack- Make Linux AT&T asm code consistent with the MASM codeblock  
>- Add HOMEPATH default name define to q_shared.c, patch by uZu (#4973)- Reverted change from (#4972) and implemented the other suggestion to be consistent with cl_cgame.c and cl_ui.c  
>Do use the SV_Game{Error,Print} functions (#4972)  
>- Set default opStack size to 256- Fix integer wraparound. opStack offset in rbx will always be >= 0  
>DevHC messed up  
>Refactoring patch by DevHC  
>Fix out of bounds array index (#4960) patch by Ben Millwood  
>- Implement opStack protection: Use register %ebx for scaled indexed addressing mode to access opStack, make opStack push/pop operate on %bl portion only- Add a third pass to VM compilation for computation of jump address offsets, removing the need to dereference into vm->instructionPointers[] for every call/jump- Make use of 0F opcode prefix relative jumps- Call Com_Memcpy for OP_BLOCK_COPY- Fix several missing range checks for vm->dataBase memory access  
>Fix spawnflag behaviour for trigger_hurt, patch by DevHC  
>Fix sending reliable commands before being connected, patch by Eugene C. (#4971)  
>Remove newlines from Com_Error message format strings, patch by DevHC  
>- Add vm_x86.c optimization patch by Eugene C.- Remove ASM syntax specific code (AT&T vs MASM) for OP_CALL and replace with machine code  
>Add opStack protection to defend against malicious QVMs  
>Fix one byte overflow  
>Use scaled indexing mode n=4 for addressing opStack, this way we can use the 8 bit offset value in %%bl to address an OPSTACK_SIZE of 1024 which was the old value.  
>Remove sv_strictAuth cvar for STANDALONE games  
>ensure that ent->classname is always non-null (for entity numbers up to level.num_entities-1, and ENTITYNUM_WORLD and ENTITYNUM_NONE), for player entities and #ENTITYNUM_NONE in particular, patch by DevHC  
>I don't seem to get these constraints right. This should fix it  
>Fix VM call for release version, bug introduced by myself in r1994  
>- Reverting accidentally committed vm_x86.c- Last commit contained some refactoring for vm_x86_64.c  
>Add error handling to malloc as well  
>fix overzealous cvar cheat protection, patch by cyrri (#4974)  
>- Remove Q_strrchr(), replace with standard, portable strrchr()- Add strrchr() to bg_lib.c, patch by DevHC  
 


2011-04  
Contributor(s):  
Thilo Schulz  
>Fix a few comments (#4591)  
>- Fix data alignment issue with glReadPixel call, reported by Guillaume Bougard (#4954)- Fix data alignment issue in raw AVI recording for weird resolutions (like 1366x768)  
>Fix player queueing for tournament play (#4939)  
>Revert protocol 69 pending further discussion (#4962)  
>Add better support for analog joysticks, patch by use.less01  
>Consider key states before startup, patch by Zack Middleton (#4950)  
>- Harden the client and server protocol against UDP spoofing attacks. This will defend ioquake3 against http://aluigi.altervista.org/papers/q3noclient.txt (#3041)- Retains full compatibility to the old but unsecure protocol between clients and servers- Harden the connection process against DoS attacks, possibly connected to UDP spoofing  
>Replace a few numeric constants with already defined macros, patch by ZTurtleMan  
 


2011-03  
Contributor(s):  
Tim Angus  
Thilo Schulz  
>Patch by Zack Middleton (#4920)  
>Zack Middleton made me do it  
>Add g_humansplayers (found by server) and g_needpass (cvar) to serverinfo (#4702)  
>(#4918) Gametype clamping using constant integer in missionpack ui, by Zack Middleton  
>(#4925) - com_pipefile to create a named pipe for sending commands from other processes, patch by Chris Schwarz  
>* Crash recovery for com_pipeFile (Lakitu7)  
>(#3767) Some protection from malicious qvms - patches and ideas by Amanieu d'Antras and Ben Millwood  
>Fix bug where Com_StartupVariable would set CVAR_USER_CREATED on already existing cvars  
>(#4919) Extra variable in missionpack ui's bind_t structure, by Zack Middleton  
>Fix quirk reported by Zack Middleton  
>Make Video settings menu revert some settings to default values via Cvar_Reset() instead of hardcoded values (#2589)  
>Refactoring patch by DevHC  
>- Fix potential out-of-bounds read in files.c, fix by using new FS_IsExt- Add capability to load demos with com_protocol suffix, partially applied patches from Simon McVittie- Fix demo loading if protocol number has more digits than 2- Minor refactoring, replace all occurances of suffix "dm_" with global macro DEMOEXT  
>Add cvar "protocol" so user can change protocol version on command line, for standalone games. Most of the patch by Simon McVittie with a few minor modifications by myself  
>(#4291) Redundant statement in client console, by Zack Middleton  
>Bug 4936 - Wrong color for non-ascii symbols in console  
>(#4922) Use screenYScale, not screenXScale, for scaling Y, by Zack Middleton  
>Fix systeminfo command, fix by DevHC  
 


2011-02  
Contributor(s):  
Tim Angus  
Zachary Slater  
Thilo Schulz  
>Fix STANDALONE in files.c  
>Make NET_Sleep wait 1ms less than requested, then busy-wait the last ms for better timeout precision.  
>Fix #4683, thanks Zack Middleton  
>Ben Millwood fixing his own stuff (#4598)  
>Patch by Simon McVittie to improve dynamic library loading (#4700)  
>- Add cvars cl_gamename, sv_heartbeat, sv_flatline so standalone games can customise their messages to the master server  
>* Fix fp literals  
>Cleanup STANDALONE  
>First batch of getting replacing malloc() with Z_Malloc  
>Code cleanup patch by devhc  
>fix compiling error when in standalone mode  
>- Use select() to sleep when idle as opposed to busy waiting.- Introduce com_busyWait cvar to go back to old behaviour  
>Add minimize command (#4531)  
>OMGWHATISTHISSHITIDONTEVENKNOW  
>* Fix Sys_Milliseconds wrapping causing the flood protection code to   malfunction and block all traffic (reported by bubu^)  
>Fix console tab autocomplete for exec and condump on pure servers, patch by Zack Middleton  
>whatever devhc you're right  
>- A few code cleanups in gamecode- Add a bit of stuff from Zakk Middleton  
>Auto complete demos on not in pk3s while in pure servers. Patch by Zack Middleton (#4794)  
>Fix tourney score board. Thanks Zack Middleton for the patch and report  
>mage size_t typedef unsigned int instead of just int, thx devhc for suggesting  
>Thanks Simon McVittie for fixing the bug regression in https://bugzilla.icculus.org/show_bug.cgi?id=4629  
>- Change runtime standalone detection:  * com_standalone now read-only  * add new cvars com_basegame, com_homepath  * standalone now automatically detected when com_basegame is set to something different than baseq3 and no id pak pk3s are found  * This fixes https://bugzilla.icculus.org/show_bug.cgi?id=4699- Replace a few hardcoded string literals with macros- Add checks for Team Arena PK3s to FS_CheckPak0()  
>Fix adding multiple entries for same server when using globalservers several times, patch by Tequila  
>Fix banfile writing to wrong game directory  
>Fix https://bugzilla.icculus.org/show_bug.cgi?id=4733  
>Support non-256x256 videos in shaders, by Zack Middleton (#4745)  
>- Fix bug #4769 remote server crash- Fix potential 1-byte-buffer overflow in gamecode  
>Fix flag collision in botlib code, thanks Cyrri for reporting (#4886)  
>Fix levelshot so that it cannot be executed by remote clients (#4339)  
>Merge "which" command upstream from Tremulous, patch provided by Chris Schwarz  
>Fix division by zero, reported by Simon McVittie  
>r1833 now made some Linux systems spit out warnings. Fix this once and for all  
>http://www.angryflower.com/aposter.html(minor English issues, most of which are via /dev/humancontroller)  
>- Use MAP_FAILED error code for check whether mmap() was successful- Replace various malloc() with Z_Malloc- Fix several memory leaks when VM compilation failed and Com_Error is called- Make failed mmap/VirtualAlloc/malloc calls fatal  
>Fix strcpy copying buffer into itself, thanks to Simon McVittie for reporting and the patch (#4894)  
>Server crash can cause recursive call to Com_Error, too  
>Finally fix missionpack compiling for STANDALONE=1, yes, this is tested.  
>Windows doesn't know z in format string  
>Brace for incoming grammar fix by DevHC!  
>By ZTurtleMan: Cleanup; only load harvester data in harvester gametype, removed unused var, and ifdef a missionpack only var.  
>typos, patch by Ansgar Burchardt <ansgar@43-1.org>  
>- Make some string functions in g_cmds.c cleaner, by DevHC- embed VM_FREEBUFFERS() macro in do-while-loop  
>Fix buffer overflow, reported by Mads Lind  
>Remove guid again because we don't want every play on the server to know all guids, thanks brain for reporting  
>Still not compiling when STANDALONE is set  
 


2011-01  
Contributor(s):  
Zachary Slater  
Thilo Schulz  
>Make sure status reply always has at least one space between address and qport, important for ipv6 addresses.  
>- Add parameter checking to CL_*Ping* functions.- Remove unused CL_UpdateServerInfo function  
>Make sure com_developer global var gets written right after developer has been read from cmd line  
>Fix hanging client when map_restart executed on the server while client is still loading the map  
>add a missing \n from a cgame print(thanks again /dev/hc)  
>Make this change so standalone developers will know to change the HEARTBEAT game string for their versions, too.  
>Fix floating point imprecision causing glitches in snapshot sending  
>Make it use the correct game name in getserversExt queries  
>Fix bug reported by cyrri  
>remove the unused flags_t::field (/dev/hc again for this and previous checkin on Makefile, thanks!!!)  
>Revert changes because dpmaster doesn't work that way.  
>Make number of supported master servers tunable via define  
 


2010-12  
Contributor(s):  
Tim Angus  
>* (bug #4800) Don't prepend a slash to console commands if they're empty* (bug #4800) Limit console input length such that there is always room for a  leading slash  
 


2010-11  
Contributor(s):  
Ludwig Nussel  
>use mmap on freebsd too  
 


2010-10  
Contributor(s):  
Zachary Slater  
>Bugzilla #4629commands sent to client when disconnecte  
>Bugzilla #4749TAHUD: Fix hud fallback  
>Bugzilla #4753Potential buffer overflow in UpdateTournamentInfo()  
 


2010-09  
Contributor(s):  
Thilo Schulz  
>Fix flaw in my fix to #4737, thanks Zakk Middleton  
>Followup to #4733  
 


2010-08  
Contributor(s):  
Thilo Schulz  
>Second batch of bug fixes reported and patched by Zack "ZTurtleMan" Middleton:#4740#4741#4742#4743#4744  
>First batch of bug fixes reported and patched by Zack "ZTurtleMan" Middleton:#4736#4730#4731#4732#4733#4735#4736#4737#4738#4739  
 


2010-07  
Contributor(s):  
Thilo Schulz  
>Fix buffer overflow, report and patch by Eugene C. (#4669)  
 


2010-06  
Contributor(s):  
Ludwig Nussel  
>fix typo  
 


2010-02  
Contributor(s):  
Ludwig Nussel  
Tim Angus  
>need to hardcode "baseq3" to prevent download of id files even if compiled STANDALONE  
>enable (dummy) cdkey calls in standalone mode to prevents mods from crashing  
>* Sys_Dialog for more user friendly error reporting* (bug #3932) Recovery from bad video settings  
 


2010-01  
Contributor(s):  
Ludwig Nussel  
Tim Angus  
>* Rate limit getstatus and rcon connectionless requests  
>avoid setting cvars by name each frame  
>set default rate to broadband  
>__WORDSIZE is not available on non-GNU systems (Dominic Fandrey)  
>make reason for voip disable more visible  
>* That probably deserves a Com_DPrintf as well  
>* (bug #4357) CVAR_ROM+CVAR_ARCHIVE is not read from q3config  
>* Fix some compiler warnings  
 


2009-12  
Contributor(s):  
Tim Angus  
>* (bug #4369)  Cvar modified flags are not updated in Cvar_Get (Lakitu7)  
>* (bug #4346) Dedicated server uses 100% CPU when stdin is not a TTY* com_speeds reports misleading values on dedicated server (Guillaume Bougard)  
 


2009-11  
Contributor(s):  
Tim Angus  
Ludwig Nussel  
Thilo Schulz  
>This is true always, anyways.  
>fix wrong strcpy usage (#4331, patch by Andreas Bierfert)  
>- Add unset command for cvars created by the user- Fix crash bug when maximum number of cvars has been reached- Fix cvar_restart- Add possibility to cleanly switch mods ingame (#2819)  
>Use new Sys_SetEnv here  
>* Improve displayed error message when pak?.pk3 is missing  
>Mute sounds with 0 volume when game is minimized/unfocused instead of Stopping all sounds. Fixes (#4336)  
>Commit two patches from SmokingGuns's Tequila, fixing problems with very fast movers and a typo in the string drawing function. (#4329) and (#4330)  
>* Rewrite win32 Sys_Mkdir to use CreateDirectory* Make FS_ReplaceSeparators filter out runs of multiple separators* Make FS_CreatePath skip creation of the root directory  
>Fix bug where game freezes in infinite loop because it doesn't find a spawn point on maps with many bot/human-only spawnpoints. Thanks Pan for reporting this  
>Remove leftover stub  
>Forgot this one  
>Added TTimo's QuakeLive-style mouse acceleration, thanks Gabriel Schnoering and TTimo for the patch. (#3693)  
>* Reimplement r1597-1598 in a better way (Oopss)* Fix Sys_SetEnv warning  
>Define stack sizes at central placealso reverts bug 4282 as stack is included in bss already so nothing that needs fixing  
>Zakk wisheth - Thilo answereth (#4070)Use cg_drawWeapon 2/3 to make weapon left-handed/centered  
>more security checks in interpreter (#4249)  
>- Add stopmusic command - Make cvar s_muted read-only  
>* Fix demo playback being broken, not entirely sure by what or when  
 


2009-10  
Contributor(s):  
Tim Angus  
Ludwig Nussel  
Thilo Schulz  
>Show color codes in full length, patch by Amanieu (#4318)  
>fix zlib includes  
>Whoops.. don't make it overwrite cmds in case of recursive error.  
>Forgotten else  
>Fix botlib parser for negative int/float values, thanks to Makro for reporting (#4227).  
>Make s_volume cvar affect volume of S_Base_RawSamples, thanks to Jay Weisskopf for reporting. https://bugzilla.icculus.org/show_bug.cgi?id=3474  
>MinGW doesn't have setenv() either, so.....  
>Just unix2dos, nothing to see here ...  
>Apply patch from Jay Weisskopf adding an aspect ratio menu entry to resolution selector: https://bugzilla.icculus.org/show_bug.cgi?id=3475  
>Fix recursive error for disconnect after reliable client command overflow. Thanks to /dev/humancontroller for reporting. https://bugzilla.icculus.org/show_bug.cgi?id=3616  
>* Actually that can be more precise...  
>Add guid to userinfo string, thanks Guillaume Bougard. https://bugzilla.icculus.org/show_bug.cgi?id=3570  
>- Applied patch from /dev/humancontroller to set cvar_modifiedFlags from Cvar_Set_f (#3636)- Exchanged ugly code with Cmd_ArgsFrom()  
>- Modify color generating codes to only accept numbers and not alphabetical chars anymore- Fix client clean name so that it cannot be tricked anymore, see https://bugzilla.icculus.org/show_bug.cgi?id=3313  
>Don't need a call to va() for this  
>* Make [sv|cl]_packetdelay work when timescale is not 1 (arQon)  
>Fix uninitialized words in VM interpreter, reported by Patrick Baggett (4281)  
>Fix memory overwrite when client has too many maps. Thanks to beast for the reporting & the patch. http://bugzilla.icculus.org/process_bug.cgi  
>Don't award assist bonuses to flag capturing player, https://bugzilla.icculus.org/show_bug.cgi?id=3260  
>* Fix MinGW build (it doesn't have _putenv_s)  
>- Add Ben Millwood's implementation of strtod/strtol to bg_lib.c- Add %s scanf patch from M. Kristall to scanf in bg_lib.c  
>Fix fake checksum handling if client is unpure, make sure client does not remain unpure after FS_Restart. Thanks to /dev/humancontroller for reporting. http://bugzilla.icculus.org/show_bug.cgi?id=3605, thanks  
>* (bug #4232) Avoid "cl.snap.serverTime < cl.oldFrameServerTime" for slow  loading clients combined with short g_warmups  
>Fix infinite loop in case an invalid pk3 file has been downloaded from the server. Thanks tjw for reporting (#3074)  
>Rewrite of key event processing, thanks to /dev/humancontroller and Ben Millwood. https://bugzilla.icculus.org/show_bug.cgi?id=3374  
>Fix circumventing sv_maxping restriction, thanks to Amanieu for reporting. http://bugzilla.icculus.org/show_bug.cgi?id=3423  
>Revert back color code change  
>Only create botlib.log if in bot developer mode.  
>Fix netcode inconsistency, thanks to /dev/humancontroller for the patch, see http://bugzilla.icculus.org/show_bug.cgi?id=4060  
>* Fix incorrect comment  
>* (bug #4249) Fix buffer overflow in x86 VM  
>Fix environment variable handling for Linux, make setenv command added before parsing of configuration files. (https://bugzilla.icculus.org/show_bug.cgi?id=3626)  
>fs_fakeChkSum is indeed obsolete and unnecessary. Removing it altogether now.  
>Fix bot loading in case player supplied invalid bot names  
>Adding missing header includes to botlib files. Thanks to Ben Millwood for patch. (#4237)  
 


2009-09  
Contributor(s):  
Tim Angus  
Ryan C. Gordon  
Thilo Schulz  
>Patched to compile.  
>* ...and make sure it compiles  
>Enable -fvisibility=hidden on Linux.This will prevent further symbol clashes, and makes the shared libraries 10 to 20 percent smaller.We should enable this on other platforms, too, if we can guarantee they'll use gcc 4.0 or later and the platform supports it.  
>Fixed compiler warnings on gcc 4.3.3 (and probably others).  
>Removed more unused variables. Partially fixes Bugzilla #3782.  
>Prevent hang in S_UpdateBackgroundTrack() with some sample rates.  Fixes Bugzilla #4022.  
>Removed broken music fading code from snd_dma. Fixes Bugzilla #3757.  
>Allow Cvar_Toggle_f() to iterate through a list of values.  Fixes Bugzilla #3591.  
>Don't send a 0-length command to cgame during map_restart.  Fixes Bugzilla #3965.  
>Better handling of "voip" console command.Prints usage info and current gain values, and catches a case where we report an error where no error exists.  Fixes Bugzilla #4018.  
>* Fix warning in cl_main.c* Fix bug #4026 (SDL dx backend doesn't work on some machines)  
>Fixed triggering Com_Error() when kicking a large number of bots at once.  Fixes Bugzilla #3418.  
>Add received rcon command string to server log, see https://bugzilla.icculus.org/show_bug.cgi?id=3748  
>* (bug #4282) Fix potential overlap of VM stack and bss sections (Patrick  Baggett)  
>Echo console command now colorizes by string, not token.  Fixes Bugzilla #3879.  
>Minor reworking to check command line cvars before Com_InitZoneMemory().This lets you set com_zoneMegs from the command line (although still not from a config file, but oh well).  Fixes Bugzilla #2571.  
>When dropping bots, don't move to CS_ZOMBIE. Go straight to CS_FREE.They aren't a real network connection, so you don't want to waste time before opening the slot for humans.  Fixes Bugzilla #4243.  
>Threw in a hack to fix rendering of credits menu in widescreen.  Fixes Bugzilla #2744.  
>* ...and actually r1626 this time  
>Don't allow negative arguments to the "wait" console command.  
>SetTeam fix from Martin Doucha."Actually, client->ps.clientNum is unsafe. We had a little hunt for this sometime ago in Tremulous last year (it caused kick failures, annoying popupwindows and other nasty bugs). The problem is that a following spectator getsfull copy of client->ps of the followed player including clientNum. If you thentry to use this "shared" clientNum, you might affect someone else than youwanted.r1019 changes are safe as long as bots don't spectate players. However, a briefgrep on current code has revealed unsafe client->ps.clientNum usage inSetTeam(). If a following spectator uses team command when forced balance ison, it'll count teams incorrectly and send the error message to the followedplayer instead. Here's the fix."  Fixes Bugzilla #2986.  
>Removed unused variables.CM_LeadArea() has no side effects, so those could go, too.   Partially fixes Bugzilla #3782.  
>Let a separate libdir be specified for loading libraries.   Partially fixes Bugzilla #4271.  
>Renamed bot_developer to botDeveloper to prevent symbol clash.qagame*.so has a variable named this too, and this confuses the Linux dynamic loader since we're not using -fvisibility=hidden. Fixes Bugzilla #3944.  
>Added Intel CC compatibility to vm_x86.c's inline asm.  Fixes Bugzilla #3338.  
>Fixed infinite recursion of writing crashlog because we're out of file handles.  Fixes Bugzilla #3772.  
 


2009-07  
Contributor(s):  
Zachary Slater  
>Fix for bad ping times, see bug 3966 but note that this patch is different, got a fresh one from Amanieu in irc.  
>More 3966 business:http://bugzilla.icculus.org/show_bug.cgi?id=3966I'm hopeful that the server browser will surrender.  
 


2009-06  
Contributor(s):  
Thilo Schulz  
>Replace a few sprintf with Com_sprintf  
>- Introduce seeding of the random number generator at startup- Replaced all engine-side occurances of rand() with random()  
>Move these definitions over for other files to use in preparation of the next commit  
>Make client send a random challenge number in getchallenge requests  
>Revert changes of rand() to random() as random() was redefined in quake3.  
>- fix typo in previous commit to net_ip.c- Make servers send heartbeats to master servers in ipv4 as well as ipv6 if master server has both protocols  
>Fix warning in Sys_RandomBytes() usage  
>I'll retain the new way seeding the random number generator.. these calls are therefore redundant  
>Make servers echo challenge codes from client getchallenge commands  
 


2009-05  
Contributor(s):  
Ludwig Nussel  
Thilo Schulz  
>whitespace correction  
>mark functions static (#4010)  
>- Introduce new NET_CompareBaseAdrMask for easy comparison of ip address ranges- Overhaul of the new banning functions:  * basic check for redundant bans/exceptions  * introduction of sv_banFile to make it possible to configure the file where to read bans and exceptions from  * bans can now be deleted by giving address ranges, too.  
>This could never have worked in the first place. Duh.  
>msg->oob is actually qboolean (#4010)  
>cvarlist: also display systeminfo and user created flags  
>Make command net_restart work so that port/ip settings can be changed without server restart  
>SV_ReplacePendingServerCommands is unused  
>fix name compare in 'follow' command (#4013)  
>make Cvar_Command use all arguments just like Cvar_Set_f (#4063)  
>add missing trap_RealTime prototype (#4015)  
>define STRING and XSTRING in q_shared.h (#4054)  
>whitespace fixes  
>Minor fix for server infostring. Thanks to slacker  
>More commentary to source code  
>align stack before re-entering engine to make sse work (#4051)  
 


2009-03  
Contributor(s):  
Tim Angus  
Ludwig Nussel  
>* Remove superfluous comments committed with fix to bug #3999  
>qcommon: vm: sparc, like 386, doesn't need var-args conversion.Signed-off-by: David S. Miller <davem@davemloft.net>  
>initialize qport with random value instead of time (#3999)  
>fix STANDALONE challengeResponse (#4000)  
 


2009-02  
Contributor(s):  
Tim Angus  
>* s/FS_FilenameIsExecutable/FS_CheckFilenameIsNotExecutable/g* Fix potential buffer under run in FS_CheckFilenameIsNotExecutable  
 


2009-01  
Contributor(s):  
Ludwig Nussel  
>gamename is already a cvar with CVAR_SERVERINFOdo not set gamename to different values in getstatus and getinfo responses  
>security fix: prevent command injection via callvote  
>fix overflow in CG_ParseTeamInfobased on patch for Tremulous, thanks to Roman Tetelman  
>fix potential segfault (found by DerSaidin in xreal)  
 


2008-11  
Contributor(s):  
Tim Angus  
Ludwig Nussel  
>move location of version string in console a bitpatch by 'devhc97' (#3758)  
>fix strict aliasing issuesPatch by Przemysław Iskra (#3805)  
>fix 64bit VM interface to work on ppc64 (#3838)  
>fix variable declaration (#3849)  
>* Fix some new GCC 4.3 warnings* Fix many many strict aliasing warnings, now that it's re-enabled  
 


2008-10  
Contributor(s):  
Ludwig Nussel  
>fix crash with videos on ppc (#2523,3802). Patch by Przemysław Iskra  
 


2008-09  
Contributor(s):  
Tim Angus  
Thilo Schulz  
>* Add Com_HexStrToInt* Fixed some whacky indentation in q_shared.c* Allow single character keys e.g. 'c' to be used in cl_consoleKeys in addition  to ASCII characters* Experimental code to ignore dead keys  
>- Add scope id to ipv6 addresses.- Clean up a few other ipv6 issues like removing the seemingly unnecessary MacOSX workaround.- Bring ipv6 master server up to speed for dpmasterThanks go out to Mathieu Olivier for this work.  
>* Move command argument completion from being hard coded to being associated  with the individual commands to be completed  
>* Supply specific identifier to the master server (Mathieu Olivier)  
 


2008-08  
Contributor(s):  
Tim Angus  
>* Revert 'Handle dead keys more gracefully by taking a "best guess" rather than  ignoring completely' from r1459; it can't ever work acceptably, especially on  azerty/qwertz layouts* Make the ordering of the output from in_keyboardDebug more sensible* Add cl_consoleKeys cvar, a space delimited list of key names or characters  that toggle the console  
>* Fix unused variable warning* Add USE_LOCAL_HEADERS guards to sys_loadlib.h  
>* Handle dead keys more gracefully by taking a "best guess" rather than ignoring  completely* When activating or deactivating the mouse flush any pending motion events;  this should stop the view moving unpredictably in these circumstances* Add keyname completion to "unbind"  
>* Restrict OpenAL capture support test hack to OS X, where it is required; this  fixes a crash on exit with Windows when using OpenAL  
>* More robust x86 vm entrypoint/callback assembly (Tron)  
>* (bug #3729) server dependencies on client.h (Ben Millwood)* (bug #3731) BUILD_MISSIONPACK flag in Makefile (Gabriel Schnoering  <gabriel.schnoering@gmail.com>)* (bug #3756) Q3VM crashes on unaligned block copy with SIGBUS (Patrick Baggett  <baggett.patrick@figglesoftware.com>) and...* (bug #3755) IOQuake3 shouldn't use GCC-specific __FUNCTION__  
>* Tidy up the keyboard code a bit, add in_keyboardDebug  
>* Fix to console completion bug introduced by the last fix (from the oops  dept.)  
>* Change win32 client Sys_Sleep so it ONLY sleeps since before it was waking on   more or less any input event; fine for the server, not so much use for the  client* In the main loop, don't bother sleeping if it's going to be less than 10ms as  the methods we're using to sleep at the moment aren't very precise* Add Sys_PlatformInit for platform specific initialisation* In win32 Sys_PlatformInit force selection of the DirectX SDL backend in order  to get better fullscreen mouse input (in conjunction with a patched SDL DLL  http://bugzilla.libsdl.org/show_bug.cgi?id=265)  
>* Always show the mouse cursor when the mouse is disabled* Rename IN_StartupJoystick to IN_InitJoystick, add IN_ShutdownJoystick* Add IN_Restart, which avoids calling IN_DeactivateMouse at the wrong time* Call IN_Restart when changing r_fullscreen* Add CVAR_ROM r_sdlDriver for easy checking of the SDL driver in use* Random README tweaks  
>* Collapse common command completion code into one function and fix the  incorrect buffer size parameter to strncpy (from the  how-the-fuck-did-this-ever-work dept.)  
>* Fix memory leak in win32 VM code (arQon/dmitry)  
 


2008-07  
Contributor(s):  
Tim Angus  
Ludwig Nussel  
Ryan C. Gordon  
>* Remove silly range check on sv_voip during initialisation* Changed dedicated binary dedicated cvar to CVAR_INIT and remove runtime check  
>* Fix killserver command for client binary based dedicated server  
>* (bug 3610) Server sending unnecessary newline with SV_ConSay_F (Tyler Schwend   <TylerSchwend@gmail.com>)* (bug 3623) COMMAND is mapped to the ALT key (Matthias <Kapffer@macbay.de>)* (bug 3665) Typo error in FS_FOpenFileByMode function (TsT <tst2006@gmail.com>)* (bug 3669) Some files left out of Solaris Packages (Vincent Cojot  <vincent@cojot.name>)* (bug 3680) server quit messages (Ben Millwood)* (bug 3682) Maps with >1024 models cause a segfault (misantropia  <bnoordhuis@gmail.com>)* (bug 3683) R_FindShader(): negative lightmap indexes cause stray pointers  (misantropia <bnoordhuis@gmail.com>)* (bug 3688) q3asm potential segfault fix and other changes (TsT  <tst2006@gmail.com>)* (bug 3695) Not allowing to write file with lib extention (.dll/.so/...) (TsT  <tst2006@gmail.com>)* (bug 3696) make-macosx-ub.sh outdated by revision 1340; test for Tiger not   working (Matthias <Kapffer@macbay.de>)* (bug 3698) #error reported as warning in q3cpp (and no #warning support)  (Ben Millwood)* (bug 3703) restoring the valued pre-SDL window behaviour (/dev/humancontroller  <devhc97@gmail.com>)  
>* Change dedicated cvar to CVAR_LATCH on the dedicated server  
>* Fix server info string voip setting  
>* In the dedicated binary, prevent setting dedicated cvar to 0  
>Reverted svn revision #1410 to sv_init.csv_voip is a protocol version number, not a boolean, so this check is reasonable and correct.  
>* Remove cl_platformSensitivity as it predates the move to SDL everywhere  
>* Use Sys_Sleep to limit FPS, which will save CPU* Add com_maxfpsUnfocused and com_maxfpsMinimized; self explanatory* Fix reopening of bug 3703, I hope  
>* Rename voip cvar to cl_voip* s/#if USE_VOIP/#ifdef USE_VOIP/* Add generalised runtime cvar range checking, currently on [sv|cl]_voip,  dedicated and a bunch of r_ variables  
>VOIP: Added cvar cl_voipCaptureMult to boost gain on recorded bits.  
>* Fixed client binary dedicated server* Revert 1286 as the checks are no longer redundant following above fix  
>fix build without VOIP (David Severwright, bug#3720)  
>* Sign check com_maxfps* variables  
>* Don't start UI when starting client binary with +set dedicated 1  
 


2008-06  
Contributor(s):  
Ludwig Nussel  
Ryan C. Gordon  
Zachary Slater  
>minor spelling fix.  
>VoIP: tweaked VAD code.Also added cl_voipVADThreshold cvar...if the power of a set of Speex frames doesn't exceed this value, it isn't transmitted.  
>Thanks to Lakitu7 for pointing this out.  
>VoIP: client can now specify targets for voice transmission.  
>VoIP: allow targetting last attacker, or the one in your crosshairs.  
>More VoIP work: treat voip/sv_voip cvars as protocol version numbers.  
>VoIP: Initial work on adding Speex preprocessor.  
>Whitespace cleanup.  
>VoIP: initial shot at voice activation.  
>Treat sv_voip cvar as a version number (0 == off, 1 == version 1 protocol).Don't publish it to server's info string if set to zero.  
>VoIP: attempt at changing voipPower calc and using it for VAD.The Speex VAD sort of sucks, honestly, or I'm not using it right. Now trying this algorithm, after denoising:    http://lists.xiph.org/pipermail/speex-dev/2006-March/004269.htmlAnd I'll play around to find the threshold for considering a set of frames to be "voice" from there.Also worth noting: we consider the power of the set of frames as a whole, so you need to sustain power for 0.25 seconds at a time, or it's not "voice."  
>VoIP: Fixed per-user gain output.  
>Changed the protocol for VoIP packets to support legacy clients.Previously, a legacy client wouldn't get a VoIP packet, but if they did, they'd panic and disconnect. Now they ignore them and continue on. This also gives us the framework to add other features legacy clients can ignore.Oh, this also has the benefit of allowing us to store incoming VoIP for playback in recorded demos. They'll play the chatter on VoIP clients, and be ignored on legacy ones. Huge win.  
>Initial patch for in-game VoIP support!  
>VoIP: functionality to adjust incoming audio gain, per-user.  
>VoIP: voip cvar should be 1 by default.  
>VoIP: Don't hardcode Speex sample rate.  
>Client shouldn't try to capture audio data if voip cvar is disabled.  
>VoIP: Enable Automatic Gain Control.  
>Forbid setting voip cvar if network data rate is too low.This prevents "Connection Interrupted" packets as VoIP data is incoming.  
>pass the correct size to Q_vsnprintf (Ian Lindsay)  
>VoIP: Only update from cl_voipSendTarget if sending data.  
>Don't allow client to capture audio if playing back a demo.  
>Removed an obsolete FIXME.  
>Changed a few VoIP cvars to be latched.It either doesn't make sense to change these mid-game, or doing so won't work.  
>Added ioq3-specific credits screen.  
>VoIP: Added cheapie VoIP meter.  
>VoIP: changed debug output filenames.  
>Don't show VoIP meter in all the common scenarios.  
>VoIP: Don't lose gain for good if using VAD on disconnect.This temporarily disables VAD so the system can clean up recording state.  
>sv_voip cvar should be latched.  
>VoIP: Save own voice when recording a demo.We fake a server packet and write it directly to the demo file at the point where we'd transmit to the server. This is a little nasty, but it seems to be the most reasonable solution.  
 


2008-05  
Contributor(s):  
Ludwig Nussel  
Tim Angus  
Thilo Schulz  
>* (bug 3641) Server is left running following a local disconnect  
>Show true framerate with stereo separation enabled  
>mumble link supportThe coordinate calculation was adopted from Warsow's mumble patch.  
>- replace a few constant values with GL macros in tr_cmds.c- tidy up top of tr_types.h a bit, change flags to hex representation- make ROM cvar enforcing really work- remove cg_stereoSeparation from cgame as it is obsolete.- Add CG_DrawCrosshair3D so people see crosshair correctly when stereoseparation is enabled  
>- variables with CVAR_ROM set get now overwritten by Cvar_Get() if the cvar exists already but was created by the user.- Fix null pointer crash in Cvar_Print_f(), thanks to humancontroller for reporting.  
 





2008-04-04 Various contributors
	+ Solaris fixes
	+ Replace vsprintf function in bg_lib.c with vsnprintf implementation started by Patrick Powell
	+ Compile bg_* files separately for each game module, as originally intended
	+ Write q3config_server.cfg for the server, to avoid reseting client variables
		after running a dedicated server
	+ Split image decoders into their own files
	+ OS X build updates for most compatibility
	+ Slackbuild
	+ Detect available resolutions and offer them in the in game menus
	+ A few botlib fixes
	+ Fix poppy captured audio when recording videos
	+ Extend console logging on crash errors
	+ Merge *BSD platform definitions in q_platform.h
	+ IRIX support
	+ Remove all the old bat/sh QVM building scripts
	+ Make master server used client configurable (cl_master)
	+ Fix to QVM compilation on big endian architectures
	+ OpenBSD support
	+ Autocomplete key names
	+ Don't build client command completion on the dedicated server
	+ Don't apply colour escape chars on input fields
	+ Rewrite of the win32 dedicated console
	+ Improved Makefile startup time
	+ Build dedicated server binary on Windows
	+ Bump Q3_VERSION to 1.35
	+ Replacement of platform specific backends with a generic SDL one
	+ Merge win_net.c and unix_net.c to net_ip.c
	+ Demote input related console information to developer only so that it doesn't
		spam the console every time input settings are changed
	+ PNG texture support
	+ Cleanup of tabulation in R_LoadImage
	+ Fixes to console scrolling
	+ New x86_64 vm that doesn't use gas
	+ Early out AABB collision optimisation
	+ Generate QVM dependicies in a better way
	+ Build process is quieter
	+ Replace horrendously long list of Makefile build rules with set of inference rules
	+ Allow CC to be overridden externally to the Makefile
	+ Move storage of console history from a cvar to a file in order to alleviate
		security concerns
	+ Fix bug where transparent surfaces wouldn't draw over skyboxes
	+ Add input sanitising to various sound playing functions called from mods
	+ Explicitly set OpenAL distance attenuation model
	+ Increased the number of registers used for the opStack in the PPC vm from
		12 to 16
	+ Fix endian issue in MDR loading
	+ Add cURL support for HTTP/FTP downloading
	+ Disable video command when not playing back a demo
	+ Print the SVN version string in Com_Init()
	+ OpenAL device enumeration support
	+ Fix 100% CPU usage on idle dedicated servers
	+ Windows home directory support
	+ Improve correctness of AVI files created by video command
	+ Better SDL joystick support
	+ sv_minRate
	+ [cl|sv]_packetdelay
	+ Various security fixes
	+ Fix JIT compiler code execution on NX-protected win32 OS
	+ Fix r_overBrightBits variable getting ignored on Linux
	+ cl_guid for semi-reliable server authentication
	+ Anisotropic texture filtering
	+ Video export doesn't crap out with sv_pure 1 anymore
	+ Video export doesn't crap out when writing > 2Gb files anymore
	+ Fix to a bug where servers with long uptimes (~27 days) would consume 100%
		CPU if the running game did not set the nextmap cvar
	+ Some OSes no longer requires a vid_restart when changing r_fullscreen

2006-01-24 Various contributors
	+ Persistent console history
	+ Added code to sleep a bit when q3 has no focus and sleep a lot when it's
		minimised (SDL only)
	+ Cull excess speaker entities when using OpenAL
	+ Fix the operation of the delete key in *nix
	+ Only check the checksum on baseq3 pak0.pk3
	+ Overhaul of console autocompletion
		- No longer does weird stuff like move the cursor inappropriately
		- Autocomplete works with compound commands
		- Special autocomplete on some commands e.g. \map, \demo
		- Removed various hacks used to counter the original autocomplete code
	+ Fixed the ability to disable Ogg Vorbis
	+ s/i686/i586/ - see bug #2578
	+ Some sloppily coded mods call the Q3 sound API with NaNs -- sanitise this
	+ Removed advertising clause from BSD license as per mailing list discussion
	+ "make distclean" now does what you'd expect
	+ "make clean toolsclean" now does what "make distclean" did before
	+ GPL MD4 implementation

2006-01-16 Various contributors
	+ Move code/unix/Makefile to ./Makefile
	+ x86 OS X support
	+ "quake3" shell script as shipped with 1.32 (on linux) no longer needed
	+ Ogg codec support from Joerg Dietrich
	+ Fix to the gcc4/-O0 x86 JIT compiler bug
	+ Up the defaults for zone and hunk memory since some mods (UT) have large
		memory requirements that will have increased versus 1.32b due to some of the
		alignment fixes
	+ Dependency generation for the .asm files
	+ Remove FS_SetRestrictions
	+ Add FS_CheckPak0 for better error messages where dumb users are involved
	+ Added cl_autoRecordDemo, which when enabled automatically records a new demo
		on each map change
	+ Only display the g_synchronousClients warning when it's appropriate
	+ Remove custom memcpy/memset code
	+ AVI video output
		- Uses motion jpeg codec by default
		- Use cl_aviFrameRate to set a framerate
		- \video [filename] to start capture
		- \stopvideo to stop capture
		- Audio capture is a bit ropey
	+ General Makefile improvements
	+ Support for MinGW cross compilation
	+ NetBSD support from optical
	+ x86_64 JIT bytecode compiler no longer disabled by default
	+ msvc project files updated and moved to win32/msvc
	+ Various alignment fixes
	+ Solaris (x86 and sparc) support from Vincent S. Cojot
	+ Fixed Altivec-based mesh rendering
	+ Ditch Mac OS 9 support
	+ Added a Makefile option USE_LOCAL_HEADERS which can be disabled to use system
		headers if desired
	+ Detection of Altivec on Mac OS X
	+ SMP support with sdl_glimp.c on Mac OS X.
	+ Add "very high quality" option (patch from Pascal de Bruijn)
	+ Support for RIFF files with zero length data chunks (yes they exist, and yes,
		they're legal)
	+ Support for ccache. If you want it, add USE_CCACHE=1 to Makefile.local
	+ Mac OS X now uses SDL backend, all Objective C removed
	+ Partial implementation of FS_Seek for files in pk3s
	+ Implementation of r_dlightBacks from Shane Isley
	+ OpenAL support, from BlackAura aka Stuart Dalton
	+ An abstract codec system, simplifying support for new formats
	+ Ignore in_dgamouse setting if dga isn't available
	+ Removed hard coded mouse acceleration in *nix input code
	+ Basically rewrote the lcc Makefile to be more sane
	+ Removed various bits of lcc that weren't built/needed
	+ General portability improvements
	+ Various variables added that aid packaging, from vapier
	+ Centralise architecture defines in q_platform.h
	+ Replaced a bunch of inline and __inline with ID_INLINE
	+ Replaced a bunch of __i386__ with id386
	+ General tidy up of asm preprocessor decisions
	+ Removed C_ONLY from the dedicated server build
	+ Removed rule to build C++ (for splines) from the Makefile
	+ General decrufting
	+ Split USE_SDL into USE_SDL_VIDEO and USE_SDL_AUDIO
	+ Various assorted bug fixes

2005-10-29 Various contributors
	+ nasm syntax asm ported to gas
	+ Disabled-by-default MD4 support
	+ cons build system removed
	+ Better FreeBSD support
	+ Makefile generates dependencies
	+ Some SDL sound tweaks
	+ qvm build tools and qvms are now built with the rest of the binaries
	+ q3asm-turbo from Phaethon
	+ Moved various displaced c and h files into more appropriate places
	+ A shitload (can I say shit?) of bug fixes -- see the svn log for details

2005-09-22 Tim Angus <tim@ngus.net>
	+ MinGW port

2005-09-??
	+ SDL Stuff (icculus)
	+ x86_64 (ludwig von angstenheimer)
	+ patches from a cast of thousands

2004-05-22 Timothee Besset <ttimo@idsoftware.com>
	+ updated the xcode project from Apple's version
		now with the latest vm_ppc code

2004-05-21 Timothee Besset <ttimo@idsoftware.com>
	+ fixed the Linux build to compile again on sid (glext.h and gcc3 warnings)
	+ 2 weeks ago, hacked up the source to compile on panther / xcode 1.1
		several cleanups were needed, and VM support seems broke (hangs or crashes)
	+ got altivec optimisations from Apple (Kenneth Dyke)
		merged back in
	+ looks like with the new code merge the VM support is back in and working

2003-09-15 Timothee Besset <ttimo@idsoftware.com>
	+ import Q3 java master code, cleanups on monster

2003-08-31 Timothee Besset <ttimo@idsoftware.com>
	+ loki_setup hell
		https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=626
		http://zerowing.idsoftware.com/linux/q3a/index.html#glibc
		text mode installer in loki_setup image built on Mandrake 7.2 crashes on
		some glibc 2.3 systems such as RH9 etc.  need to move to a different
		version of the installer, and update old installers to keep them still
		'installing' moving to build the setup binaries on Debian Woody systems
		(glibc 2.2, text mode installer will no longer work on 2.1 systems) hacked
		together a new setup, using setup tree from RTCW. would need a complete
		revamp if a new full setup with new binaries is needed

2003-07-17 Timothee Besset <ttimo@idsoftware.com>
	+ new cvsreport, testing per-module config

2003-01-19 Timothee Besset <ttimo@idsoftware.com>
	+ building on both gcc 2.x and 3.x
		added conf modules to check gcc version
		ccache support

2003-01-13 Timothee Besset <ttimo@idsoftware.com>
	+ tweaking around for gcc 3.x build
		edit Conscript to change the compiler

2002-12-16 Timothee Besset <ttimo@idsoftware.com>
	+ added pbEmit class to auth code, emit CD keys to local PB master

2002-11-14 Timothee Besset <ttimo@idsoftware.com>
  + up to latest makeself.sh
	+ add both quake3.x86 and quake3-smp.x86 to setup
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=573
	  console setup crash / glibc 2.3 (Debian Sid)
		investigated, put together a workaround		

2002-11-5 Timothee Besset <ttimo@idsoftware.com>
	+ Linux building both smp and non-smp again. Will have to put both in setup
	+ added in_subframe to toggle X subframe event handling
	+ reworked the timing code to be more reliable
	+ cleaned up dgamouse/in_mouse code, removed unnecessary dgamouse var
	+ made the mouse grabbing an in_nograb cvar, no longer a compile time option
	  in_nograb 1 force in_dgamouse 0 and r_fullscreen 0 (any of those two will b0rk)
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=565
	  mouse issues on Suze 8.1 - related to subframe event timing
		added code chunk to detect broken X timing and disable subframe
	+ tweaked the subframe/X bug workaround to be less paranoid	

2002-10-28 Timothee Besset <ttimo@idsoftware.com>
	+ no longer blocking demo recording if g_synchronous clients != 0
		only sending out a warning (everyone does g_sync 1 ; record ; g_sync 0)

2002-10-21 Timothee Besset <ttimo@idsoftware.com>
	+ building final mod sdk setups (added lcc bins, added link to q3asm-turbo in readme)

2002-10-8 Timothee Besset <ttimo@idsoftware.com>
	+ quickfix cl_maxpackets > 125 brings back to 100

1.32 release ---

2002-10-7 Timothee Besset <ttimo@idsoftware.com>
	+ made the 'demo' command case-insensitive on extension match (it was confused by demo FOUR.DM_68)
	+ mouse wheel scrolling with in_mouse 1 + window mode was not working, fixed (DI didn't catch)
	+ removing on-the-fly pk3 build from Linux setup, using the finalized ones now
		added 'pk3' option to cons for toggle of pk3 building

2002-10-5 Timothee Besset <ttimo@idsoftware.com>
  + updated win32 mod sdk (in win32/mod-sdk-setup)
    added q3asm and lcc source
    updated the .bat to build VMs

2002-10-3 Timothee Besset <ttimo@idsoftware.com>
	+ linux mod sdk, wrote the bulk of the scripts

2002-9-30 Timothee Besset <ttimo@idsoftware.com>
	+ ATVI Quake 3 1.32 Patch #9
		rolling back to the way it was before, leaving 1v1 force vote exploit, the fix was worse than the bug
		from comment on bug #9 in tracker:
		
		actually the fix is worse than the original bug

     after the fix, voting when you are alone on the server was no longer working
     it was kinda intended in the fix, that you would have to be at least two to pass a vote .. but
     it is an oversight.

     calling a vote in a 1v1 game against a bot fails immediately
     (calling a vote in any situation where there's only 1 live player fails)

     Say a server's running some lame custom map that you have but a friend doesn't. You can't go
     on the server and change it to the map you want to play, so he ends up having to auto-dl it at
     8K a second just so you can switch from it.

     This particular 2 clients, vote / quit exploit would involve too many changes to fix properly.
     I am reverting back to the old version, and leaving as WNF 

2002-9-29 Timothee Besset <ttimo@idsoftware.com>
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=50
		added Wheel support to the DirectInput code IN_DIMouse (in_mouse 1)
		tweaked the Wheel mouse reading for in_mouse -1 (old win32 input code)
			handle correctly when zDelta is > 120
			provide an in_logitechbug cvar to handle buggy Logitech MouseWare driver sending wheel events twice

2002-9-26 Timothee Besset <ttimo@idsoftware.com>
	+ ATVI Quake 3 1.32 Patch #38
		adding trap_SetPbClStatus, reliably checks for PB presence before enabling PB in UI

2002-9-25 Timothee Besset <ttimo@idsoftware.com>
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=551
		SVF_CLIENTMASK, fixed a typo
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=555
		pushed cl_maxpackets upper limit to 125 (from 100) per CPMA Arqon's request

2002-9-24 Timothee Besset <ttimo@idsoftware.com>
	+ ATVI Quake 3 1.32 Patch #33
		PB reporting sv_paused cvar hacked, fixed SV_CheckPaused to use a Cvar_Set
	+ ATVI Quake 3 1.32 Patch #24
		added [skipnotify] from RTCW, use to display in the console only, but not on client screen
		(also fixes pb_msgprefix and pb_sv_msgprefix)
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=553
		using correct error message if listen server starting as cl_punkbuster 0 sv_punkbuster 1
	+ ATVI Quake 3 1.32 Patch #35
		text auto wrap in UI code was eating the last word if it was wrapping
		fixed in Q3 and TA UI (this bug could have affected the server print message also)
	+ some updates to the win32 cons post-build process	

2002-9-21 Timothee Besset <ttimo@idsoftware.com>
	+ adding bspc cons build script

2002-9-19 Timothee Besset <ttimo@idsoftware.com>
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=552
		disconnect reason is transmitted in the disconnect command and processed into com_errorMessage
		(similar to RTCW behaviour)
		added UI for com_errorMessage cvar in baseq3/, if client is kicked/dropped/disconnected for whatever reason
		(this is already functional in TA)
	+ ATVI Quake 3 1.32 Patch #9
		failing vote if there's only one voting client (fixes exploit on 2-player server where one player votes then disconnects, forcing vote to pass)
	+ ATVI Quake 3 1.32 Patch #5
		removed the userInfoChanged message (was a debugging leftover)
	+ ATVI Quake 3 1.32 Patch #18
		rcon was not properly fixed yet, this only showed up for PB commands
		changed the rcon parsing again to be more reliable
	
2002-9-18 Timothee Besset <ttimo@idsoftware.com>
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=549
		the demo command has a list of compatible protocols, it will loop through 66 67 68
		you can do '/demo four' and it will try four.dm_66 four.dm_67 four.dm_68
		or you can explicitely give a '/demo demoname.dm_??'
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=551
		added SVF_CLIENTMASK (0x00000002), works only with <= 32 players
		set bitmask of players to which send entity

2002-9-17 Timothee Besset <ttimo@idsoftware.com>
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=550
		rcon bug fix
	+ some scons updates for win32 (post build)
	+ 1.32rc2

2002-9-06 Timothee Besset <ttimo@idsoftware.com>
	+ updated completely the setup system:
		fixed cons stuff to build setup with cons -- release setup
		working from new setup codebase with some custom patches:
			https://bugzilla.icculus.org/show_bug.cgi?id=52
			https://bugzilla.icculus.org/show_bug.cgi?id=53
			checked that BSD support was still in (brandelfing and symlinks) .. will have to get tester feedback
		bumped version to 1.32rc1	
		TODO: update the windows .VCT (standalone setup and auto-update)

2002-9-04 Timothee Besset <ttimo@idsoftware.com>
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=543
		backport from RTCW 1.4 code
		rcon commands where sent after being tokenized and rebuilt
		that was breaking any quoting, for instance 'rcon g_motd "hooka pooka"'
		added Cmd_Cmd() to retrieve the un-tokenized command and transmit as is on both ends
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=542
		b0rked text wrapping in connect screen
		was a missing sizeScale in q3_ui/, and a bad param in ui/
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=540
		backport fix to pk3 reordering, happens when clearing the references, bad order from connection may break stuff		
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=527
		TA ui/, quickfix to netSource (mod stuff, doesn't affect TA)
	+ cleaned up broken old DO_WIN32 stuff in cons scripts
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=526
		typo in models2.shader
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=443
		Linux client: sub-frame timing of key/mouse events
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=453
		added mousewheel support: wheel to scroll, ctrl+wheel to scroll faster, shift+wheel to scroll history
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=545
		bumped server count to 4096
	+ keep around: __asm__ __volatile__ ("int $0x03");		
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=516
		moved screenshots to backend with a new RC_SCREENSHOT render command
		fixes the r_smp 1 garbled screenshots

2002-8-29 Timothee Besset <ttimo@idsoftware.com>
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=539
		new VM code from Raven's Sof2
	+ cons / qvmtools build system fixes	
	+ had to get a new qe3.ico again (resource compiler error)
		http://vasin.hypermart.net/eei.htm
	+ updated, basic testing on win32, merging back in trunk
	+ merged bug-539 branch back into trunk, officialize the new VM code

2002-8-26 Timothee Besset <ttimo@idsoftware.com>
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=472
		linux client: handle ctrl+space situations (could leave space locked on + space not working with ctrl on)
	+ update the build system, build q3lcc and q3asm etc. on demand
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=62
		fixed invisible players/entities

2002-8-23 Timothee Besset <ttimo@idsoftware.com>
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=536
		fixing donedl being ignored after autodl if map_restart'ed (propagate from RTCW)
		ignoring multiple map_restart (propagated from RTCW)
	+ reworked the server 'client text ignored' message to only trigger	when there's actually a message that doesn't get to the game VM

2002-8-18 Timothee Besset <ttimo@idsoftware.com>
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=528
		ydnar: reorg bits in the drawsurf sort index, push MAX_SHADERS to 2^12
	+ commented out some debug stuff in java auth server
	+ added FAQ item with Linux & BSD patch to handle broadcast on multiple interfaces

2002-8-15 Timothee Besset <ttimo@idsoftware.com>
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=534
		fixing rcon being broken on NT/XP with > 23 days uptime (or so)
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=525
		changed the rcon buffer size to avoid overflows and dropping part of the message

2002-8-14 Timothee Besset <ttimo@idsoftware.com>
	+ hacked in some experimental win32 stuff to the cons files
		(win32 recognition and pk3 installs .. very very experimental but I needed it for win32 dev)
	+	https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=521
		ui/ and q3_ui/ : added text auto wrapping in the connection screen drawing (server message)
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=531
		removed the MPlayer stuff from the server browsers
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=505
		enabled back the ignore if protocol is != (fixes Wolf servers showing in browser)

2002-8-10 Timothee Besset <ttimo@idsoftware.com>
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=500
    propagated IP banning fix from RTCW

2002-8-08 Timothee Besset <ttimo@idsoftware.com>
	+ propagate additional sv_lanForceRate fix from RTCW

2002-8-07 Timothee Besset <ttimo@idsoftware.com>
	+ added trap_FS_Seek

2002-8-05 Timothee Besset <ttimo@idsoftware.com>
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=50
    fixed the DI mouse init procedure
		
2002-8-05 Timothee Besset <ttimo@idsoftware.com>
	+ removed sv_allowanonymous, was dummy and polluting the serverinfo
		(sv_allowanonymous was designed to flag wether server was public or not, but that's replaced by g_needpass)
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=514
		sv_strictAuth (default 1): server variable to control wether strict CDKEY auth should be performed
			this is required if you want reliable cl_guid on the server
		extended the getIpAuthorize (server->auth message) syntax
		sending the fs_game at all times (default 'baseq3'), dummy sv_allowAnonymous 0, strict auth flag
		NOTE: 1.31 server on baseq3 sends a getIpAuthorize packet like:
			processing packet: getIpAuthorize -1230824753 217.128.77.195  0
			the auth server will mistakenly read fs_game as '0'
	+ TAGGED the master / auth source as pre-1_32
		will need to go back to this to comment out all my debugging crap

2002-8-04 Timothee Besset <ttimo@idsoftware.com>
	+ cleaned master server stuff, client was prompting master.quake3arena.com, 
		server was sending heartbeats to master3.idsoftware.com
		both point to 192.246.40.56, unified to master.quake3arena.com
		the MPlayer master, master.quake3world.com doesn't exist anymore, switched it to master.quake3arena.com

2002-8-02 Timothee Besset <ttimo@idsoftware.com>
	+ added auth server source, reorganized
	+ auth server name / master key optionally set on command line for master and auth servers
	+ auth and master config in build system
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=524
		changed default GL driver from libGL.so to libGL.so.1
		see LSB 1.2 spec: http://www.linuxbase.org/spec/refspecs/LSB_1.2.0/gLSB/libgl.html
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=480
		applying the 'no cp command' experimental fix for beta phase
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=462
		backported from RTCW, fix to packet fragmenting emission
		FIXME: there is some verbose code that we have to take out in the final version (grep for #462)
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=475
		backported from RTCW, don't get dropped if the server changes map while connecting (ignore outdated cp)
	+ PROTOCOL BUMPED TO 68	

2002-8-01 Timothee Besset <ttimo@idsoftware.com>
	+ Linux: dedicated build was not setting up signal handler like the full client does
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=522
		SplashDamage bugfix, now clearing client gentity before GAME_INIT call (instead of after)
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=498
		fixed NET_AdrToString to print the port as unsigned int (for ports > 1^^15, was showing negative)
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=501
		maintain IP in userinfo sent to game
	+ checking in master server source	

2002-7-31 Timothee Besset <ttimo@idsoftware.com>
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=513
		https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=506
		porting fix from RTCW codebase. client re-orders its pk3s to scan in the same order than the server
		this eliminates several 'Invalid .PK3 file referenced' situations (caused by client not referencing the same thing as server)
	+ fixed border remnants in ta ui
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=517
		ERR_DROP if PB client off / server on conflict when starting local server
	+ quickfix to q3 ui / punkbuster detect in server browser
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=458
		code fix, no more taunt spam
	+ cons install of PB .so files
	+ correct MOD_KAMIKAZE and MOD_JUICED in TA games.log

2002-7-29 Timothee Besset <ttimo@idsoftware.com>
	+ q3 ui: completed confirmation prompts and messages (added UI_ConfirmMenu_Style & UI_Message)
	+ ta ui: backported 'conditionalopen' from RTCW (conditionalopen <cvar> <menu1> <menu2>)
	+ ta ui: confirmation prompt for punkbuster enable/disable etc.
	+ added the win32 DLLs to pb/win32/
	
2002-7-28 Timothee Besset <ttimo@idsoftware.com>
	+ ta ui: sv_punkbuster in StartServer menu
	+ ta ui: added cl_punkbuster in server browser
	+ view filters are in a modal dialog
	+ new files: filter.menu menus.txt (pak3.pk3 updated)
	+ fix broken link in Linux FAQ	

2002-7-27 Timothee Besset <ttimo@idsoftware.com>
	+ ta ui: PB display in the browser, in its additional tab, with sorting

2002-7-26 Timothee Besset <ttimo@idsoftware.com>
	+ PB UI: for baseq3/ AND missionpack/
		q3_ui: Punkbuster: Enable/Disable in server broswer (cl_punkbuster)
		q3_ui: PB logo, PB Yes/No in browser (TODO: validate this to be working)
		q3_ui: added sv_punkbuster toggle in start server menu
	+ automated building of the new PK3s, unix/Conscript-pk3

2002-7-25 Timothee Besset <ttimo@idsoftware.com>
	+ added PB build scripts on Linux, fixed the Linux build

2002-7-12 Timothee Besset <ttimo@idsoftware.com>
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=511
    fixing re.SetColor crash for widescreen displays (q3dm11)
    was calling to the renderer while not registered

2002-6-19 Timothee Besset <ttimo@idsoftware.com>
  + r_roundImagesDown 0 + map q3dm16 -> tr_image.c ResampleTexture crash
	  buffer overflow because of resample to 2048x..
		xian_q3dm12_leftwall4fin.jpg 1152x384
		bumped one buffer byte p1[1024] -> byte p1[2048], added a safe check

2002-6-14 Timothee Besset <ttimo@idsoftware.com>
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=493
	  propagate a renderer fix from RTCW. fixes a one-frame visual glitch when mod code 
		registers a shader after drawsurfaces are generated but before the frame is rendered

2002-6-12 Timothee Besset <ttimo@idsoftware.com>
  + added cons and pcons to unix/, updated the build script

2002-5-24 Timothee Besset <ttimo@idsoftware.com>
	towards a new Q3 release?
		some bug fixes require protocol change, or mod code/mod interface change to be fixed properly
		this is a biz decision, dunno yet if we are going to want a new protocol (probably not)
	-> have to create a branch for the 1.31b, i.e. backwards compatible with 1.31 'Stable-1_31'
	  and put the 1.32 specific / protocol changes on trunk
	no telling what will go in SOS in the end .. probably 1.32	

2002-5-5 Timothee Besset <ttimo@idsoftware.com>
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=491
	  adding a sv_lanForceRate (defaults to 1) to turn on/off server forcing rate of LAN clients
		(only affects LAN dedicated clients - dedicated 1, default behaviour forces LAN clients to 99999 rate)
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=470
	  fixing potential overflows with cl_cdkey (propagated from RTCW)
	+ cons-based build system (imported from Wolf, was partly written for mod tools release already)
	  building with SMP on by default
	+ better #ifdef SMP handling ('disabled at compile time' message)	
	+ https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=494	  
		Q_vsnprintf for vsprintf calls in the core
		not putting this in game code as we'd need a vsnprintf implementation in bg_lib.c

2002-4-5 Timothee Besset <ttimo@idsoftware.com>
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=462
    taking out the fix which was found broken and incomplete  

2002-8-4  Timothee Besset <ttimo@idsoftware.com>
  + adding NO_MOUSEGRAB define (select in the Makefile)

2002-2-4  Timothee Besset <ttimo@idsoftware.com>
  + applying Gareth's SMP patch
  + count number of CPUs (Sys_ProcessorCount in unix_shared.c), default r_smp appropriately
  + bumping version to 1.32
  + if XInitThreads fails, set r_smp to zero

2002-28-2  Timothee Besset <ttimo@idsoftware.com>
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=462
    send potential remaining fragmented packets before sending a gamestate
    
2002-26-2  Timothee Besset <ttimo@idsoftware.com>
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=455
  removed old libMesaVoodooGL.so loading code
  Voodoo cards should use XF4/DRI, that load code was outdated and confusing people with broken OpenGL

2002-16-1  Timothee Besset <ttimo@idsoftware.com>
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=441
  adding brandelf calls to the setup building process so that our binaries run on BSD

2002-1-1  Timothee Besset <ttimo@idsoftware.com>
  + updated FAQ with BSD info (bug #441)
  + FAQ update on CLIENT_UNKNOWN_TO_AUTH
  + FAQ update for proper strace usage

2001-12-12  Timothee Besset <ttimo@idsoftware.com>
  + Q3 1.31 point release
    updating build_setup.sh to new pk3 files
    (baseq3/pak7.pk3 missionpack/pak2.pk3)
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=395
    adding quake3.xpm icon, and modified the setup accordingly to put symlinks
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=390
    ignoring SIGTTIN SIGTTOU

2001-06-12  Timothee Besset <ttimo@idsoftware.com>
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=402
    bug with full scene

2001-04-12  Timothee Besset <ttimo@idsoftware.com>
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=398
    cg_bobup cheat protect
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=399
    fixed Setup > System > Driver info crash
  + checked in code/spank.sh script, perform checksuming  
	
2001-18-09  Timothee Besset <ttimo@idsoftware.com>
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=371
    propagating sound code fixes from Wolf to Q3
	
2001-11-08  Timothee Besset <ttimo@idsoftware.com>
  + setup script was still broken, damn shell expansion
    the exit code for Q3 was always zero instead of $?
    propagating the fix to Wolf

2001-11-04  Timothee Besset <ttimo@idsoftware.com>
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=382
    modified challenge code for motd to be truly random
	
2001-10-31  Timothee Besset <ttimo@idsoftware.com>
  Moved updated q3asm and lcc source at the toplevel, MissionPack/q3asm
  and MissionPack/lcc

2001-10-29  Timothee Besset <ttimo@idsoftware.com>
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=381
    build system is now functional

2001-10-21  Timothee Besset <ttimo@idsoftware.com>
  + updated Sys_LoadDll code on linux to search in the following order:
    #1 current directory
    #2 fs_homepath
    #3 fs_basepath
    this was needed to make mod development easier

2001-10-09  Timothee Besset <ttimo@idsoftware.com>
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=51
    the code to buffer the redirection was in there but disabled? (Com_Printf)
    enabled it back
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=52
    connection issues / userinfo
    client side fix, instead of sending 'connect <userinfo>' packet
    we now send 'connect "<userinfo>"'

2001-10-08  Timothee Besset <ttimo@idsoftware.com>
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=371
    added a PROT_READ to the mmap call
    this was needed to go around a bug in glibc i586 i686, memset doing read access
    since the audio_fd is opened O_RDWD this is harmless to Q3

2001-10-07  Timothee Besset <ttimo@idsoftware.com>
  + updating from SOS
    S_WriteLinearBlastStereo16 C/asm is back in snd_mix.c (Graeme)
    r_showtris r_shownormal cheat protections
  + Sys_LoadDll changes:
    removing -debug search when loading native dlls
    changing the fatal aborts when not finding native from release only to debug only (was a misfeature)
    used to search in cd_path which is bogus, now searching in pwd if basepath fails
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=275
    fixed r_fullbright not being cheat protected / was a CVAR_LATCHED|CVAR_CHEAT issue

2001-09-06  Timothee Besset <ttimo@idsoftware.com>
  + updated from SOS, some changes to qcommon/unzip.c (statics)

2001-08-27  Timothee Besset <ttimo@idsoftware.com>
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=3
  Added some code in CL_InitDownloads to use FS_ComparePaks and print out information about server-referenced paks that are missing on the client. It is a first step, allows to get precise information about what can cause a connection to fail (typically when the user is sent back to the main screen).

2001-08-22  Timothee Besset <ttimo@idsoftware.com>
  + https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=86
  fixed sound bug (with Graeme hints)

2001-08-20  Timothee Besset <ttimo@idsoftware.com>
  + made sure Sys_Printf doesn't get into an endless loop if logfile is on
    fixed qconsole.log issues, +set logfile 1 +set fs_debug 1 was crashing (any OS)
    fixed logfile 1 / ttycon 1 issue, didn't exit properly (same endless looping)
    also fixes an issue reported by q3f team
  + changed rcon commands from Com_DPrintf to Com_Printf so that they show up in the console
  (with IP information)

2001-08-19  Timothee Besset <ttimo@idsoftware.com>
  + fixed https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=91
  (autodownload toggle in q3 ui)
  + fixed https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=76
  g_password issue
  + fixed https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=93
  cheat protecting r_lodCurveError
  + wontfix https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=92

2001-08-18  Timothee Besset <ttimo@idsoftware.com>
  + more fixes to the 7-button mouse code (linux only)
  + updated faq about gamma slider
  + added "servers don't show up in ingame browser" to faq
  + added Alt+Enter toggle for fullscreen/windowed (linux)

2001-08-16  Timothee Besset <ttimo@idsoftware.com>
  reconfiguring CVS repository to give access to Gareth
  + testin gareth's access

2001-08-03  Timothee Besset <ttimo@idsoftware.com>
  * https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=85
  fixes in the setup code for older bash versions
  
2001-08-02  Timothee Besset <ttimo@idsoftware.com>
  * commented out assembly implementation of S_WriteLinearBlastStereo16, using modified C implementation from Zaphod
    need to check performance: https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=88
  * finished const declarations in CG_Trace calls, was needed in pmove_t declaration and some other functions
    cgame/cg_local.h : CG_trace trap_CM_BoxTrace
    game/bg_public.h : using const in pmove_t trace functions prototypes
    (fixes gcc warnings: assignment from incompatible pointer type)

2001-07-26  Timothee Besset <ttimo@idsoftware.com>
  * https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=78
  mapped K_MOUSE4 K_MOUSE5

2001-07-23  Timothee Besset <ttimo@idsoftware.com>
  * https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=5
  more fixes, handling meta characters and various kinds of backspace

2001-07-22  Timothee Besset <ttimo@idsoftware.com>
  * https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=5
  after testing feedback, fixed more stuff:
    better backspace, works with putty and potentially more terminals
  * https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=51
  band aid fix to rcon status, incresed MAX_PUSHED_EVENTS from 256 to 1024
  (adds 28kb of mem requirements)

2001-07-21  Timothee Besset <ttimo@idsoftware.com>
  * https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=2
  using XF86 Gamma extension to set the gamma in game from the menus
  (previous behaviour was to set /r_gamma and restart, renderer relying on s_gammatable)
  restoring initial gamma on GLimp_ShutDown

2001-07-19  Timothee Besset <ttimo@idsoftware.com>
  * https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=5
  first usable version of dedicated console
  added history and completion functionality
  ready for some testing
  still some TODOs and FIXMEs:
    keep the currently edited line when going back from history exploration
    edit the current line with cursor, insert mode etc.

2001-07-18  Timothee Besset <ttimo@idsoftware.com>
  * starting TAB completion and history for the dedicated server (tty console)
  removed Sys_ConsoleOutput (unused)
  removing bogus nostdout variable
  cleanup of a big chunk of code that Bernd commented out and scheduled for deletion
  moved completion code from client/cl_keys.c stuff into qcommon/common.c, Field_CompleteCommand(field_t*)

2001-07-13  Timothee Besset <ttimo@idsoftware.com>
  * fixed https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=8
  screenshots overwrites
  * fixed https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=31
  DOUBLE SIGNAL FAULT

2001-07-11  Timothee Besset <ttimo@idsoftware.com>
  * fix for french keybards / console toggle / bound to XK_twosuperior

2001-07-10  Timothee Besset <ttimo@idsoftware.com>
  * https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=19
  cleanup of the keyboard code, adding com_developer message in case XLookupString would fail

2001-07-10  Timothee Besset <ttimo@idsoftware.com>
  * https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=33
  using our custom handlers for X errors, should make things more robust
  (X docs say some X errors are not fatal, but the default X handler exits the app anyway)

2001-07-08  Timothee Besset <ttimo@idsoftware.com>
	* https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=19
	keyboard state issues, fixed the sticking with ctrl key (thks relnev)

2001-07-07  Timothee Besset <ttimo@idsoftware.com>
	* closing https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=13
	the fixes to bug #9 solved this one too
	* checking in to SOS

2001-07-05  Timothee Besset <ttimo@idsoftware.com>
	* work on https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=9
	filesystem code changes:
	updated the documentation in files.c to the current system
	added correct fs_homepath fs_basepath fs_cdpath scanning to FS_SV_FOpenFileRead
	  (fixes description.txt not found, and probably a few other linux issues)

2001-06-29  Timothee Besset <ttimo@idsoftware.com>
	* fixed setup issues (graphical/console)
	https://zerowing.idsoftware.com/bugzilla/show_bug.cgi?id=6

2001-06-26  Timothee Besset <ttimo@idsoftware.com>
	* bug tracker is online at https://zerowing.idsoftware.com/bugzilla
	  authentication, use login: bugs password: b00gies
	  for now, using it as the linux bug tracker, possible use for more OSes and programs if anyone is interested.
	* tweaked the graphical setup to send to bugs@idsoftware.com on errors instead of support@lokigames.com
	  
2001-06-19  Timothee Besset <ttimo@idsoftware.com>
        * fixed generated launch script /usr/local/bin/quake3, exit $* should be exit

2001-06-18  Timothee Besset <ttimo@idsoftware.com>
        * rebuilt 1.29f setups, released as 1.29f-beta1 'Q3 1.29f linux-i386 Jun 19 2001'

2001-06-10  Timothee Besset <ttimo@idsoftware.com>
	* rebuilt against PR source, packaged 1.29b setups

2001-05-25  Timothee Besset <ttimo@idsoftware.com>
	* graphical setup, based on Loki's setup tool (GPL)

2001-05-22  Timothee Besset <ttimo@idsoftware.com>
	* changed fs_basepath to fs_homepath, according to Graeme's changes (probably missed this change?)
	  this fixes the q3key prompting at each game startup

2001-05-20  Timothee Besset <ttimo@idsoftware.com>
	* rebuilding 1.28b, various fixes on linux build:
	  - SetProgramPath was renamed to Sys_SetDefaultCDPath in unix_shared.c
	    updated unix_main.c accordingly
	  - some prototypes in qgl.h are guarded by #ifndef GL_VERSION_1_2 (ARB extensions)
	    those prototypes are needed by linux_glimp for importing functions and casting, added a #ifdef __linux__
	    (not a clean solution)
	  - game/q_shared.h
	    little endian / big endian functions have been added
	    gcc generates warnings about functions being unused .. inlined them
	   - cgame/cg_marks.c
	     // TTimo
	     // gcc warning: might be used uninitialized
	     float sInc = 0.0;
             float s = 0.0;

2001-05-15  Timothee Besset <ttimo@idsoftware.com>
	* fixes to linux Makefile for bspc 2.1h
	* various updates to 1.28b on linux

2001-05-09  Timothee Besset <ttimo@idsoftware.com>

	* R. Duffy reverted game/bg_pmove.c PM_CheckDuck, was a merging screup on my side
	* updated setup to 1.27z, removed the .so from the setup distribution (they were in 1.27g because of issues)
	  FIXME: gotta get pk3's first

2001-05-04  Timothee Besset <ttimo@idsoftware.com>

	* fixes to gcc, building RC for 1.27s

2001-05-01  Timothee Besset <ttimo@idsoftware.com>

	* added qcommon/huffman.c to the Makefile
	* gcc -Wall:
	commenting out 
	  CL_Netchan_Encode CL_Netchan_Decode (cl_net_chan.c)
	  Netchan_ScramblePacket Netchan_UnScramblePacket (net_chan.c)
	  SV_Netchan_Encode SV_Netchan_Decode (sv_net_chan.c)

2001-04-26  Timothee Besset <ttimo@idsoftware.com>

	* fixed dedicated server crash when entering the VM_COMPILED qagame on a mod (some statics lacked initialization)

2001-04-25  Timothee Besset <ttimo@idsoftware.com>

	* added $(Q3POBJ) to clean target (cleanup of platform-dependent objects)
	* more make clean improvements

2001-04-23  Timothee Besset <ttimo@idsoftware.com>

	* cleanup the mod selection code, remove duplicates
	* some issues with release builds, my main development box doesn't build stable binaries with release settings
	  removing -fomit-frame-pointer seems to fix (there's probably a performance hit)
	  see OMIT-FRAME-POINTER.txt

2001-04-13  Timothee Besset <ttimo@idsoftware.com>

	* checked in a first set of merged files

2001-04-06  Timothee Besset <ttimo@idsoftware.com>

	* merged back the core linux parts to make 1.27g linux build from the Source Safe tree again

2001-02-27  Bernd Kreimeier  <bk@lokigames.com>

	* CVS: tag with changes as of today
	  cvs tag id1-27j-loki01027

	* code/qcommon/msg.c: numFields loop (SOS).
	* code/qcommon/files.c: ue Q_stricmp (SOS uses stricmp, was strcmp).
	* code/game/q_shared.h (Q3_VERSION): 1.27j. Also
	MAX_STRING_TOKENS upped from 256 to 1024 (SOS).

	* code/server/sv_snapshot.c (SV_AddEntitiesVisibleFromPoint): see below.
	* code/game/g_public.h (SVF_NOTSINGLECLIENT): added (SOS).

	* code/server/sv_ccmds.c: see below.
	* code/game/g_main.c: g_gametype cvar now userinfo (SOS).

	* code/game/g_active.c (SendPendingPredictableEvents): new (SOS).
	* code/game/bg_misc.c: new SOS (sos010227)

	* SOS: new update sos010227.
	
2001-02-22  Bernd Kreimeier  <bk@lokigames.com>

	* CVS: now in sync with last SOS and cleanup up
 	  cvs tag id1-27i-loki01022
	
	* code/ui/ui_shared.c: below.
	* code/ui/ui_main.c: leftover code!
	* code/server/sv_world.c: below.
	* code/server/sv_snapshot.c: below.
	* code/server/sv_init.c: below.
	* code/server/sv_game.c: below.
	* code/server/sv_client.c: below.
	* code/server/sv_ccmds.c: below.
	* code/server/sv_bot.c: below.
	* code/server/server.h: below.
	* code/renderer/tr_surface.c: below. 
	* code/renderer/tr_shader.c: changed assert to early return.
	* code/renderer/tr_shade_calc.c: below.
	* code/renderer/tr_shade.c: below.
	* code/renderer/tr_scene.c: below.
	* code/renderer/tr_mesh.c: below.
	* code/renderer/tr_local.h: below.
	* code/qcommon/vm_x86.c: cleanup.
	* code/qcommon/vm.c: below.
	* code/qcommon/unzip.c: below.
	* code/qcommon/qcommon.h: below.
	* code/qcommon/files.c: below.
	* code/qcommon/cvar.c: cleanup.

2001-02-21  Bernd Kreimeier  <bk@lokigames.com>

	* code/qcommon/common.c: cleanup.
	* code/qcommon/cm_trace.c: cleanup.
	* code/qcommon/cm_patch.c: cleanup.
	* code/qcommon/cm_public.h: cleanup.
	* code/game/q_shared.h: cleanup.
	* code/game/q_shared.c: cleanup.
	* code/game/q_math.c: cleanup.
	* code/game/g_syscalls.asm: changed (once more) floor,ceil etc.
	* code/game/g_spawn.c: cleanup.
	* code/game/g_session.c: cleanup.
	* code/game/g_cmds.c: cleanup.
	* code/game/g_client.c: cleanup.
	* code/game/g_arenas.c: cleanup.
	* code/game/bg_slidemove.c: cleanup.
	* code/game/bg_pmove.c (PM_CheckDuck): old call to trace?
	* code/game/bg_misc.c: cleanup.
	* code/game/be_aas.h: dead code.
	* code/game/ai_dmq3.c: cleanup. One clear/copy switched?
	* code/game/ai_dmnet.c: more //*/. Why oh why not DEBUG....

	* code/client/snd_mix.c: below.
	* code/client/snd_dma.c: below.
	* code/client/keys.h: cleanup.
	TODO: #error in q3_ui/keycodes.h ?

	* code/client/client.h: cleanup.
	* code/client/cl_main.c: misplaced bracket. Cleanup.
	* code/client/cl_keys.c: below.
	* code/client/cl_cin.c: below.
	* code/client/cl_cgame.c: cleanup.
	TODO: define assert for Win32 or guard my assertions.

	* code/cgame/cg_syscalls.c: below.
	* code/cgame/cg_servercmds.c: below.
	* code/cgame/cg_players.c: cleanup.

	* code/cgame/cg_newdraw.c: remember to diff against cg_newDraw.c
	in SOS (mixed case).
	TODO: get id to use cg_newdraw.c, and to remove cg_newDraw.c/cpp.

	* code/cgame/cg_main.c: below.
	* code/cgame/cg_local.h: below.
	* code/cgame/cg_event.c: below.
	* code/cgame/cg_drawtools.c: below.
	* code/cgame/cg_draw.c: cleanup.
	* code/cgame/cg_consolecmds.c: dead code.
	* code/bspc/qbsp.h: below.
	* code/bspc/l_poly.c: below. 
	* code/bspc/l_math.c: cleanup.
	* code/bspc/bspc.c: cleanup.
	* code/bspc/be_aas_bspc.c: cleanup. 
	* code/bspc/aas_map.c: kept comments - merge loss at their end?
	* code/bspc/aas_file.c: cleanup. 

	* code/botlib/be_interface.c: this file is plain impossible. There
	are layers of code made dead with /* */ and the resurrected by
	//* or // /* or variations of this. I reverted to exact mirror
	image of SOS to be sure - short of removing it's too easy to mistake 
	live code for dead one.
	Later: have to change 5 occurrences to avoid gcc complaints about
	nested comment tokens.
	TODO: somebody please get rid of the cruft in here.

	* code/botlib/be_ai_move.c: redundant typedef.
	* code/botlib/be_ai_chat.c: assertions on signed string index.
	Note: this is not in my ChangeLog - ouch.
	TODO: use  gcc -fsigned-char on all platsforms to enforce Win32
	TODO  behavior (PPC has a default unsigned char, Intel has not).
	* code/botlib/be_aas_sample.c (AAS_TraceClientBBox): one code block
	was placed in different location, and one FPE hack not used. I would
	expect that divide by zero will still occur here.

	* code/botlib/be_aas_reach.c: below. 
	* code/botlib/be_aas_cluster.c: cleanup. 
	* CVS: the last tag (below) marks the version with a lot of history
	and additional comments. I am now bringing the codebase in sync with
	SOS as of yesterday, cleaning out comments, dead code and other
	differences to minimize a diff - in a valiant if futile attempt to
	roll back changes into the id codebase.
	Note: I ignore the $SOS$ - these are unfortunate but will change
	in the same awkward way at their end.
	Note: I stick to #if 0 instead of C comments around dead code id
	kept (nested comments issue). The commentary is changed to sosYYMMDD
	and includes the token DEAD.

2001-02-20  Bernd Kreimeier  <bk@lokigames.com>

	* CVS: update, then tag current version as
	 cvs tag id1-27i-loki010219

	* SOS: patched up to sos010219.

	* code/qcommon/cm_trace.c (CM_Trace): fabs on sphere offsets (SOS).
	* code/game/bg_slidemove.c (PM_StepSlideMove): stepSize vs. STEPSIZE (SOS).
	* code/game/bg_pmove.c (PM_CheckDuck): fix in stand up check (SOS).
	* code/bspc/bspc.c (main): -capsule (SOS).
	* code/bspc/qbsp.h: below (SOS).
	* code/bspc/be_aas_bspc.c (capsule_collision): added (SOS).
	* code/bspc/aas_map.c (CapsuleOriginDistanceFromPlane): added and used (SOS).
	* code/bspc/aas_file.c (AAS_WriteAASFile): removed diagnostics recently
	added. No matter how long you wait, they'll always get you ;-).
	* code/botlib/be_aas_cluster.c: enabled LogWrites, different flood (SOS).

	* SOS: patching up to snapshot sos010219. 
	Note: For brevity, I use as marker sosYYMMDD now instead of bkYYMMDD, to 
	distinguish from changes not in SOS.

	*  CVS: tagged current version before patching up with SOS.
         cvs tag id1-27i-loki010216-bsd

2001-02-16  Bernd Kreimeier  <bk@lokigames.com>

	* code/server/sv_init.c: DLL_ONLY sets sv_pure to 0 and ROM.
	TODO: determine good sv_pure policy for DLL-only servers.

	* code/renderer/tr_shade_calc.c: my_ftol implementation (BSD).

	* code/unix/Makefile: FreeBSD sections.
	TODO: include target-specific Make-freebsd etc.,
	include a Make-local not in CVS for build preferences,
	and generally clean up this mess.
	* code/unix/unix_glw.h: guard #error
	* code/unix/linux_snd.c: soundcard.h location (BSD).
	* code/unix/linux_glimp.c: guard system headers.
	Later: added Joystick stubs.
	Note: linux_ etc. prefixes start to loose meaning as we
	re-use most of this on UNIXes anyway. I didn't use Raf's
	freebsd_joystick.c but instead put generic stubs here.
	TODO: introduce generic -DNO_JOYSTICK flag.
	* code/renderer/tr_local.h: my_ftol guard.
	* code/renderer/qgl.h: FreeBSD guards.
	* code/qcommon/vm_x86.c: sys/types include on FreeBSD.
	* code/qcommon/md4.c: Win32 pragma guard.
	* code/qcommon/common.c: Com_Memcpy/Memset external.
	* code/game/q_shared.h: added FreeBSD defines. 
	* code/game/q_math.c (BoxOnPlaneSide): FreeBSD conditional.
	TODO: check whether we have/need the assembly version anyway.
	* code/client/snd_mix.c: use C fallback on FreeBSD.
	Note: all of the above changes from the original port by Rafael Barrero.

	* CVS: tagged current version before merging FreeBSD related changes.
         cvs tag id1-27i-loki010215-ppc

2001-02-15  Bernd Kreimeier  <bk@lokigames.com>

	* code/unix/Makefile: BSD related changes.
	* code/cgame/cg_draw.c: hacked phone jack rendering check for Debug.
	TODO: finish Debug, fix CG_DrawDisconnect !!!

	* code/unix/vm_x86.c: error on compile attempts. Fight redundancy!
	* code/qcommon/vm_x86.c (VM_CallCompiled): dummy for linkage on PPC.
	Note: DLL_ONLY is the global Makefile option for DLL-only builts.
	Currently only executed on Linux.
	* code/unix/unix_main.c: *ppc postfix for DLLs. Ignored the changes
	to redundant code (have to remove the unused Un/LoadDll/API calls).
	* code/server/sv_game.c (VMA): changed macro (see below). PPC.
	* code/qcommon/vm.c (VM_DllSyscall): see lengthy commentary by Ryan.
	The existing VM code makes certain assumptions about the layout of
	varargs on the stack, which fall apart with call conventions that
	don't even put all parameters on the stack (gcc on PPC, register-rich).
	Using a dedicated memory area as our own stack. This should actually
	be the default behavior.
	Later: make vm_* cvars INIT/ROM for DLL_ONLY target.

	* code/qcommon/common.c: PPC change (from Ryan Gordon).

2001-02-07  Bernd Kreimeier  <bk@lokigames.com>

	* code/unix/unix_main.c: disabled FPE for debug for the time
	being (that is, until I can figure out
          Program received signal SIGFPE, Arithmetic exception.
          RB_BeginSurface (shader=0x449572e0, fogNum=0) at ..//renderer/tr_shade.c:307
          307 tess.shaderTime = backEnd.refdef.floatTime - tess.shader->timeOffset;
        without any NaN's involved.
	TODO: unmask other FPE's selectively (see Mike's Tribes2, no getenv though).

2001-02-06  Bernd Kreimeier  <bk@lokigames.com>

	* SOS: up to date with todays snapshot.
	Note: got the date wrong, comment used was bk010205. Duh.

	* code/server/sv_snapshot.c (SV_UpdateServerCommandsToClient): below. 
	* code/server/sv_main.c (SV_ReplacePendingServerCommands): new (SOS).
	* code/server/server.h: reliableSent (SOS).

	* code/renderer/tr_shade.c (ProjectDlightTexture): see below.
	* code/renderer/tr_scene.c: see below.
	* code/renderer/tr_public.h: see below (SOS).
	* code/renderer/tr_local.h: additive light support (SOS).

	* code/qcommon/cm_trace.c (CM_Trace): new tw.sphere.use branch (SOS).

	* code/game/g_spawn.c: notta, notq3a entities (SOS).
	* code/game/ai_dmq3.c: MAX_ACTIVATEAREAS search (SOS).
	
	* code/client/cl_cgame.c: see below.
	* code/cgame/cg_syscalls.c (trap_R_AddAdditiveLightToScene): below.
	* code/cgame/cg_syscalls.asm: see below (trap_R_AddAdditiveLightToScene).
	* code/cgame/cg_public.h: CG_R_ADDADDITIVELIGHTTOSCENE (SOS).
	
	* code/bspc/l_math.c: new VectorLengthSquared, removed rotate/matrix (SOS).
	* code/bspc/bspc.c (BSPC_VERSION): was 2.1e, now?
	* code/bspc/be_aas_bspc.c (BotImport_Trace): CM_BoxTrace sig. (SOS).
	* code/bspc/aas_file.c (AAS_WriteAASFile): SOS.
	* code/botlib/be_aas_sample.c (AAS_DeAllocAASLink): SOS.

	* code/unix/unix_main.c (Sys_LoadDll): do not load from installdir
	in NDEBUG (confusing relic from old Makefile). Postfix -debug.so
	for debug binaries to let both builds coexist.

	* code/unix/Makefile: updated install targets and VERSION.

	* Win32: build from SOS snapshot.
	Note: Unix CR/LF in *.dsw/*.dsp fucks up MSVC++.

2001-02-02  Bernd Kreimeier  <bk@lokigames.com>

	* SOS: all changes up to today.

	* code/server/sv_init.c (SV_TouchCGame): added. Also memset
	on reallocated client data (SOS).
	* code/qcommon/qcommon.h: see below.
	* code/qcommon/cvar.c (Cvar_SetLatched): new (SOS).
	* code/qcommon/cm_trace.c: more sphere test fixes (SOS).
	Note: SOS encryption key expired and updated by MrElusive.

	* code/qcommon/cm_patch.c (CM_TraceThroughPatchCollide): 
	fix from MrElusive, fall through curved corner floors (q3dm17).
	Later: also in SOS (so is shadow FPE fix).

	* Win32: can't get an unadulterated SOS snapshot to build.
	First, fix CR/LF back again (Linux client converts all).
	 find . -name '*.ds*' -print
	 alias dos2unix='recode ibmpc..lat1' 
	 alias unix2dos='recode lat1..ibmpc'
        Next, find a *.dws that works? Nope, no cigar.
	
2001-02-01  Bernd Kreimeier  <bk@lokigames.com>

	* Win32: have to update dsp/dsw/etc. files in CVS, too.

	* CVS: tag previous version before update
         cvs tag id1-27h-loki010131-beta3

	* code/game/q_math.c (Q_rsqrt): guard, #ifndef __linux__ 
	for assert (for Win32 build).
	TODO: assert replacement for Win32?
	* code/q3_ui/ui_qmenu.c: see below.
	* code/q3_ui/ui_players.c: see below.
	* code/q3_ui/ui_controls2.c: float const with f postfix
	Note: Win32 C4305 warning. Somebody at id has been doing
	a lot of these recently as well...

	* code/cgame/cg_players.c (CG_PlayerShadow): applied fix by 
	MrElusive, removed FPE hack (player shadows on zero mormals).
	Prolly in this evenings' CVS.

	* code/server/sv_game.c: new signatures (capsule again).
	* code/server/server.h: new signatures (SV_Trace,ClipToEntity).
	* code/server/sv_bot.c: new signatures (above).
	* code/qcommon/cm_trace.c: a truckload of changes. Math
	code added before moved upwards. Capsule traces added all
	over the place, old box traces moved in conditional
	branches, functions renamed and wrapped. Eliminated some
	of the previous' versions deadcode to keep diffs smaller.
	TODO: once a point release is out and reasonably bug
	TODO  free, remove // bkYYMMDD annotations where SOS related.

	* code/qcommon/cm_public.h: new signatures in prototypes.
	* code/qcommon/cm_patch.c: dead code re-enabled, new
	sections (conditional branches for spheres) added to 
	several trace functions.
	* code/qcommon/cm_local.h (CAPSULE_MODEL_HANDLE): added.
	* code/qcommon/cm_load.c (CM_TempBoxModel): capsules.

	* code/game/q_shared.h (Q3_VERSION): 1.27i now (new QVM traps).

	* code/game/g_syscalls.asm: see below.
	* code/game/g_public.h (SVF_CAPSULE): added (SOS). Also
	G_ entry poiints for capsule traces.

	* code/client/cl_cgame.c: see below.
	* code/cgame/cg_syscalls.c: see below.
	* code/cgame/cg_syscalls.asm: see below.
	* code/cgame/cg_public.h: new capsule trace code (SOS).

2001-01-31  Bernd Kreimeier  <bk@lokigames.com>

	* Win32: test compile (WinCVS, MSVC++). Have to guard isnan.
	Note: too much shit going on....

2001-01-30  Bernd Kreimeier  <bk@lokigames.com>

	* CVS: update for patching up (pre-1.27i).

	* SOS: new changes (new collision detection primitives).
	Now Version 1.27i. 
	TODO: start testing using DLL's (QVM code is out of sync).

2001-01-25  Bernd Kreimeier  <bk@lokigames.com>

	* SOS: caught up till today (below).
	* code/qcommon/cm_trace.c: new functions added: RotatePoint,	
	TransposeMatrix, CreateRotationMatrix (SOS).
	(CM_TransformedBoxTrace): new rotation code used here.

	* code/q3_ui/ui_demo2.c: sizeof(extension). SOS.
	* code/game/g_cmds.c (G_SayTo): CON_CONNECTED.
	* code/game/ai_main.c: HOOK added (SOS).
	* code/botlib/be_aas_move.c (AAS_HorizontalVelocityForJump): 
	correct fix for FPE occurring (SOS).
	* code/game/ai_dmq3.c: initmove.viewoffset (SOS).

	* code/game/q_math.c: guard asser/isnan with Q3_VM (q3asm).
	TODO: define Com_Error based assert macro? NDEBUG?

2001-01-24  Bernd Kreimeier  <bk@lokigames.com>

	* code/server/sv_ccmds.c (SV_MapRestart_f): some debug.
	TODO: map_restart 0 disconnects external client in 1.27h?

	* code/renderer/tr_image.c (LoadTGA): added some commentary 
	and dead code based on fixes from GtkRadiant (Leonardo found
	flipped TGA's).

2001-01-23  Bernd Kreimeier  <bk@lokigames.com>

	* BETA3: finished testing, ready to upload to id FTP.
	Later: neither the FreeBSD beta not the Linux Beta3
	uloaded. Beta2 not yet released, and clients get
	disconnected with Beta2 and Beta3 on SV_MapRestart_f.

2001-01-22  Bernd Kreimeier  <bk@lokigames.com>

	* code/client/cl_main.c (CL_InitDownloads): undid yesterday (SOS).
	* code/botlib/be_aas_sample.c (AAS_DeAllocAASLink): guard print (SOS).
	* code/server/sv_client.c (SV_DirectConnect): VM_Call disconnect (SOS).
	* code/qcommon/files.c (FS_ListFilteredFiles): trailing slashes (SOS).
	* code/game/g_cmds.c (SetTeam): print change (SOS).
	Note: the above plus VectorClear(v1) (below) are todays SOS changes.

	* code/cgame/cg_players.c (CG_PlayerShadow): ignore bogus 
	(all zero) planes. This caused FPE in ProjectPointOnPlane.
	TODO: why does trace return zero normal planes?
	Note: gdb seems totally at loss with vec3_t arrays....

	* code/botlib/be_aas_sample.c (AAS_TraceAreas): FPE.
	NaN in uninitialized v1 that wasn't supposed to be referred 
	to in this branch. 

	* code/botlib/be_aas_move.c (AAS_HorizontalVelocityForJump): 
	FPE divide by zero (zero zvel, zero t) for jump estimates.

	* code/client/cl_main.c (CL_Frame):1856. uivm==NULL on
	client after server crashed.
	TODO: check that uivm always non-NULL for client.
	TODO: do setenv(FX_NO_SIGNALS) to avoid exit errors...

	* code/unix/linux_glimp.c (GLW_SetMode): added "Indirect"
	Mesa token to software rendering detection. Reworded error
	output and added drivername.
	TODO: measure framerate instead?

2001-01-21  Bernd Kreimeier  <bk@lokigames.com>

	* SOS: caught up with changes up until today. 

	* code/server/sv_init.c (SV_SetConfigstring): gentity != NULL 

	* code/server/sv_client.c: connect to "{all bots" server.
	* code/renderer/tr_init.c: JPEG extension on  screenshots
	* code/qcommon/files.c: modes based on mods, fs_basegame

	* code/q3_ui/ui_demo2.c: dm3 extension (demo names, protocol).

	* code/game/g_client.c: savedEvents[] removed.
	* code/game/bg_misc.c: event sequence fixes.
	* code/client/snd_dma.c (S_StopBackgroundTrack): different use.	
	* code/client/cl_main.c: demo file handling changed (names).
	Also CL_InitDownloads: always next download.

	* code/cgame/cg_servercmds.c: cg_thirdPerson.
	* code/cgame/cg_weapons.c: see below.
	Also CG_ShotgunPattern: different call (seed parameter).

	* code/cgame/cg_main.c: see below.
	* code/cgame/cg_local.h: new cg_noProjectileTrail Cvar.
	* code/cgame/cg_effects.c (CG_BubbleTrail): early out (above).

	* code/bspc/l_poly.c (BOGUS_RANGE): increased.
	* code/bspc/bspc.c: applied patch up to "2.1e"

2001-01-18  Bernd Kreimeier  <bk@lokigames.com>

	* code/ui/ui_main.c: below.
	* code/q3_ui/ui_main.c: UI_HASUNIQUECDKEY comment.
	Note: mods have to return qfalse. See Bug #2890 in Fenris.

2001-01-17  Bernd Kreimeier  <bk@lokigames.com>
	
	* BETA2: finished testing, uploaded to id's FTP for release.
	
2001-01-16  Bernd Kreimeier  <bk@lokigames.com>

	* CVS: checking in preparation for Beta2.
         cvs tag id1-27h-loki010116-beta2

	* SOS: new bspc "2.1e". No change on 1.27h.

	* TEST: patch-up seems to work fine. No new files have been added
	to the linkage (i.e. the ft2/ files now added), so we might not be
	feature complete.

	* code/game/g_active.c (ClientThink_real): id MISSIONPACK
	conditional in addition to the ones I added earlier.
	* code/qcommon/files.c: REJECT. Linux hack for userdir threw it off.
	* code/qcommon/unzip.c: REJECT. CRC-32 section removed.
	Later: unused tempB

	* code/q3_ui/ui_syscalls.asm: REJECT. Start/StopBackgroundTrack.
	* code/ui/ui_syscalls.asm: REJECT. syscalls ids from 1.27h 
	as of SOS (floor/ceil - will this ever get straightened out)
	* code/win32/win_input.c: REJECT. g_pMouse edit.
	* ui/menus.txt: REJECT. Replaced with 1.27h version.
        Note: some more due to $SOS$.
	
	* ui/: new scripts.
	cinematicmenu.menu, demo_quit.menu, ingame.txt, serverinfo_old.menu
        vid_restart.menu

	* code/ft2/ttconfig.h: below.
	* code/ft2/sfconfig.h: below.
	* code/ft2/pstables.h: below.
	* code/ft2/psnames.c: below.
	* code/ft2/psdriver.h/c: below. 
	* code/ft2/keys.h: below. 
	* code/ft2/ftbbox.c: new in 1.27h
	
	* code/cgame/cg_newdraw.c: beware: cg_newDraw.c gets lost in diff easily.

	* code/cgame/cg_rankings.c: file removed from SOS.
	
2001-01-15  Bernd Kreimeier  <bk@lokigames.com>

	* Patch-up: patching up from RC4 to 1.27h current.
	No changes since 010112 snapshot.
	ln -s sos010112/ work
 	diff -urbB sos001204-rc4/ work > work.diff
 	ln -s cvs-1.27g/ work
 	patch -p0 < work.diff  > work.patch
 	find cvs1.27g/ -name '*.rej' -print

	* SOS: adding the remaining SOS snapshots to CVS.
         cvs import Quake3_sos sos001211 pr1-27g-win32-001211
	Note: at this point id warned about repository corruption.
	Watch out for the syscall stuff in particular.
	 cvs import Quake3_sos sos010104 pr1-27g-win32-010104
	 cvs import Quake3_sos sos010108 pr1-27h-win32-010108
         cvs import Quake3_sos sos010110 pr1-27h-win32-010110
	 cvs import Quake3_sos sos010112 pr1-27h-win32-010112
	Note: the first 1.27h might be the public (server only) 
	beta released, the second one was post release. Beware
	of source files added and removed (botlib headers, FT2).
	Note: why so late? Don't ask...

2001-01-08  Bernd Kreimeier  <bk@lokigames.com>

	* SOS: id's working up to 1.27h (server side fix for
	Guard exploit seems to force earlier release). Updating
	CVS (most of the changes are debug code put in and
	then disabled, plus some fixes as below). Next patching
	up to current SOS.

2001-01-07  Bernd Kreimeier  <bk@lokigames.com>

	* Makefile: need to rework this for multiple platforms.
	We also need null/null_vm.c for platforms where we don't
	have JIT (assembly emit).

2001-01-04  Bernd Kreimeier  <bk@lokigames.com>

	* code/q3_ui/ui_connect.c (UI_DisplayDownloadInfo): time
	information for current (vs. start of download) is wrong,
	thus negative 1 "estimated time", as well as transfer
	rate just negative downloadSize. Not fixed.
	
	* code/unix/unix_main.c (Sys_ParseArgs): added.
	Note: for support/us, to identify builts. This is only
	a skeleton right now - if I ever feel the need to support
	more than "-v" and "--version" I'll have to flesh this out.

	* code/unix/linux_glimp.c (signal_handler): see below.
	* code/unix/unix_main.c (Sys_Exit): added an abstraction
	layer for exit/_exit/assert/raise issues.
	Note: need both a better debug/backtrace handling, and
	have to find a way to determine why/where the alleged
	startup/exit errors happen...

2001-01-03  Bernd Kreimeier  <bk@lokigames.com>

	* code/game/g_mem.c (G_Alloc): ERR_DROP initiated by
	addbot commands for large sv_maxclients, allegedly
	caused segfaults in 1.17. Not reproducible.
	TODO: recover more gracefully from failure to add bot?

	* code/renderer/tr_light.c (R_LightForPoint): Tim Angus
	reports a crashbug with nolight maps. Also assertion in
	R_SetupEntityLightingGrid, might want conditional there.
	DONE: fixed crash on LightForPoint for nolight maps.

	* code/qcommon/qcommon.h: NUM_SERVER_PORTS. A feature 
	request to increase this, or make it more flexible
	otherwise (Fenris).
	TODO: id decision on more flexible NUM_SERVER_PORTS.

2001-01-02  Bernd Kreimeier  <bk@lokigames.com>

	* code/unix/snapvector.nasm: fixed FPU bit (the current
	one had reserved bits off, behavior should not change).
	* code/qcommon/vm_x86.c: fixed symbols (below).
	* code/unix/ftol.nasm: FPU bits weren't correct (duh).
	DONE: shoot-though floor (q3dm5)
	DONE: cursor-in-rect off  (TA/Player model selection)
	Note: in gdb, "disassemble <funcname>" is your friend.

	* code/cgame/cg_public.h:  CG_MEMSET is set to 100. In
	cg_syscalls.asm it's 101. If I change it I get Bad trap 100
	from the cgame VM code, so the 1.27g "official" VM code
	uses it.

	* code/unix/linux_common.c: have to fall back to C, the
	current assembly is buggy...
	* code/unix/Makefile (linux_common.o): added.
	Later: also for dedicated. Less portable this way.
	TODO: C_ONLY for dedicated on non-i386 only?

	* code/qcommon/common.c: do not use memcpy/memset under Linux.
	* code/unix/linux_common.c: added Andrew's assembly port.
	TODO: C_ONLY for Com_Memset/Memcpy? Conditionals are fubared.

	* code/qcommon/vm.c (VM_Init): use Win32 defaults (do not
	use DLL's by default). This exposes DLL rounding errors
	(damage through floors), and we don't want DLL's used by
	default anyway.
	TODO: why vm_ui default of 1?

	* code/botlib/l_precomp.c (SourceWarning): removed assert.

	* code/game/bg_lib.c (acos): defined, but we don't actually
	use it except where the cg_syscalls.asm trap is used.

	* code/game/g_public.h: missing lots of trap tokens.
	* code/game/g_syscalls.c: missing lots of traps.
	* code/game/g_syscalls.asm: more inconsistent hooks, were:
	 equ floor					-111
         equ ceil					-112
	 equ testPrintInt			        -113
         equ testPrintFloat			        -114
	now changed to match cg_syscalls.
	Note: fixed this in UI earlier, how did this slip through 
	the diffs against SOS?
	
	* code/game/g_syscalls.c: no acos hook.
	* code/cgame/cg_syscalls.c: no acos hook.
	* code/cgame/cg_syscalls.asm: has acos hook as -112
	Note: report from Tim Angus. The acos function is in bg_lib.c
	which is linked only into ui (not q3_ui). That means we are
	using libc acos right now?
	Note: QVM traps are negative?

	* BSD/Irix: tagged current CVS (not all of the below) as
	 cvs tag id1-27g-loki010102-bsd1
	for BSD work (Rafael Barrero). Also be used for Irix update.

2001-01-01  Bernd Kreimeier  <bk@lokigames.com>

	* SOS: adding the remaining SOS snapshots to CVS.
         cvs import Quake3_sos sos001201-rc3 pr1-27f-win32-001201-rc3
         cvs import Quake3_sos sos001202 pr1-27f-win32-001202
         cvs import Quake3_sos sos001204 pr1-27g-win32-001204-rc4
	This is the codebase to which the Linux branch has been patched
	up. I can't verify whether this is identical to the RC4 codebase
	as the tag doesn't work (but can check against the ZIP file..)
	 cvs import Quake3_sos sos001211 pr1-27g-win32-001211
	The above snapshot contains a (post-release?) fix to ui_syscalls
	in ui/ and q3_ui/. This change has been used in Linux (Beta1 and
	above). At this point, id discouraged further use of SOS due to
	repository corruption on their end. No further snapshots were
	taken since.

	* Fenris: since the release of the Beta1 bugs have been
	maintained at http://fenris.lokigames.com/. I am going to
	list issues here as they get fixed.
	
2000-12-21  Bernd Kreimeier  <bk@lokigames.com>

	* code/renderer/tr_font.c: graceful silence with old mods?
	* code/botlib/l_precomp.c (SourceWarning): graceful exit if old mod?

2000-12-20  Bernd Kreimeier  <bk@lokigames.com>
	
	* code/server/sv_ccmds.c (SV_MapRestart_f): see below.
	* code/qcommon/vm.c: currentVM is 0x0 in VM_ArgPtr.
	In VM_Call, oldVM was NULL - made conditional the
	reset of currentVM to oldVM.

2000-12-18  Bernd Kreimeier  <bk@lokigames.com>

	* BETA1: closed Linux beta release. Stripped debug
	and release binaries, DLL's, and pak4.pk3. CVS checkin,
	will be tagged as 
            cvs tag id1-27g-loki001218-beta1
	Later: id added a pak5.pk3 to the Win32 point release,
	added this to the BETA1 best.

	* code/qcommon/vm_x86.c: C37F.
	* code/unix/snapvector.nasm: C37F.
	Note: short of any real evidence, I gamble and use max. 
	precision (as well as default Linux precision, but NOT 
	Win32 precision). It seems that precision change is not 
	really an issue (despite Graeme's claim that the cursor
	in the menu was/is off). I also pick the roundiung behavior
	that is seemingly used by ANSI and gcc (but possibly not
	Win32 _ftol depending on build).

2000-12-15  Bernd Kreimeier  <bk@lokigames.com>

	* code/unix/Makefile: added snapvector.o
	* code/unix/unix_shared.c: #if 0'ed the old snapvector code.
	* code/unix/snapvector.nasm (Sys_SnapVectorCW): two new
	assembly functions from AndrewH that explicitely set the 
	FPU control word to convert vec3_t, to ensure cross-platform 
	behavior for both DLL and QVM.

	* code/unix/ftol.nasm (Q_ftolC37F): for globals. 

	* code/unix/unix_main.c: took out global FPU manipulation.
	For clarity this should be VM only.
	* code/qcommon/vm_x86.c: added prototypes for the ftol
	library. To select a specific behavior for the entire VM,
	set ftolPtr accordingly.
	Later: the GCC ftol function of course affect the stack
	(there is no "declspec naked"). The problem seems to be 
	that the VM never handles the stack in a way compatible 
	to regular gcc C functions. For some odd reason _ftol seems 
	to do the right thing under Win32. All 4 control words 
	implemented at the moment work just fine with the menus.

	* code/unix/ftol.nasm: added a small library of "safe" qftol
	variations that explicitely set the control word to the
	relevant (4) possibilities.

2000-12-13  Bernd Kreimeier  <bk@lokigames.com>

	* code/qcommon/vm_x86.c: an entire day spent trying to nail
	the ftol issues. It breaks down like this: id used to use
	an unsafe (no setting FPU control word) fistp. That seemingly
	caused subtle physics bugs which nobody cared about in 1.17.
	They then changed the UI code, and ran into the UI bugs:
	menu entries shifted to the right, fonts vanishing. Then
	they switched to using _ftol. Then they had to reproduce 
	the old behavior for the physics code due to public outrage.
	My original port used a simple (long)float cast, which gcc
	seemingly compiles to code that does OR 0C00 on whatever
	current control word (precision unchanged). This breaks the
	menus. If I use the unprotected fistp instead, which should
	(Linux 037F default) use "nearest/even", then my menus are
	correct. That would mean Win32 _ftol in id's compile does
	the same, only that would require /qifist or some equivalent
	compile flag, which I can't find. Two disassemblies of _ftol
	I got from others showed OR 0C00 as part of the default (ANSI)
	behavior.

2000-12-13  Bernd Kreimeier  <bk@lokigames.com>

	* code/game/bg_pmove.c (PmoveSingle): trap_SnapVector.
	The one true and single call to snap velocity.
	Note: bspc/map.c:void SnapVector(vec3_t normal)
        qcommon/cm_patch.c:void CM_SnapVector(vec3_t normal)
	game/q_shared.h: #define SnapVector(v) {v[0]=((int)(v[0]));...

	* code/client/cl_cgame.c: CG_SNAPVECTOR. 
	* code/server/sv_game.c:  G_SNAPVECTOR.
	Note: these go through trap_SnapVector in syscalls.

	* code/unix/unix_shared.c (Sys_SnapVector): sticking to
	old Linux version for now...
	* code/win32/win_shared.c (Sys_SnapVector): changed.
	Note: Graeme points out this was changed to fix ftol
	artifacts?
	TODO: calculate errors for various ftol variants...

	* code/qcommon/vm_x86.c: both the old fistp code (1.17)
	and the new qftol function apparatently work. Using the
	ftol.nasm code for now.

	* code/unix/Makefile: DO_NASM and ftol.o. 

	* code/unix/ftol.nasm (qftol): created from Mike's SoF
	replacements, with Andrew's help to satify the VM
	stack/call requirements.
	TODO: use Q_ftol herein to replace myftol elsewhere.

	* code/unix/unix_main.c (Sys_ConfigureFPU): SIGFPE. 
	TODO: divide by zero in botlib. Disable this for now.
	Note: we can't introduce calculation differences between
	versions, so fixing these will have to wait.

	* code/qcommon/vm_x86.c: two new lines in Win32 branch 
	missing from Linux assembly in AsmCall:
	 mov eax, dword ptr [edi] 
	 and eax, [callMask]      
        Added, doesn't seem to affect UI etc. bugs.
	Later: no FTOL_PTR, use fistp non-IEEE assembly as in old
	version. This seems to work for Q3 and TA, while qftol 
	(simple cast) does not - for Win32 Graeme says the reverse 
	is true.

	* code/qcommon/vm_x86_old.c: used the old cvs-1.17 version.
	Two fixes (Hunk_Alloc, Com_Memcpy), and it works:
	  +set vm_game 2 +set vm_ui 2 +set vm_cgame 2 
        UI, cgame and game w/o apparent problems.

2000-12-12  Bernd Kreimeier  <bk@lokigames.com>

	* code/unix/Makefile: cleanup of redundant flags.
	Removed bogus MALLOC_CHECK (note to self: export MALLOC_CHECK_=2).  
	Also DO_SHLIB_CC on all UI DLL's.
	Added and removed DEBUG_VM flag.
	TODO: figure out whether Zoid did UI this way intentionally.
	Note: this seemingly fixed the botimport problem, although
	most of the changes were just redundant CFLAGS removed. Given
	our wanker toolchain, should have been more paranoid. All
	DLL's can now be used w/o apparent problems.

	* code/server/sv_main.c: gvm init.
	* code/server/sv_game.c: gvm assertions.
	* code/unix/unix_main.c (Sys_LoadDll): print vmMain
	Note: top no avail. There is some odd ld/gdb problem here
	that prevents examining globals and obfuscates part of
	the stack between VM_Call and lower level code, through
	G_InitGame. This is not just DLL's being loaded and unloaded.
	Wromg flags during build? The vmCvar for "bot_developer"
	ends up overlapping global botimport in memory, which
	thus zero-fills part of the function pointer table.

	* code/server/sv_bot.c (SV_BotInitBotLib): this (by way of
	GetBotLibAPI) is responsible for setting botimport, which,
	if using the game DLL, is not properly set up. Called in
	SV_Init().

	* code/game/q_shared.c: Q_strncpyz does zero padding (duh).
	Note: calls strncpy, which does a zero fill up to destsize.
	If destsize exceeds memory size, zero padding will overwrite
	adjacent memory. Suspicion was this happened to botimport.

	* code/qcommon/cvar.c: possible problem in Q_strncpyz call.

	* code/botlib/be_ai_weap.c (weaponinfo_fields): made this static.
	Note: it seems that the "number" string got replaced by
	 p def.fields[0]
         {name = 0x40000000 "\177ELF\001\001\001", offset = 2, type = 50, ..
        Memory corruption?

	* code/game/inv.h (WEAPONINDEX_GAUNTLET): defined here. 
	* botfiles/weapons.c (Gauntlet): the baseq3/qagamei386.so parser
	breaks here:
	 number				WEAPONINDEX_GAUNTLET
	* code/botlib/l_precomp.c (SourceWarning): added assertion to
	trap botlib parsing problem..

	* RC1: for beta test. Using my own vm/ui.qvm files in this case.
	TODO: Setup with nouninstall.
	TODO: fix game DLL/ botlib setup problem (so all DLL's work)
	TODO: SIGFPE
	TODO: profile?
	
	* code/unix/Makefile (ai_vcmd.o): added to game DLL linkage. 
	How the fuck did this happen?
	DONE: "qagamei386.so: undefined symbol: BotVoiceChat_Defend"

	* TEST:  +set vm_ui 2 (vm_x86, not interpreter). Breaks!
	Further: qagame had undefined, but seemingly gets reloaded 
	second try (I hate the Linux linker).
	* TODO: never reload fail DLL, abort engine


2000-12-11  Bernd Kreimeier  <bk@lokigames.com>

	* TEST: recompile QVM/DLL and executable to test new UI code.
	The UI QVMs from the paks still do not work.

	* SOS: changes in UI code!
	* code/q3_ui/ui_public.h: this file is deprecated
	Note: e.g. it does not contain the background track calls.
	* code/ui/ui_public.h: the uiImport_t enum here determines
	the values.
	* code/ui/ui_syscalls.asm: same as q3_ui now, were:
         equ floor					-111
	 equ ceil					-112
	* code/q3_ui/ui_syscalls.asm: these are now switched, were:
	 equ trap_S_StartBackgroundTrack			-63
         equ trap_S_StopBackgroundTrack				-64
	The new values match the ui/ equivalent. Also, floor (-108) 
	and ceil (-109) are different in ui/.
	
	* CVS: going to check in this snapshot and tag it as
	    cvs tag id1-27g-loki001209-rc4
	Presumed equivalent to SOS tag "1.27g RC4" (master). As I can't
	obtain the tagged code using SOS (neither Win32 nor Linux client)
	I can only guess.

	* TEST: use my own VM code, ion baseq3/vm/*.qvm and missionpack/vm/.
	This works - in other words, the menu bug seems in the UI code, and
	is fixed in my codebase.

	* TEST: make release. 
	Note: I can postpone DLL specific problems. Bad performance is not
	as important as outright bugs. Thus the UI QVM issue is the only
	one that stops me from creating an RC.
	TODO: Q3 UI QVM code from pak file does not work (neither does TA).
	TODO: sound with video playback still awful. Threaded sound, I guess.
	TODO: ERROR: couldn't open demos/DEMO002.dm3.dm_48 (same demo001.dm3.dm_48)
	
	TODO: do not show Q3 demos in TA menu?
	TODO: new demos for Q3? Or at least error message?
	
	* code/game/bg_lib.c: itrinsics excluded by Q3_VM (another -O
	compile). Uninitialized variable.
	* code/unix/Makefile: -O for uninit on patched code. Also shortcuts. 
	TODO: DC_ONLY seems an obsolete flag, used in Makefiles, not source.

	* TEST: +set sv_pure 0 +set vm_game 1 +set vm_cgame 1 +set vm_ui 0
	Turns out that the pak0.pk3 UI QVM code is seemingly broken in TA
	and Q3, but my UI DLL is not. In reverse, the QVM game/cgame for
	Q3 seems to work quite well (including bots). The TA game/cgame
	also works, including botlib init.
	TODO: BotLib Init using game DLL gives: 
	TODO:  Error: file weapons.c, line 38: unknown structure field number
        TODO:  Fatal: couldn't load the weapon config
        TODO:  Error: BotLoadMap: bot library used before being setup
	
	* TEST: checked the rc4winstlr.zip CD tree against
	my test install. baseq3/pak4.pl3 and missionpack/pak0.pk3
	are identical, but I finally recognized that there was
	a missionpack/pak1.pk3 not in the final install - left over 
	from an earlier update from id. Doesn't seem to affect the
	DLL based runs at all.
	Note: I still do not have the final CD snapshot Robert
	promised me mid last week, they haven't even fixed the
	FTP account they took down. Communication with id is as
	abyssmal as ever. 

2000-12-08  Bernd Kreimeier  <bk@lokigames.com>

	* TEST: running with RC4 data files.
	TODO: "bot library used before setup" (Q3+TA)
	TODO: Q3 old mods wreak havoc (graceful bounce)
	TODO: suppress "FreeType code not available" in renderer
	TODO: can't move in Q3
	TODO: items flicker in Q3
	TODO: no decals in Q3
	TODO: VM UI code still broken (Q3+TA)
	TODO: sound code is awful
	TODO: video playback inferior to earlier builds

	* code/q3_ui/ui_local.h: prototype trap_VerifyCDKey(..)
	* code/game/g_active.c ( StuckInOtherClient): TA only.
	* code/cgame/cg_draw.c: 4x unbalanced `#endif' - from patch?
	* code/null/null_client.c (CL_CDKeyValidate): dummy added.
	* code/qcommon/common.c: Q_acos missing, changed conditionals
	
	* code/qcommon/vm_x86.c: unreacheable _asm instruction that
	gcc doesn't quite like... #if 0'ed for now
 	TODO: understand _asm { mov eax,[ebx] }, fix it for gcc

	* TEST: compile...

	* code/ui/ui_main.c: full REJECT. Manual merge.
	Note: preserved debug_protocol lines, who knows what it's good for.

	* code/qcommon/files.c: REJECT. SafeMode, demo server FS_Restart.

	* code/client/snd_mem.c: REJECT: $SOS$.
	* code/client/snd_dma.c: REJECT: $SOS$.
	* code/client/cl_cin.c: REJECT. com_timescale, $SOS$.

	* code/cgame/cg_draw.c: REJECT. Lots, but virtually all either
	float postfix (on some, not all places), or #ifndef MISSIONPACK
	that I had already put in during -Werror (conditional unused).

	* code/cgame/cg_consolecmds.c: REJECT. id commented unused code
	that I had #if 0'ed earlier.

	* code/game/: three REJECT for $SOS$.
	* code/botlib/: lots REJECT for $SOS$.

	* Patch: patching up from demo source.
	ln -s sos001204-rc4 work
 	diff -urbB sos001122-demo/ work > work.diff
 	ln -s cvs-1.27b/ work
 	patch -p0 < work.diff  > work.patch
 	find cvs1.27b/ -name '*.rej' -print

	* CVS: going to check in this snapshot and tag it as
	    cvs tag id1-27b-loki001208-demo
	Then patching up to RC4, as of sos001204-rc4 (no changes since,
	should be equivalent to SOS tag "1.27g RC4" (raduffy), i.e. master.

	* TEST: installed demota/ from Win32 distribution. Binary
	fails claiming "Corrupted pak0.pk3". Abandoned.
	Note: a Linux demo for Q3TA has no priority. Most important is
	the Q3A point release in time for Q3TA hitting shelves, followed
	by testing for Q3TA. The source is in CVS and tagged (see above)
	in case a demo matching the released files has to be provided
	later.
	

2000-12-07  Bernd Kreimeier  <bk@lokigames.com>

	* TEST: compile and link - succeeds.

	* code/ui/ui_main.c: UI_StopServerRefresh now uaws. 
	New unused variables.
	
	* code/unix/unix_main.c: added  Sys_LowPhysicalMemory() stub.
	TODO: write Linux equivalent to GlobalMemoryStatus.

	* code/qcommon/common.c: Com_Memset/Com_Memcpy. Neither assembly 
	nor C versions included if not on Win32 i386. 
	TODO: using/porting assembly?

	* code/qcommon/files.c: unused variable.
	TODO: fs_scrambledProductId unused if 0 for now.
	Note: -DFS_MISSING for id's pak cleanup, not used.

	* TEST: compile and link - fails.

	* code/macosx/Client/Makefile.postamble: empty ORIG.
	* code/macosx/Client/Makefile.preamble: ORIG. $(BOTLIB_OBJS) added.

	* code/server/sv_client.c: ORIG. Com_Memset.
	* code/renderer/tr_shader.c: ORIG. Com_Memset, CIN_Shader.
	* code/qcommon/vm_x86.c:  ORIG. Com_Memcpy. 
	* code/qcommon/unzip.c: REJECT. Com_Memcpy, $SOS$. 
	* code/qcommon/qcommon.h: ORIG. PROTOCOL 47, plus Sys_LowPhysicalMemory.
	* code/qcommon/md4.c: Com_Memset,Com_Memcpy (ORIG).
	* code/qcommon/files.c (Sys_ConcatenateFileList): REJECT.
	Our additons threw it off, plus $SOS$. 
	* code/qcommon/common.c: they fixed same unused variables (REJECT).

	* code/ui/ui_shared.c: additions (ORIG).
	* code/ui/ui_gameinfo.c: COM_Compress added (ORIG).
	* code/ui/ui_atoms.c: print statements removed (ORIG).
	* code/ui/ui_main.c (UI_DoServerRefresh): REJECT on comment edit... 

	* code/game/g_cmds.c (Cmd_VoiceTaunt_f): logic changed heavily. ORIG.
	* code/game/q_shared.h: Q3_VERSION "Q3 Team Arena Demo 1.27b"
	plus Com_Memset, Com_Memcpy, CIN_shader, COM_Compress.
	* code/game/g_main.c: Cvar change only
	* code/game/ai_dmq3.c: $SOS$.

	* code/client/snd_mix.c: Com_Memset
	* code/client/client.h: additions (ORIG).
	* code/client/snd_mem.c: see below.
	* code/client/snd_dma.c: $SOS$ (CVS keyword).

	* code/client/cl_cin.c: they removed unused (REJECT).
	* code/cgame/cg_servercmds.c: ORIG. compress, noTaunt etc.
	* code/cgame/cg_main.c: ORIG. Conditonal branch, COM_Compress.
	* code/cgame/cg_consolecmds.c: ORIG. Cvar values changed.
	* code/cgame/cg_draw.c (CG_DrawTeamBackground): ORIG. 
	no reject but *.orig file created. I just mark spots were 
	code changed after verifying the patch succeeded.

	* code/cgame/cg_event.c: fixed reject (REJECT).
	* code/botlib/: all *.rej here due to SOS/CVS $Keyword$.
	TODO: preserve SOS comments/rev history somehow.

	* Patch: patching up to demo source.
	ln -s sos001122-demo work
 	diff -urbB sos001119/ work > work.diff
 	ln -s cvs-1.26/ work
 	patch -p0 < work.diff  > work.patch
 	find cvs1.26/ -name '*.rej' -print           
	
	* CVS: going to check in this snapshot and tag it as
	  cvs tag id1-26w-loki001207
	to prepare for upgrading to RC4. I have already made
	many more changes than I wanted to w/o getting any 
	closer to pinpointing the problem, I might as well
	patch up to id's more current sources.

	* code/botlib/be_interface.c: initialize by memset. Turns
	out that this fails in Export_BotLibSetup on BotSetupWeaponAI
	loading "weapons.c" (from the pak, presumably) with an unknown
	structure field number. Mismatch of datafiles vs. source again.
	
	TODO: id replaced memsets in later source.
	TODO: have memsets on all exports and imports.

	* SOS: RC4 source should be tagged "1.27g RC4" (raduffy).
	Unfortunately the Linux client doesn't care a bit. Show
	History does work if from/to date differ by at least a
	day, and it shows the tag on code/ (only that subtree),
	but recursive get aborts halfway.
	Manual: http://www.sourcegear.com/SOS/Doc/

2000-12-06  Bernd Kreimeier  <bk@lokigames.com>

	* TEST: accepting missing shaders now. No bots, but I can
	actually enter the game and play (more than can be said for
	classic Q3 right now).
	TODO: Error: BotStartFrame: bot library used before being setup

	* code/renderer/tr_shader.c: took out assertion for now...
	* TEST: now missiopack/cgame loads
	TODO: tr_shader.c:2275: R_FindShaderByName: failed 
	TODO: searches ui/assets/3_cursor2.TGA, has ui/assets/3_cursor3.tga
	
	* code/unix/Makefile (MPCGOBJ): ui_shared.o (duh).
	DONE: /cgamei386.so: undefined symbol: PC_Float_Parse
	
	* code/botlib/be_ai_goal.c: initialize campspots etc. This
	might or might not fix this one (didn't get back to gdb due
	to mouse-only navigation).
	DONE: 0x80d1d5b in BotFreeInfoEntities () at be_ai_goal.c:447	

	* TEST: this time with missionpack/cgame loading... noy
	TODO: TA menu blocked after end of intro movie
	TODO: console in_mouse 1 doesn't grap pointer even on vid_start?

	* code/cgame/cg_newdraw.c: -Werror.
	* code/unix/Makefile (MPCGOBJ): cg_newdraw.o was missing (duh).
	DONE: missionpack/cgamei386.so: undefined symbol: CG_OwnerDrawVisible"

	* code/ui/ui_shared.c:1309 assign after bail on NULL.
	DONE: segfault in Item_SetFocus (item=0x0, x=0, y=0)

	* TEST: new set of DLL's (this time hopefully correct).
	All baseq3/ DLL's load, as does the missionpack/ UI DLL.
	The menus now work in both (TA seems mouse-only on everything 
	but "Quit"). Segfault on delayed TA "Quit" (stack fubared):
	#5  0x809fc28 in VM_Call (vm=0x88408a0, callnum=3) at ..//qcommon/vm.c:617
	#6  0x805aafc in CL_KeyEvent (key=9, down=qtrue, time=128644) cl_keys.c:1194
	TODO: TA menu's w/o mouse? 
	TODO: Win32 goes submenus but does not unfold
	TODO: Linux does not go submenus
	
	* code/ui/ui_main.c: see below. 
	TODO: LCC gets fits -  operands of = have illegal types 
	TODO: 'pointer to const unsigned char' and 'pointer to const char'
	* code/ui/ui_shared.c: see below.
	* code/ui/ui_gameinfo.c: see below.
	* code/ui/ui_atoms.c: see below.
	* code/game/g_bot.c: more cruft.
	* code/cgame/cg_draw.c: loads of functions modified for
	MISSIONPACK that aren't used at all for MISSIONPACK anymore.
	Development relics.

	* code/cgame/cg_consolecmds.c: -Werror.
	Note: due to Makefile error never ever compiled...

	* code/unix/Makefile: fixed various dependency errors
	for game and ui library.
	TODO: create a new Makefile with patsubst and rules.
	TODO: why C_ONLY in the i386 dedicated server?

	* code/unix/unix_main.c: use dlerror() excessively.
	Littered more unused DLL related functions with assert(0).
	TODO: clean up Sys_Load/UnloadDll (a real mess)
	TODO: remove Zoid code cruft (unused per-DLL functions)
	
	* code/game/bg_misc.c: changed G_Printf for Com_Printf.
	This was undefined in baseq3/uii386.so preventing loading.

	* TEST: +set sv_pure 0 +set vm_game 0 +set vm_cgame 0 +set vm_ui 0
	Note: so far I used only the game DLL..  duh.
	UI DLL fails to load: missing G_Printf.

	* code/unix/Makefile:  -DMALLOC_CHECK in addition to
	the -DZONE_DEBUG I have used since switching to calloc.
	Using MALLOC_CHECK=1 for now, might use 2 if something
	comes up.

	* code/renderer/tr_init.c (GL_SetDefaultState): it does get 
	called, but does not show up in the log.
	
	* TEST: tried executing a script - get bounced.
	TODO: is there any way to jump into a map?
	TODO: cl_cinematics 0 (suppress all fullscreen RoQ)
	Next: used r_logfile 200 in Win32 (RC4) and Linux.
	There is a buckload of setup code seemingly not done
	at all in Linux? Either that, or logging is enabled
	with a delay in Linux.

	* code/unix/linux_glimp.c: fixed autorepeat (H2/Fakk2 way). 

2000-12-05  Bernd Kreimeier  <bk@lokigames.com>

	* code/renderer/tr_mesh.c: added assert there.
	* TEST: menus and in-game drawing are just as they were with 
	the initial SOS001119 port. In addition:
	  R_AddMD3Surfaces: no such frame 0 to -2147483477 
	     for 'models/players/xaero/upper.md3'
          R_AddMD3Surfaces: no such frame -2147483477 to 171 
	  R_AddMD3Surfaces: no such frame 171 to -2147483498
        ad nauseam (used as my player model).
	Triggered: haveing a trRefEntity_t *) 0x41dbbd00 with 
	frame = -2147483477. Might be a red herring (PRINT_DEVELOPER), 
	ignore for now.

	* code/ui/ui_main.c: missing return.
	* code/ui/ui_shared.c: excess byte in initializer (which gcc
	did not caught, but LCC did). Also LCC complains about
	missing returns, but gcc doesn't (neither says unreacheable
	code though). If necessary (MsVC?) guard with Q3_VM.

	* code/q3_ui/ui_ingame.c: see below.
	* code/q3_ui/ui_atoms.c: voidfunc_f. LCC warns about conversion 
	from `pointer to void' to `pointer to void function(void)' 
	being compiler dependent. Casting NULL. Guess what, doesn't fix 
	it either.
	TODO: do not use these cursed scripts to generate VM code,
	we do not have proper rules for LCC/q3asm, thus the files never
	get updated.

	* code/unix/Makefile: for paranoia's sake recreated the 1.17
	compile for the UI DLL (where only q_shared/math were actually
	compiled as DO_SHLIB_CC.
	Later: switched to different gcc. 

	* STATIC: remaining problems are vmMain (same entry point for all
	DLL's), could use cgMain, uiMain and gMain here for HARD_LINKED. 
	Note: I don't think id has used this in ages.
	Plus all the collisions in *_syscalls.c, which simply can't be
	fixed cheaply. None is the superset of 2 others, neither seems
	w/o overlap to others. Full stop.

	* code/botlib/be_aas_move.c: see below.
	* code/game/ai_dmq3.c: VEC_UP/DOWN, MOVEDIR_UP/DOWN now static.
	See also game/g_utils.c for existing static duplicates.

	* code/game/q_shared.h: #define stricmp strcasecmp 
	* code/unix/Makefile:  no mo'  -Dstricmp=strcasecmp, see q_shared.h
	Also: no mo'  -I/usr/include/glide, no FX
	TODO: are we building against system GL headers? ../Mesa/?

	* code/q3_ui/ui_atoms.c: comment on duplication
	* code/cgame/cg_drawtools.c: use UI/CGAME_HARD_LINKED on UI duplicates 
	TODO: does this UI_ code in cg_drawtools/ui_atoms belong into ui_shared?

	* code/unix/Makefile: use -DQ3_STATIC 
	* code/game/q_shared.h (*_HARD_LINKED): trigger on Q3_STATIC 
	Later: collision between UI and CGAME is still there. This fixed
	the Com_Error, Com_Printf issues though

	* code/unix/Makefile ($(B)/q3static/ai_vcmd.o): this file was
	missing, hence undefined symbol.
	($(B)/baseq3/game/ai_vcmd.o): same here.
	($(B)/missionpack/game/ai_vcmd.o): same here.

	* STATIC: cg_syscalls.c, g_syscalls.c and ui_syscalls.c alias.
	Multiply defined symbols:
	 Com_Error, Com_Printf
         VEC_UP, VEC_DOWN
	 MOVEDIR_UP, MOVEDIR_DOWN
	 vmMain
	 dllEntry
	 PASSFLOAT
	 trap_Error
	 trap_Milliseconds
	 trap_Argc
	 trap_Argv
         trap_FS_FOpenFile
	 trap_FS_Read
	 trap_FS_Write
         trap_FS_FCloseFile
         trap_FS_GetFileList
	 trap_R_RegisterModel
	 trap_R_RegisterSkin
	 trap_R_RegisterFont
	 trap_R_RegisterShaderNoMip
	 trap_R_ClearScene
	 trap_R_AddRefEntityToScene
	 trap_R_AddPolyToScene
         trap_R_AddLightToScene
	 trap_R_RenderScene
	 trap_R_SetColor
         trap_R_DrawStretchPic
	 trap_R_ModelBounds
	 trap_UpdateScree
         trap_S_StartLocalSound
	 trap_S_RegisterSound
	 trap_Key_IsDown
	 trap_Key_GetCatcher
	 trap_Key_SetCatcher
	 trap_GetGlconfig
         trap_PC_AddGlobalDefine
	 trap_PC_LoadSource
	 trap_PC_FreeSource
	 trap_PC_FreeSource
	 trap_PC_ReadToken
	 trap_PC_SourceFileAndLine
	 trap_S_StopBackgroundTrack
	 trap_S_StartBackgroundTrack
	 trap_RealTime
	 trap_CIN_PlayCinematic
	 trap_CIN_StopCinematic
	 trap_CIN_RunCinematic
	 trap_CIN_DrawCinematic
         trap_CIN_SetExtents
	 trap_MemoryRemaining
         trap_SendConsoleCommand
	 trap_Cvar_Register
	 trap_Cvar_Update
         trap_Cvar_Set
  	 trap_Cvar_VariableValue
         trap_Cvar_VariableStringBuffer
	 trap_RealTime
	 trap_SnapVector  // used in game/bg_*.c, needs conditional
	More aliasing between ui_atoms.c and cg_drawtools.c:
         UI_DrawBannerString
         UI_ProportionalStringWidth
	 UI_ProportionalSizeScale
        Undefined symbol: ai_team.o: In function `FindHumanTeamLeader':
         ai_team.c:1899: undefined reference to `BotVoiceChat_Defend'
	Note: 
	
	* code/game/g_main.c: unused.
	* code/game/g_arenas.c: unused.
	* code/game/ai_team.c: init.
	* code/game/ai_dmnet.c: /* in comment (odd).
	Note: why do these come up now but not earlier?
	TODO: the make dependencies might target wrong files.

	* code/unix/Makefile (TARGETS): added q3static.
	Note: this is baseq3/

	* TEST: +set r_logfile 100. It seems that the addition of
	code (add an assertion etc.) changes the behavio of the binary.
	The intro cinematics code seems to suffer first - didn't play,
	then played, then (another assert added) doesn't play. Watch
	out for (missionpack):
	  UI_CIN_PlayCinematic
          SCR_PlayCinematic( mpintro.roq )
          trFMV::play(), playing mpintro.roq
	Also fails to exit cleanly: break gives
	 #0  0x401919ee in __select ()
         #1  0x400bbcb8 in __DTOR_END__ ()
         #2  0x4004baa1 in _XSend ()
         #3  0x452b009f in GLXRenderFlush ()
         #4  0x804ce0c in _XRead ()
         #5  0x40680813 in ?? ()
	Stack is corrupted.
        Note: ~/.q3a/gl.log
	TODO: write per-frame files (see Heretic2)
	TODO: add Heretic2 QGL (more detail)

	* code/unix/linux_qgl.c (QGL_EnableLogging): fixed countdown
	(i.e. propagated changes from win32/, see Fakk2).

	* code/unix/linux_glimp.c: fixed QGL_EnableLogging argument
	to avoid cast error (always qfalse).

	* code/unix/Makefile (DEBUG_CFLAGS): use ZONE_DEBUG.

	* code/qcommon/common.c: replaced malloc with calloc calls.

	* code/q3_ui/ui_local.h: have to use ui/ui_public.h
	* code/cgame/cg_servercmds.c: requires ../ui/menudef.h

	* code/cgame/cg_consolecmds.c: ui/ui_shared.h is unique.
	* code/q3_ui/ui_public.h: make sure this won't be compiled.	
	* code/client/client.h: we have to include ui/ui_public.h.
	Note: id is obviously maintaing only the ui/ headers, so the
	headers in q3_ui/ are deprecated.

	* code/renderer/tr_shader.c: added assertions (see Ryan's Fakk2
	problems with missing shaders).

	* code/game/g_cmds.c: below.
	* code/game/ai_vcmd.c: below.
	* code/game/ai_team.c: below.
	* code/game/ai_dmnet.c: below.
	* code/game/ai_dmq3.c: below.
	* code/game/ai_chat.c: below.
	* code/game/ai_cmd.c: ../../ui/menudef.h (new Q3TA script directory).

	* code/cgame/cg_newdraw.c: make sure it won't compile w/o MISSIONPACK.

	* code/cgame/cg_servercmds.c: below.
	* code/cgame/cg_event.c: below.
	* code/cgame/cg_consolecmds.c: below.
	* code/client/keys.h: below.
	* code/client/client.h: below.
	* code/q3_ui/ui_local.h: include from ../q3_ui/ not ../ui/.
	Note: id seems to intentionally use the header from the new ui/.

	* Makefile: checked -I$(UIDIR), there is no such. That means all
	files include directly, which means all (including Q3) are using
	the new ui/ headers.

2000-12-04  Bernd Kreimeier  <bk@lokigames.com> 

	* RC4: released as 362101115 Dec  4 11:40 TA_Q3A_RC4.zip

	* TEST: the corrupted menu problem is back :-(. Looks like I am in
	for a static link next.
	
	* code/unix/Makefile (clean2): fixed (not all new OBJ covered).
	* code/q3_ui/ui_teamorders.c: -Werror.
	* code/q3_ui/ui_team.c: -Werror. 
	* code/q3_ui/ui_qmenu.c (Bitmap_Draw): -Werror. 
	* code/q3_ui/ui_mods.c (UI_Mods_LoadModsFromFile): unused. -Werror.
	* code/q3_ui/ui_controls2.c: -Werror.
	* code/q3_ui/ui_atoms.c: -Werror
	* code/null/null_client.c: -Werror.
	* code/unix/linux_joystick.c: -Werror.
	* code/unix/linux_glimp.c: -Werror. 
	* code/unix/linux_qgl.c: -Werror. 
	* code/unix/unix_shared.c: -Werror. 
	* code/unix/unix_net.c: -Werror.
	* code/unix/linux_local.h: added missing prototypes.
	* code/unix/unix_main.c: -Werror. Includes linux_local.h
	* code/jpeg-6/jdmainct.c: see below.
	* code/jpeg-6/jcmainct.c: variables called "main" (*moan*) 
	* code/jpeg-6/jcdctmgr.c (forward_DCT): -Werror.
	* code/botlib/l_script.c (PS_ReadLiteral): -Werror
	* code/botlib/l_precomp.c (PC_AddBuiltinDefines): -Werror.
	* code/botlib/be_interface.c: -Werror.
	* code/botlib/be_aas_reach.c: -Werror
	* code/botlib/be_aas_cluster.c: -Werror 
	* code/game/be_aas.h: -Werror. 
	Note: MrElusive accumulates a lot of code history in nested comments,
	which gcc doesn't like at all. #if 0'ed to avoid.
	* code/qcommon/vm_interpreted.c: -Werror.
	* code/qcommon/unzip.c: -Werror.
	* code/cgame/cg_servercmds.c: -Werror.
	* code/cgame/cg_main.c: -Werror.
	* code/cgame/cg_drawtools.c: -Werror.
	* code/game/bg_misc.c: -Werror.
	* code/game/be_ai_move.h (bot_avoidspot_s): added.
	* code/botlib/be_ai_move.c: removed typedef struct bot_avoidspot_s
	* code/client/snd_mix.c: -Werror.
	* code/qcommon/md4.c: -Werror.
	* code/qcommon/common.c: -Werror.
	* code/client/cl_keys.c: -Werror.
	* code/client/cl_cin.c: -Werror, init local variables.	
	* code/unix/Makefile: -Werror. need -O for -Wall for uninitialized
	Note: the above is the list of files that got touched during a pass
	with -g -O -Werror -Wall flags (in the hope of finding uninitialized
	memory and ambiguous statements). Most of the above are simply
	unused variables (or even code).

	TEST: RC3 data files, but DLL's.
	TODO: TA gets stuck in initial sound, doesn't play cinematics (sometimes)
	TODO: Q3 intro movie looses sound after Sarge gets teleported
	TODO: Q3 ingame renders world, weapon, muzzleflash, hud, can shoot,
	TODO:  but no movement, hud background is fubared. 

	* code/cgame/cg_main.c: cg_singlePlayerActive

	* code/q3_ui/ui_login.c: doesn't seem to be used?
	* code/game/g_rankings.c (G_RankRunFrame): doesn't seem to be used.
	* code/q3_ui/ui.sh: disabled this. 
	* code/q3_ui/q3_ui.sh: changed include path to ../q3_ui/ (duh).

	* code/game/game.sh: changed include path to ../q3_ui/ which 
	is not in the Win32 batch file. 
	* code/cgame/cg_rankings.c: this does not seem to be included. 
	* code/cgame/cgame_ta.sh: added -DCGAME. Also added cg_syscalls.c
	to build (also missing in Win32).

	* code/cgame/cgame.sh: added -DCGAME (see cgame.bat). Also
	changed include path to ../q3_ui/ which is not in the Win32
	batch file.  Also added cg_syscalls.c to build (missing in 
	Win32).

2000-12-01  Bernd Kreimeier  <bk@lokigames.com>

	* RC3: released as of sos001201 / Q3 1.27f

	* code/unix/Makefile: more fixes with clean build. The
	changes made fix the menu rendering for Q3 but not TA.
	Ingame graphics still broken. 

	* code/game/game_ta.sh: created. Use game_ta.q3asm here.
	* code/game/game.sh: no -DMISSIONPACK 
	* code/game/game_ta.q3asm: CR/LF, /.

	* code/cgame/cgame_ta.sh: created. Use cgame_ta.q3asm here.
	* code/cgame/cgame.sh:  no -DMISSIONPACK. No cg_newdraw, ui_shared.
	* code/cgame/cgame.q3asm:  No cg_newdraw, ui_shared.
	CR/LF, /, cg_newDraw, and the output path/name.
	
	* code/q3_ui/q3_ui.q3asm: output to ui not q3_ui...

	* code/cgame/cg_event.c: cg_singlePlayerActive used here.
	TODO: guard by MISSIONPACK
	* code/cgame/cg_local.h: named q3print_t enum. Cvar
	cg_singlePlayerActive for both Q3 and TA.


	* code/unix/Makefile: cleanly separate B/baseq3/ and
	B/missionpack/ subtrees during build. While new and old
	UI are in separate directories, the cgame/ and game/
	are shared, with conditional -DMISSIONPACK compile
	and different files includeds (cd_draw, cg_newdraw).
	That means twice the number of targets (3 DLL's, 3 QVM's,
	times two), and different build rules.
	TODO: carefully check Win32 build for (other) conditionals
	TODO: carefully check Win32 build for link lists

	* CVS:  ui/, code/ui, botfiles/ and subdirectories are added.
	The code/macosx/ directory turned out to be a real pain that
	had to be edited manually, throwing out CVS/ directories in
	the tree that had been created by SOS as they are in id's
	repository:
	  code/macosx/Client/CVS
	  code/macosx/Client/PBUserInfo/CVS 
	  code/macosx/Client/Quake3.nib/CVS  
	  code/macosx/Common/CVS
	  code/macosx/DedicatedServer/CVS
	  code/macosx/DedicatedServer/PBUserInfo/CVS  
	Now tagged
	  cvs tag id1-26y-loki001119
	TODO: there are several new files not yet linked?

	* ChangeLog: merged the Changelog from the bk00119 working
	branch (initial Q3TA port) based on sos001119 snapshot. Also
	merged the source tree with cvs-1.17.
	In the ChangeLog below  *** MISSIONPACK *** indicates work
	that was done on the branch (code-sos/ prefix in files).
	The cvs update of this will be tagged with
	 cvs tag id1-26y-loki001119
	Use this tag to hunt for possible Linux fixes that got lost
	(i.e. got dropped by id since id000516 and were thus not in
	sos001119, but did not show in diff id000516 cvs1-17).
	New directories in CVS: botfiles/, ui/.
	Missing from SOS/Missionpack: SDK directories.
	 common, lcc, libs, q3asm, q3data, q3map, q3radiant.


	* ssreport.txt: below.
        Note: watch for files called "ssreport.txt", that's id ChangeLog.
	* ui/ui_syscalls.asm: below.
	* q3_ui/ui_syscalls.asm: below.
	* game/g_syscalls.asm: below.
	* cgame/cg_syscalls.asm: below.
	* bspc/linux-i386.mak: below.
	* bspc/lcc.mak: below.
	* botlib/linux-i386.mak: below.
	* botlib/lcc.mak: below.
	* A3D/a3d_console_variables.txt: CR/LF issue (minimize diffs).

	* CVS: the checked bk001119 work copy of the sos001119 initial
	checkout (completed with everything in the SOS "Missionpack"
	tree, i.e. botfiles/ and botfiles.* added), copied over the
	cvs-1.17 checkout.
	Note: in these cases, BEWARE ui -> q3_ui/ links, and different
	ChangeLogs. Also "make clean" helps.

	* unix/unix_net.c: below. 
	* unix/unix_main.c: below. 
	* unix/matha.s: below.
	* unix/linux_qgl.c: below.
	* unix/linux_glimp.c: see also linux_joystick.c.
	* server/sv_client.c: below.
	* renderer/tr_surface.c: below.
	* renderer/qgl.h: below.
	* qcommon/qcommon.h: below.
	* qcommon/files.c: below.
	* qcommon/common.c: below.
	* q3_ui/ui_demo2.c: below.
	* mac/mac_net.c: below.
	* mac/mac_glimp2.c: below.
	* game/surfaceflags.h: below.
	* game/bg_lib.c: checked against id00516/cvs-1.17a diff.
	* bspc/bspc.c: TH_AASToTetrahedrons call removed since id000516.
	Note: our final compare of id000516 against cvs-1.17a, making sure
	that all these differences are in bk001119 (initial Q3TA port).
	If id branched the Q3TA base off before id000516 we might be screwed.
	Note: I do not diff against bk000520, which had some minor changes
	against id000516 (check VectorArrayNormalize, OTConfiguration), which
	seem consistent with me taking a pre-id000516 source snapshot for that
	working branch.

2000-11-30  Bernd Kreimeier  <bk@lokigames.com>

	* TEST: compiled using the symbolic link ui/ -> q3_ui/.
	Had to undo one CVS change, regarding
	 code/cgame/cg_syscalls.asm
	 code/game/g_syscalls.asm
	 code/q3_ui/ui_syscalls.asm
	These files are neither generated by Win32 cgame.bat
	nor cgame.sh (etc.), thus seemingly maintained by hand.
	 cvs tag pr1-17-loki001130b
	should be used if somebody needs this 1.17 snapshot
	(which, remember, is post-release, with additional fixes).
	Later:
	 cvs tag pr1-17-loki001130c
        includes the full ChangeLog (duh).
	
	* CVS: up until cvs-1.17-001130, code/ui/ contained the
	Q3 code for the UI QVM/DLL. In Q3TA, this code has been
	moved to code/q3_ui/, while at the same time the new
	(scripting driven) UI code for Q3TA was maintained in
	code/ui/. To preserve the history of code/ui/, it has been
	renamed to q3/ui/ in the CVSROOT.
	Note: this will BREAK all cvs-1.17 and before checkouts.
	To compile earlier versions, move or link q3_ui/ to ui/.
	The code has been tagged
	  cvs tag pr1-17-loki001130
        after the change.
	DONE: remove code/*/vm/*.asm from CVSROOT
	Note: this includes code/*/*.asm files (from *_syscalls.c).
	These were originally tracked in CVS, but if we need 
	comparison of q3asm output or QVM files we can rely
	on the Win32 and Linux SDK now. These files have been
	physically removed from CVS now, followed by
	  cvs tag pr1-17-loki001130a

2000-11-30  Bernd Kreimeier  <bk@lokigames.com>      *** MISSIONPACK ***

	* RC2: new ZIP file (another 360M for convenience).

	* SOS: new CVS module, Quake3_sos. This will be used to track
	the unchanged SOS checkouts from id. As their repository
	is read-only, and there is no estimate on when changes might
	be backpropagated there, I will track their changes in a
	separate module, and update our local Quake3 module 
	accordingly. This is effectively "tracking 3rd party"
	w/o import and half-automated, forced mergers - in other
	words, we now branch starting with our post-1.17 changes,
	for the benefit of moving at all.
	Baseline is a slightly changed PR-1.17 id000516 source dump
	(essentially ui/ moved to q3_ui for continuity, and CR/LF etc.).
	 cvs import Quake3_sos id000516 pr1-17-win32
	 cvs import Quake3_sos sos001119 pr1-26-win32
	 cvs import Quake3_sos sos001120 pr1-26-win32-001120
         cvs import Quake3_sos sos001121 pr1-26-win32-001121
         cvs import Quake3_sos sos001122 pr1-26-win32-001122
         cvs import Quake3_sos sos001122-demo pr1-26-win32-demo
        This is about the 1.26w Team Arena Win32 demo release, give or
	take a couple of lines. Has Q3_VERSION "Q3 Team Arena Demo 1.27b".
	 cvs import Quake3_sos sos001123 pr1-26-win32-001123
         cvs import Quake3_sos sos001126 pr1-26-win32-001126
        Now track id versions (see code/game/q_shared.h:Q3_VERSION)
	 cvs import Quake3_sos sos001128 pr1-27c-win32-001128
	With 1.27d they switched from Demo to full version (RC1).
	 cvs import Quake3_sos sos001129 pr1-27d-win32-001129
         cvs import Quake3_sos sos001130a pr1-27d-win32-001130a
        Now switched to 1.27e. This import is done from the SOS
	working directory.
	 cvs import Quake3_sos sos001130b pr1-27e-win32-001130b
	Note: SoS created rwx attributes which are luckily fixed
	automagically during import. It is also seemingly incapable
	to compare files, and leave files that have not changed the
	hell alone. I can't do cvs update due to the $..$ tags in
	the original files (which CVS can't be told to ignore), 
	so I have to do import (creating a load of vendor tagged 
	branches), but at least cvsweb and cvs get the revisions
	right.

	* code-sos/unix/Makefile: added linux_joystick
	* code-sos/unix/linux_local.h: match mac/ and win32/, for prototypes.

	* code-sos/unix/linux_joystick.c: new file, code from linux_glimp.c
	Note: decided to separate this, as (a) we might edit/extend
	a lot, (b), it's not in the id tree, (c) it's not GL, (d)
	there might be even more oddball devices. Anything that
	cuts down on diffs.

	* code-sos/unix/linux_glimp.c (Q_stristr): const return (cvs1.17).
	Also (XLateKey): added more keyboard mappings (ASCII on
	upper row digits) (cvs1.17). Added in the minimal joystick
	hooks (cvars, function calls). Fixed joystick cvar naming
	to match win32 (kept joystick_threshold). 
	TODO: joystick stubs for dedicated?

	* CVS: I have to move up to 1.27d (data, Win32 networking).
	With exception of linux_glimp.c (mostly joystick code), 
	all cvs1.17 changes should now be in the work snapshot 
	based on the first sos001119 we got from id. There are
	also some additional changes in there already, thus I'll
	move the (buggy) 1.26 snapshot into CVS before adding even
	more differences.


2000-11-29  Bernd Kreimeier  <bk@lokigames.com>     *** MISSIONPACK ***

	* RC1: TeamArena_Q3A_RC1.zip. Source has moved from
	Q3VERSION "Q3 Team Arena Demo 1.27c" to "Q3 1.27d" now.

	* code-sos/qcommon/common.c: added Com_InitPushEvent(). Also
	increased MAX_PUSHED_EVENTS to 256.
	Note: this is another case of buffer memory not zero'ed.
	Com_EventLoop, fixed evTime to evType in debug print.
	
	* TEST: baseq3/
	 +set sv_pure 0 +set vm_game 0 +set in_mouse 0 +set developer 2
        TODO: Team Arena in menu leads to RE_Shutdown(1) and locks
	TODO: can't play game
	TODO: shaders can't load *.tga, *.jpg files are there
	TODO: DO_CC linking for DLL's, DO_SHLIB_CC only for export?
	TODO: ERROR: Bad player movement angle
        TODO: Warning: cvar "..." given initial values: "..." and "..."
 	TODO: TA demo ERROR: CL_ParseServerMessage: Illegible server message
        TODO: WARNING: Com_PushEvent overflow

	* code-sos/qcommon/files.c: add NULL filter for our Sys_ListFiles calls.
	* unix/unix_shared.c (Sys_ListFiles): signature has changed, 
	additional Sys_ListFiles argument now.

	* code-sos/unix/unix_net.c (Sys_GetPacket): see below (readcount=0).
	* code-sos/unix/unix_main.c: see below (Mike's and my changes to DLL
	loading, my event buffer clear fixes).
	* code-sos/unix/linux_qgl.c (QGL_Init): see below (__FX__ guards).
	TODO: abstract WGL/GLX and end unfortunate QGL duplication.
	TODO: spice up QGL with Linux H2 full version.	
	* code-sos/q3_ui/ui_demo2.c: fix on demo names  - no Q_strupr(demoname).
	Note: in CVS this fix is in ui/ui_demo2.c. CVS is screwed by
	id choosing the old name for new directory...
	TODO: manual intervention on "ui goes q3_ui"  in CVSROOT?
	* renderer/qgl.h: see below (__FX__ guards).
	* qcommon/files.c: migrated in the 1.17cvs changes against the
	id000516 code dump, i.e. the (not marked - boo hiss) mkv changes.
	Note: all the above is based on a diff of the last id code dump
	pre-1.17 against our CVS, with those fixes now migrated into the
	sos1.26 snapshot.
	TODO: move in joystick code.
	TODO: replace XAutoRepeatOn/Off with filter (focus).
	TODO: DGA 2.0 and such.
	
	* code-sos/game/q_shared.c: valid compare for NULL strings
	* code-sos/unix/unix_main.c: QRTLD, and now using RTLD_NOW.
	Note: it is a bad idea to load game DLL's that are missing symbols.

	* code-sos/ui/ui_main.c: see below.
	* code-sos/game/g_main.c: see below.
	* code-sos/q3_ui/ui_main.c: see below.
	* code-sos/cgame/cg_main.c: made cvarTable and cvarTableSize static. This resolved
	a segfault related to traversing the UI table during Init.
	Note: there is a segfault related to this variable being out of bounds. 
	Different struct size in global variables possible aliasing between the 
	DLL's.
	
	* code-sos/unix/unix_main.c (Sys_Error): assert(0), no exit in debug.
	* code-sos/game/q_shared.c: now aborts on NULL destination. Also DPrintf's
	on bogus excess copies.
	TODO: make all those string functions safe, at least assert.
	* code-sos/server/sv_init.c: comment in SV_Init
	// init the botlib here because we need the pre-compiler in the UI
	Called in qcommon/common.c:Com_Init, were CL_Init is called afterwards...
	* code-sos/server/sv_bot.c: the botlib_import is filled here.
	* code-sos/unix/unix_main.c (Sys_GetBotLibAPI): RTLD_NOW. Which is for naught,
	as this code is not used and has never been used. assert(0)

	* code-sos/botlib/be_interface.c: botimport supposed to be set here.
	* code-sos/botlib/l_memory.c: segfault with q3_ui/ DLL.
        #1  0x80e23ec in GetMemory (size=35) at ..//botlib/l_memory.c:331
        331             ptr = botimport.GetMemory(size + sizeof(unsigned long int));
	as botimport is completely NULL'ed.

	* code-sos/q3_ui/q3_ui.sh: created from ui/ui.sh 1.17 

	* code-sos/q3_ui/q3_ui.q3asm: unfubared (CR/LF, / path).

	* code-sos/unix/Makefile: added q3_ui/ make targets (basically
	ui/ targets from CVS 1.17 Makefile for starters).

	* code-sos/q3_ui/: this is the old UI code, which does not use
	../ui/menus.txt (see ui/ui_main.c). In other words,
	the code in ui/ now has to be compiled or qvm'ed 
	for missionpack/, but to create the necessary DLL or
	QVM modules for baseq3/ we need to use q3_ui/. 
	
	
2000-11-27  Bernd Kreimeier  <bk@lokigames.com>     *** MISSIONPACK ***

	* code-sos/game/bg_lib.c: ld problem with a custom "tan(..)"
	TODO: loooking forward to SIGFPE on this code base.
	
	* code-sos/ui/ui_util.c: this file is empty.

	* code-sos/ui/ui.sh: new files:
	  ui_shared.c
	  ui_util.c
	Replaced by the /ui/*.menu files:
	 q3lcc: can't find `../ui_cdkey.c'
	 q3lcc: can't find `../ui_ingame.c'
	etc.

	* code-sos/cgame/cgame.q3asm: added cg_newdraw entry.
	Also added ui_shared entry.
	* cgame/cgame.sh: added cg_newdraw.c entry.
	Also added ../ui/ui_shared.c entry.

	* code-sos/cgame/cg_newdraw.c: renamed (was cg_newDraw.c mixed case).
	Note: the infidels have taken over.

	* cgame/cgame.sh: added  -DMISSIONPACK.
	Note: w/o, q3lcc complains
	../cg_event.c:204: undeclared identifier `cg_singlePlayerActive'
        ../cg_event.c:204: left operand of . has incompatible type `int'
        which indicates that this source does not compile w/o MISSIONPACK
	anymore. The baseq3/pak4.pk3 file in the Q3TA snapshot archives
	are dated
	     284464  11-10-00 14:02   vm/cgame.qvm
             463940  11-14-00 14:47   vm/qagame.qvm
             271596  11-14-00 14:48   vm/ui.qvm
	the code dump is from 11-19. 
	Note: Make does not abort on q3lcc complains

	* code-sos/game/game.sh: also added ai_vcmd.c entry.

	* code-sos/ui/ui.q3asm: fubared (below). In addition, this is 
	the only one to have a 
	 -o "/tmp/quake3/missionpack/vm/ui"
	line in it. Given that the other 2 QVM modules are
	also dependend on -DMISSIONPACK, this seems a real mess.
	For now using the same path as the other 3.
	* code-sos/cgame/cgame.q3asm: below.
	* code-sos/game/game.q3asm: fubared. Fixed CR/LF and \ in paths
	again (read by q3asm called by game.sh called by make).
	* unix/Makefile: updated fpor DLL/QVM.
	Note: also shell scripts to use q3lcc not lcc.

	
2000-11-27  Bernd Kreimeier  <bk@lokigames.com>

	* code/unix/Makefile: now expects a run/ directory
	relative (between this, the Loki standards, and the
	utility code in the same repository, it's ever so
	slightly less dorky).
	TODO: fix broken copyfiles target etc.pp.

	* code/game/bg_lib.c: turns out the changes I
	undid 001120 were affecting original Zoid
	Linux port related defines, which break VM
	compile. Mike fixed those (which I unfixed
	when referring to the latest id code that does
	not contain these patches). However, they
	duplicate ANSI libc symbols, so the guards might
	be wrong. The symbols are missing when compiling
	for VM, so I now use the existing lcc -DQ3_VM
	flag:
	  //#if !defined ( _MSC_VER ) && ! defined ( __linux__ )
          #if defined ( Q3_VM )
	This will break DLL compile on non-ANSI platforms,
	which will have to be added to the conditional then.

	* code/ui/ui.sh: below. 
	* code/game/game.sh: below. 
	* code/cgame/cgame.sh: Linux SDK installs q3lcc to
	avoid collisions with regular lcc pre-installs. The
	scripts fail with "lcc not found", but do not abort 
	the Makefile.
	Note: now that VM code gets actually built, there
	are errors:
	g_main:648 ERROR: symbol vsprintf undefined
        bg_pmove:1221 ERROR: symbol abs undefined
        q_math:4309 ERROR: symbol fabs undefined
        q_shared:2801 ERROR: symbol tolower undefined
        q_shared:2862 ERROR: symbol toupper undefined
        ai_dmq3:208 ERROR: symbol atoi undefined
        ai_cmd:4951 ERROR: symbol sscanf undefined


2000-11-20  Bernd Kreimeier  <bk@lokigames.com>   
	
	* TEST: test compile of pr-1.17+cvs fixes segfaults due 
	to new baseq3/pak4.pk3
	Note: to self ... 1.17 is not compatible with new files.
	Checking into CVS next.

	* code/: changes applied by us that are not in id's code base
	affect q_shared.c (NULL in Q_stricmp), files.c (FIXME fs_cdpath,
	Sys_ConcatenateFileList, ui_demo2.c (demo no tolower on linux).
	In unix/ linux_glimp.c (joystick code), qgl.h, linux_qgl.c (__FX__),
        unix_main.c (dlopen bug and event buffers), unix_net.c (readcount),
	matha.s (assembly warning).

	* code/server/sv_client.c (SV_WriteDownloadToClient): 
	No effective change  on FS_SV_FOpenFileRead call, they reworked 
	autodownload some more seemingly.

	* code/renderer/tr_surface.c: VectorArrayNormalize
	
	* code/qcommon/qcommon.h: see below.
	* code/qcommon/files.c: Com_ReadConfigs removed.
	* code/qcommon/common.c: removed Com_ReadConfigs, 
	textual replacement of body in Com_Init.

	* code/mac/mac_net.c: not applied (undone by id)
	OTConfiguration *config <> OTConfigurationRef  config

	* code/mac/mac_glimp2.c: r_colorbits->integer > 16
	* code/game/surfaceflags.h (CONTENTS_BOTCLIP): added.

	* code/game/q_shared.h: not applied (undone by id)
	#if defined(ppc) || defined(__ppc) || defined(__ppc__) 
        #define idppc 1 
	#else 
        #define idppc 0 
        #endif 

	* code/game/q_math.c: added another CPP line to guard
	BoxOnPlaneSide, removed WIN32 guard. 
	TODO: this could be broken code guarded in all current
	compiles...

	* code/game/bg_lib.c: left Q#_VM guard for typedef cmp_t
	Added !defined( __linux__ ) for tolower and atoi.
	Note: the changes above relate to the very last code update
	from id prior to the 6 month blackout, which were not in
	CVS when Michael made his updates. Needed to establish the
	baseline for the new patch. Source dump 1.17.00520, against
	SOS 1.26w-001119 version.
	
2000-11-20  Bernd Kreimeier  <bk@lokigames.com>       *** MISSIONPACK ***

	* TEST: running against the data up to TeamArena_Q3A_001109.zip
	Hunk_Clear: reset the hunk ok
        Program received signal SIGBUS, Bus error.
        "q3dm2", killBots==qtrue
	#0  CM_ClearMap () at ..//qcommon/cm_load.c:644
        #1  0x80884a7 in SV_Map_f () at ..//server/sv_ccmds.c:159
        #2  0x8072579 in Cmd_ExecuteString (text=0xbffff4b0 "spmap q3dm2") at ..//qcommon/cmd.c:591
        #3  0x8071dfe in Cbuf_Execute () at ..//qcommon/cmd.c:190
        #4  0x80763f7 in Com_Frame () at ..//qcommon/common.c:2547
        #5  0x8130d6b in main (argc=13, argv=0xbffff984) at ..//unix/unix_main.c:953
        #6  0x40100cb3 in __libc_start_main (main=0x8130bc4 <main>
	Not reproducible (screen stayed black).
	
	* TEST: +set developer 1, same for Win32 and Linux:
	Can't find gfx/misc/flare.tga
        Can't find gfx/misc/sun.tga
        Can't find gfx/misc/console02.tga
	Can't find vm/ui.map
	Can't find textures/sfx/logo512.tga
        Can't find gfx/colors/black.tga
        Can't find models/mapobjects/banner/banner5_2.md3
        Can't find models/mapobjects/banner/banner5_1.md3
        Can't find textures/sfx/firegorre2.tga
        Can't find textures/sfx/bolts.tga
	Can't find menu/art/unknownmap.tga

	* Q3TA: after nearly 6 months, a code update from id. SOS access 
	even. Got it to compile, link and start, but it's currently broken
	(menu doesn't render in full, can't get into game etc.). Need
	a baseline 1.17 to diff against. Last code dump was May 16, with 
	bspc code updated May 19. Checking working directory of bk000520
	against CVS next (Mike's fixes never made it into id's codebase
	or a post 1.17 release, neither did my fixes as released in the
	point release version 1.17).

2000-11-19  Bernd Kreimeier  <bk@lokigames.com>       *** MISSIONPACK ***

	* TEST: Win32 install as tested with 1.26w. quake3.x86 (Q3A game)	
	Warning: cvar "r_uifullscreen" given initial values: "1" and "0"
        Warning: cvar "r_inGameVideo" given initial values: "1" and "0"
        ^3WARNING: sound/feedback/hit.wav is a 8 bit wav file
	(on windows, sound/weapons/weapon_hover.wav is missing...)
	Menu only partially displayed in TA and baseq3 play, menu itself
	seems to work. Freetype?
	WARNING: Com_PushEvent overflow

	* code-sos/game/game.sh: not in SOS, moved in from CVS snapshot.

	* code-sos/qcommon/common.c: conditional DEDICATED to get rid off 
	CL_ShutdownCGame/CL_ShutdownUI/CIN_CloseAllVideos.
	Same for UI_usesUniqueCDKey: dedicated server does not
	write CD key file.
	TODO: check whether there is an unneeded "read CD key"
	for dedicated server.

	* code-sos/null/null_client.c (CL_ShutdownAll): added dummy.

	* code-sos/unix/Makefile:  server/sv_net_chan.o for dedicated server.

	* code-sos/null/null_snddma.c: fixed  S_RegisterSound signature.

	* code-sos/client/snd_mix.c: snd_p, snd_linear_count, snd_out
	can't be static, as used by unix/snd_mixa.s.

	* code-sos/unix/Makefile: added to the executable target:
	   renderer/tr_font.c
	   client/cl_net_chan.c
	   server/sv_net_chan.c 
	Also added a lot of jc*.c files to build, to fix unresolved
	symbol errors.
	TODO: is there unused jpeg-6/jd*.o code linked in now?

	* code-sos/ft2/smooth.c: includes ftgrays.c, ftsmooth.c
	
	* code-sos/ft2/truetype.c: ttdriver.c, ttpload.c, ttgload.c, ttobjs.c.
        Also (see ftoption.h) TT_CONFIG_OPTION_BYTECODE_INTERPRETER ttinterp.c
	
	* code-sos/ft2/sfnt.c: includes ttload.c, ttcmap.c, sfobjs.c,
	sfdriver.c. lso (see ftoption.h)
        TT_CONFIG_OPTION_EMBEDDED_BITMAPS     ttsbit.c
        TT_CONFIG_OPTION_POSTSCRIPT_NAMES     ttpost.c

	* code-sos/ft2/ftbase.c: includes ftcalc.c, ftobjs.c, ftstream.c,
	ftlist.c, ftoutln.c, ftextend.c, ftnames.c.
	
	* code-sos/ft2/autohint.c: includes ahangles.c, ahglyph.c, ahglobal.c,
	ahhint.c, ahmodule.c.

	* code-sos/unix/Makefile: added ft2/ to client objects, took out
	ftraster.c/ftrend1.c (see below), added -DFT_FLAT_COMPILE.
	* ft2/ftsmooth.c: -DFT_FLAT_COMPILE required.
	* ft2/raster1.c: -DFT_FLAT_COMPILE required.
	Note: this includes ftraster.c/ftrend1.c.

	* code-sos/qcommon/vm_x86.c: _ftol is missing, ftolPtr only defined
	for Win32, but used in generic code. Workaround for now.
	TODO: find good Linux ftol, or use old solution. 

	* SoS checkout. chown -R a+w *  recode ibmpc:lat1 */*.h */*.c
	
2000-06-30  Michael Vance <briraeos@lokigames.com>

	* misc: Spoke with Leonardo about qvm mess.

	* ui/ui.sh: Created to build much like the ui.bat script.

	* ui/ui.q3asm: Use linux style paths.

	* game/game.sh: Created to build much like the game.bat script.

	* game/game.q3asm: Use linux style paths.

	* cgame/cgame.sh: Created to build much like the cgame.bat script.

	* cgame/cgame.q3asm: Use linux systel paths.

	* unix/Makefile: Use the new .sh scripts to build the QVM files.

	* lcc/etc/linux.c: Build .asm files instead of .s files.

	* misc: QVMs now load properly, with minor glitches that should
	hopefully be solvable. The new build scripts conflict with the
	.asm files already in CVS, as the generated byte code is slightly
	different in some cases.
	
2000-06-29  Michael Vance <briareos@lokigames.com>

	* lcc/makefile: Tweaked to automatically include the system
	compiler's header location. Added an install directory.

	* lcc/custom.mk: Added a build directory.

	* lcc/etc/linux.c: Numerous small tweaks to make compiling the VM
	code a much simpler task.

	* q3asm/Makefile: Created.

	* q3asm/q3asm.c: Fixed uninitialized variable in
	HashString(). Fixed off by one in argument parsing.
	
	* misc: Had Brian remove the Xmd.h include from glx.h so that we can
	build Quake3 on XFree86 4.0 systems.

	* wine: Attempted to build with lcc.exe and q3asm.exe using wine,
	also did not work. This is in contrast to MikeP's .qvms, which
	seem to work.
	
2000-06-28  Michael Vance <briareos@lokigames.com>

	* common/files.c: Fixed Mods menu behaviour.

	* unix/linux_qgl.c: Guarded references to fxMesa.

	* renderer/qgl.h: Guarded references to fxMesa.

	* ui/ui_demo2.c: Don't convert filename to uppercase.
	
2000-05-07  Bernd Kreimeier  <bk@lokigames.com>

	* common/cmdlib.c: windowism, not guarded. Added WIN32 around "ATOM a".

	* q3map/Makefile: Linux Makefile. 

	* q3map/Makefile.irix: "makefile" in original code, Irix-only Makefile. 
	Just fixed some redundant TAB that GNU make despises about as much as I 
	despise GNU Make, and changed to a relative path.

2000-05-01  Bernd Kreimeier  <bk@lokigames.com>

	* q3radiant/: updated with Q3Radiant198b3-src.zip. 
	Tagged (globally) as q3radiant-198b3.
	Kept the old files 
	  3DFXCamWnd.h
	  3DFXCamWnd.cpp
          MainFrm2.cpp
        New files
          Shaders.h
          misc/      (contributed special TGA resources, don't relly belong)
        Removed:
	  pName
        Changed filenames to previous case:
         UNNAMED.MAP           -> unnamed.map
         RES/BMP0002.BMP       -> RES/bmp00002.bmp
	Changed:
         changelog.txt         -> ChangeLog
	
2000-04-28  Bernd Kreimeier  <bk@lokigames.com>

	* CVS: bk000425 modified sources. This replaces the unix/ directory
	which is not yet in id's SourceSafe. Two check-ins, due to minor
	changes in an attempt to nail the Voodoo3 related crashes (driver
	problems, not a Q3 issue). Undid some of the QFL changes for PI
	and the log bug fix - put back in (TODO). Also includes:
	* Quake3/code/botlib/be_aas_sample.c: single file update from Robert.
	
	* CVS: id000423 code dumps (two of them). Applying Loki patches.
	Tagged for the final version (all patches).

	* CVS: id000422 code dump. This did not include the 1.16n fixes
	used for Linux, and was the first dump for the 1.17 security fix
	release.
	Note: forgot to check in the ft2/ headers themselves, but they
	are not used in the current codebase anyway. Are added in next
	dump. Also there is use of CVS/CVS-like $Keyword$ patterns in
	some files, and between their revisions and ours we fuck this up.
	Also, id ZIP files create write protected sources, have to do
	chmod -R a+w Quake3/ to work and overwrite files.

	* CVS: bk000315 modified source. This version was the 1.16n release.
	Note: the changes applied here are not in the subsequent code dumps
	of id. If you want to compile the Linux version as released you
	have to use bk-tagged versions until the patches are merged in by
	Robert Duffy.

	* CVS: id000314 engine code dump, same procedure as below, tag.
	Note: this version added vm/ sudirectories with assembly files
	for cgame, game, ui. CVS tag id000314.

	* CVS: id000304 engine code dump. Now there is a problem, as CVS
	was used in the Mac sources. Do
	  find . -name 'CVS' -exec rm -r {} \;
        before cvs update, then tagged:
	 cvs -d /loki/cvsroot/ tag id000304 Quake3/

	* CVS: checked in a source snapshot of the id00303 engine code
	and the id0003029 tools code. The tool sources are not fully in 
	sync, and we have only partial source from earlier engine revisions.
        The engine source marks where Loki took over from Dave Kirsch.
        This snapshot (with all temporary and bogus files) is imported
        and tagged using:
          cvs -d /loki/cvsroot import Quake3 id000303 initial

        Modules:
          code:      the Q3 engine code, including a jpeg-6/ copy
          common:    code shared by tools
          libs:      code shared by tools, including a jpeg6/ copy
          q3asm:     VM bytecode assembly 
          q3data:    misc. Q3 data conversions
          q3map:     BSP builder
          q3radiant: Win32 editor, as is
          lcc:       C compiler for q3asm

        The sources have not been cleaned up, and binary files have not been
	removed. The Q3Radiant code base might exhibit mixed case asmbiguities
	in the future, and future source dumps might come from SourceForge
	instead.

2000-04-25  Bernd Kreimeier  <bk@lokigames.com>

	* q3code.id000425/unix/Makefile: relative path, relocatable.
	Note: first code merge with id, finally :-).

2000-04-24  Bernd Kreimeier  <bk@lokigames.com>

	* q3code.bk000422/unix/matha.s: in C(BoxOnPlaneSide)
	the following line triggers assembler warning: 
	"missing prefix `*' in absolute indirect address, maybe misassembled!"
	  jmp Ljmptab(,%eax,4)  
	

	* q3code.bk000422/unix/Makefile (MOUNT_DIR): rember to change.
	TODO: fix this bloody Makefile to be relocatable, damnit.

	* q3code.bk000422/cgame/cg_event.c: applied JCash fix again
	(see EV_EVENT_BITS below). Send e-mail to verify.

	* q3code.bk000422/renderer/tr_image.c: "../jpeg-6/jpeglib.h" again.
	
	* q3code.bk000422/: created from the id dump of today, lacking
	all but one of my changes (sigh). Swapped unix/ competely, takes
	care of 90%. Submitted all changes again to Robert...

2000-04-19  Bernd Kreimeier  <bk@lokigames.com>

	* q3code.bk000315/unix/linux_glimp.c (GLimp_EndFrame): 
	QGL_EnableLogging( r_logFile->value ) doesn't work?

	* q3code.bk000315/unix/linux_qgl.c:  GLimp_LogNewFrame() is 
	obsolete. QGL_EnableLogging was out of sync with Win32 and
	did not support the new framecounter decrement logic.

2000-04-03  Bernd Kreimeier  <bk@lokigames.com>

	* q3code.bk000315/server/sv_snapshot.c: svs.nextSnapshotEntities
	is a signed integer unconditionally incremented, which gets
	negative and causes a segfaulting indexing an array. Added reset
	to counter. Might fail if snapshot numbers are supposed to
	monotonically increase.

2000-04-02  Bernd Kreimeier  <bk@lokigames.com>

	* q3code.bk000315/client/cl_parse.c (CL_ParseServerMessage): 
	assert(0) on Illegible message (remember to +set in_mouse 0).
	TODO: have to add a dump message function, it's unreadable.

	* botlib/be_ai_goal.c (InitLevelItemHeap): loop counter -2
	left -2 with uninitialized next, and -1 disconnected. Removed
	redundant memset. There is an item alloc leak I suspect, as
	max_levelitems 1024 merely delayed the overflow error.

2000-04-01  Bernd Kreimeier  <bk@lokigames.com>

	* botlib/be_ai_goal.c (InitLevelItemHeap): still segfaults.
	Not memsetting the entire item heap. As items are cleared
	on return, that leaves only memory corruption?
	Later: upped max_levelitems from 256 to 1024
	Later: client dies on connect:
	  Error: CL_ParseServerMessage: Illegible server message 255


2000-03-31  Bernd Kreimeier  <bk@lokigames.com>

	* botlib/be_ai_goal.c: initializing global vars.
	Segfault in AllocLevelItem () 
	  at /home/bk/Games/Quake3/q3code/botlib/be_ai_goal.c:364
        I suspect that the initial freelevelitems setting is at
	the end of the list and eventually exposed.

	* cgame/cg_event.c: according to Johmn Cash: 
	 itemNum = (es->event & ~EV_EVENT_BITS) - EV_USE_ITEM0
        Quote: "This causes itemNum to be invalid about half the time, 
	preventing any client side effect tied to the item from occurring."
	
2000-03-06  Bernd Kreimeier  <bk@lokigames.com>

	* qcommon/common.c: set pushEvent buffer and indices
	to zero in Com_Init().

	* q3code/qcommon/qcommon.h: made SE_NONE (and for paranoia
	also NA_BOT) explicitely set to zero.

2000-02-27  Bernd Kreimeier  <bk@lokigames.com>

	* unix/Makefile: added dmalloc in an attempt to get on
	the Z_Free bug. Futile. Despite stripping dmalloc debug
	token down to essentials, I get a (seemingly bogus or
	unrelated):
	  debug-malloc library: dumping program, fatal error
          Error: possibly bad .c filename pointer (err 24)

	
2000-02-26  Bernd Kreimeier  <bk@lokigames.com>

	* qcommon/common.c: various debug builts to isolate the
	Z_Free bug. It reproducibly happens on some machines
	with SE_PACKET, but the packets themselves look
	thoroughly corrupted.

2000-02-21  Bernd Kreimeier  <bk@lokigames.com>

	* qcommon/common.c (Com_EventLoop): possible problem
	here, pointer does not get cleared.

	* unix/linux_glimp.c (InitSig): no signal handler.
	* common/common.c: dump in Com_Error for debug.

2000-02-17  Bernd Kreimeier  <bk@lokigames.com>

	* q3code: new dump from Zoid. Repeat tr_image.c fix.

	* unix/Makefile: added client/snd_adpcm.c (linkage errors).
	Later: added entire JPDIR and rules, for tr_image.c. 
	Later: had to fix fules for game/ai_*.c files.
	Later: removed ui/ui_quit.o (n/a)
	Later: took out -mpentiumpro -march=pentiumpro 

	* renderer/tr_image.c: windowism in #include path (see below).
         #include "..\jpeg-6\jpeglib.h"

1999-12-27  Bernd Kreimeier  <bk@lokigames.com>

	* Alpha: tried a dedicated server compile. Segfaults in
	../qcommon/files.c:1682, a paksort function doing pointer
	fiddling.

	* Makefile.alpha: created.
	Note: want to take the SDL/Setup autoconf ASAP.

	* unix/unix_main.c: fixed __axp__ to __alpha__, guarded
	_FPU_SETCW.

	* qcommon/vm_alpha.c: dummy, created.
	* qcommon/vm_null.c: dummy, created.

1999-12-04  Bernd Kreimeier  <bk@lokigames.com>

	* renderer/tr_image.c: windowism in #include path.
         #include "..\jpeg-6\jpeglib.h"
	
	* Revision 1.11: from Zoid by e-mail.
	Note: threw away my playground copy, starting with the
	ZIP file. Zoid's using CVS now, but we can't remote
	access it. Thus did the
	 "find . -name 'CVS' -exec rm -rf {} \;"
	and then track it as 3rd party source by
	

	* ChangeLog: created. Now starting to track Q3A source.

--------- q3code log ---------------------------------------------
